<?php

namespace app\admin\controller;

use think\Controller;
use think\Request;

class Article extends Controller
{

    protected $db;

    public function _initialize ()
	{
		parent::_initialize (); // TODO: Change the autogenerated stub

		$this->db= new \app\common\model\Article();
	}

	/**
     * 上传图片
     *
     * @return \think\Response
     */
    public function index()
    {
    	//获取首页所有数据
		$field=$this->db->getAll();
		//分配到页面
		$this->assign ('field',$field);
        return $this->fetch ();
    }

    public function upload(){
        $file = request()->file('file');
        // 移动到框架应用根目录/public/uploads/ 目录下
        $info = $file->move(ROOT_PATH . 'public' . DS . 'upload');
        $reubfo = array();  //定义一个返回的数组
        if($info){
            $reubfo['code']= 1;
            $reubfo['savename'] = "/upload/".$info->getSaveName(); 
        }else{
            // 上传失败获取错误信息
            $reubfo['code']= 0;
            $reubfo['err'] = $file->getError();
        }
        return $reubfo;
    }

    public function editUpload(){
        $file = request()->file('file');
        // 移动到框架应用根目录/public/uploads/ 目录下
        $info = $file->move(ROOT_PATH . 'public' . DS . 'editUpload');
        $reubfo = array();  //定义一个返回的数组
        if($info){
            $reubfo['code']= 0;
            $reubfo['msg']= '上传成功';
            $reubfo['data']['src']= "/editUpload/".$info->getSaveName(); 
        }else{
            // 上传失败获取错误信息
            $reubfo['code']= -1;
            $reubfo['err'] = $file->getError();
        }
        return json($reubfo);
    }

    /**
     * 显示文章添加
     *
     * @return \think\Response
     */
    public function store()
    {
    	if (\request ()->isPost ()){

			$res=$this->db->store(input('post.'));

			if ($res['valid']){
				//说明执行成功
				$this->success($res['msg'],'index');
			}else{
				//说明执行失败
				$this->error($res['msg']);
			}
		}
    	//获取分类数据
		$cateData=(new \app\common\model\Category())->getAll ();
		//halt ($cateData);
		//分配数据 到页面循环出来
		$this->assign ('cateData',$cateData);
		//获取标签数据
		$tagData=db ('tag')->select ();
		//halt ($tagData);
		$this->assign ('tagData',$tagData);
    	return $this->fetch ();
    }


      //编辑页面
     public function edit(){
    	if (\request ()->isPost ()){
             $res=$this->db->edit(input ('post.'));
			if ($res['valid']){
				//说明执行成功
				$this->success($res['msg'],'index');
			}else{
				//说明执行失败
				$this->error($res['msg']);
			}
		}

    	 $arc_id=input ('param.arc_id');
		 //获取分类数据
		 $cateData=(new \app\common\model\Category())->getAll ();
		 //halt ($cateData);
		 //分配数据 到页面循环出来
		 $this->assign ('cateData',$cateData);
		 //获取标签数据
		 $tagData=db('tag')->select ();
		 //halt ($tagData);
		 $this->assign ('tagData',$tagData);

		 //获取旧数据
          $oldData=db('article')->find($arc_id);
		  $this->assign ('oldData',$oldData);
		  //获取当前文章的所有标签
		 $tag_ids=db ('arc_tag')->where ('arc_id',$arc_id)->column ('tag_id');
		 //halt ($tag_ids);
		 $this->assign ('tag_ids',$tag_ids);
		 return $this->fetch ();

	 }


	 //排序
     public function changeSort(){

        if (\request ()->isAjax()){

        	$res=$this->db->changeSort(input('post.'));
        	if ($res['valid']){
        		$this->success ($res['msg'],'index');
			}else{
        		$this->error ($res['msg']);
			}
		}

	 }

	 //删除到回收站
	public function delToRecycle(){

    	$arc_id=input ('param.arc_id');
    	//将该数据移除到回收站 直接改变 数据表字段中 is_recycle的值就行  改成1；
		if ($this->db->save(['is_recycle'=>1],['arc_id'=>$arc_id])){
            //执行成功
			$this->success ('操作成功','index');
		}else{
			//执行失败
			$this->error ('操作失败') ;
		}
	}

	//回复数据
	public function outToReqycle(){

		$arc_id=input ('param.arc_id');
		//将该数据移除到回收站 直接改变 数据表字段中 is_recycle的值就行  改成1；
		if ($this->db->save(['is_recycle'=>2],['arc_id'=>$arc_id])){
			//执行成功
			$this->success ('操作成功','index');
		}else{
			//执行失败
			$this->error ('操作失败') ;
		}

	}

	//回收站管理

	public function reqycle(){
    	//echo 1;
		//获取首页所有数据
		$field=$this->db->getAll(1);
		//分配到页面
		$this->assign ('field',$field);
		return $this->fetch ();

	}

	//回收站彻底删除

	public function del(){
		$arc_id=input ('get.arc_id');
		$res=$this->db->del($arc_id);
		if ($res['valid']){
			//执行成功
			$this->success ($res['msg'],'index');
		}else{
			//执行失败
			$this->error ($res['msg']);
		}

	}
}

-- phpMyAdmin SQL Dump
-- version 4.4.15.10
-- https://www.phpmyadmin.net
--
-- Host: localhost
-- Generation Time: 2019-05-18 20:49:28
-- 服务器版本： 5.7.19-log
-- PHP Version: 7.2.4

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `blog_taotaifu_cn`
--

-- --------------------------------------------------------

--
-- 表的结构 `blog_admin`
--

CREATE TABLE IF NOT EXISTS `blog_admin` (
  `admin_id` int(10) unsigned NOT NULL COMMENT '用户表主键id',
  `admin_username` char(30) NOT NULL DEFAULT '' COMMENT '用户名',
  `admin_password` char(32) NOT NULL DEFAULT '' COMMENT '密码'
) ENGINE=MyISAM AUTO_INCREMENT=28 DEFAULT CHARSET=utf8 COMMENT='用户表';

--
-- 转存表中的数据 `blog_admin`
--

INSERT INTO `blog_admin` (`admin_id`, `admin_username`, `admin_password`) VALUES
(1, 'admin', 'gKjd5W7T3zzGPZJBiKMv5Q==');

-- --------------------------------------------------------

--
-- 表的结构 `blog_arc_tag`
--

CREATE TABLE IF NOT EXISTS `blog_arc_tag` (
  `arc_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '所属文章id',
  `tag_id` smallint(5) unsigned NOT NULL DEFAULT '0' COMMENT '所属标签id'
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='文章与标签关联表';

--
-- 转存表中的数据 `blog_arc_tag`
--

INSERT INTO `blog_arc_tag` (`arc_id`, `tag_id`) VALUES
(100, 1),
(104, 29),
(105, 33),
(104, 30),
(99, 2),
(104, 28),
(105, 1),
(103, 29),
(103, 28),
(103, 27),
(103, 2),
(103, 1),
(106, 27),
(106, 2),
(160, 2),
(160, 1),
(103, 30),
(103, 31),
(103, 32),
(103, 33),
(107, 1),
(107, 2),
(107, 27),
(107, 30),
(108, 28),
(108, 30),
(108, 31),
(108, 32),
(108, 33),
(109, 1),
(110, 1),
(110, 27),
(110, 33),
(111, 2),
(111, 27),
(111, 28),
(111, 29),
(111, 30),
(111, 31),
(111, 32),
(111, 33),
(112, 1),
(112, 27),
(113, 1),
(113, 27),
(114, 1),
(114, 27),
(115, 1),
(115, 2),
(115, 27),
(116, 1),
(116, 2),
(116, 27),
(116, 28),
(116, 29),
(116, 30),
(116, 31),
(116, 32),
(116, 33),
(117, 1),
(117, 2),
(117, 27),
(117, 28),
(117, 29),
(117, 30),
(117, 31),
(117, 32),
(117, 33),
(118, 1),
(118, 28),
(118, 29),
(118, 30),
(118, 31),
(118, 32),
(118, 33),
(119, 1),
(119, 2),
(119, 27),
(120, 1),
(120, 2),
(120, 27),
(120, 28),
(120, 29),
(120, 30),
(120, 31),
(120, 32),
(120, 33),
(121, 1),
(121, 2),
(121, 27),
(121, 28),
(121, 29),
(121, 30),
(121, 31),
(121, 32),
(121, 33),
(122, 1),
(122, 2),
(122, 27),
(122, 28),
(122, 29),
(122, 30),
(122, 31),
(122, 32),
(122, 33),
(123, 1),
(123, 2),
(123, 27),
(123, 28),
(123, 29),
(123, 30),
(123, 31),
(123, 32),
(123, 33),
(124, 1),
(124, 2),
(124, 27),
(124, 28),
(124, 29),
(124, 30),
(124, 31),
(124, 32),
(124, 33),
(125, 1),
(125, 2),
(125, 27),
(125, 28),
(125, 29),
(125, 30),
(125, 31),
(125, 32),
(125, 33),
(126, 1),
(126, 2),
(126, 27),
(126, 28),
(126, 29),
(126, 30),
(126, 31),
(126, 32),
(126, 33),
(127, 1),
(127, 2),
(127, 27),
(127, 28),
(127, 29),
(127, 30),
(127, 31),
(127, 32),
(127, 33),
(128, 1),
(128, 2),
(128, 27),
(128, 28),
(128, 29),
(128, 30),
(128, 31),
(128, 32),
(128, 33),
(129, 1),
(129, 2),
(129, 27),
(130, 1),
(130, 2),
(130, 27),
(131, 1),
(131, 2),
(131, 27),
(132, 27),
(133, 1),
(134, 1),
(134, 33),
(135, 1),
(135, 27),
(136, 1),
(136, 2),
(136, 27),
(137, 1),
(137, 2),
(137, 27),
(138, 1),
(138, 2),
(138, 27),
(139, 1),
(139, 2),
(139, 27),
(140, 1),
(140, 2),
(140, 27),
(141, 1),
(141, 2),
(141, 27),
(142, 1),
(142, 2),
(142, 27),
(143, 1),
(143, 2),
(144, 1),
(144, 2),
(144, 27),
(144, 28),
(144, 29),
(144, 30),
(144, 31),
(144, 32),
(144, 33),
(145, 1),
(145, 2),
(145, 27),
(145, 33),
(146, 27),
(147, 2),
(148, 2),
(148, 27),
(149, 1),
(150, 2),
(150, 27),
(150, 28),
(150, 29),
(150, 30),
(150, 31),
(150, 32),
(150, 33),
(151, 2),
(152, 1),
(152, 2),
(153, 1),
(154, 1),
(154, 33),
(155, 1),
(156, 1),
(156, 33),
(157, 1),
(157, 33),
(158, 1),
(158, 33),
(159, 1),
(161, 1),
(161, 33),
(162, 1),
(163, 1),
(164, 1),
(164, 2);

-- --------------------------------------------------------

--
-- 表的结构 `blog_article`
--

CREATE TABLE IF NOT EXISTS `blog_article` (
  `arc_id` int(10) unsigned NOT NULL COMMENT '文章表主键id',
  `arc_title` varchar(45) NOT NULL DEFAULT '' COMMENT '文章标题',
  `arc_sort` mediumint(8) unsigned NOT NULL DEFAULT '0' COMMENT '文章排序',
  `sendtime` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '发表时间',
  `updatetime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `arc_thumb` varchar(100) NOT NULL DEFAULT '' COMMENT '缩略图',
  `is_recycle` tinyint(3) unsigned NOT NULL DEFAULT '2' COMMENT '2为没有进入的回收站，1为在回收站中',
  `arc_digest` varchar(255) NOT NULL DEFAULT '' COMMENT '文章摘要',
  `arc_author` varchar(45) NOT NULL DEFAULT 'admin' COMMENT '作者',
  `cate_id` smallint(5) unsigned NOT NULL DEFAULT '0' COMMENT '所属分类id',
  `admin_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '所属用户id',
  `arc_content` text,
  `arc_click` mediumint(8) NOT NULL DEFAULT '0'
) ENGINE=MyISAM AUTO_INCREMENT=165 DEFAULT CHARSET=utf8 COMMENT='文章表';

--
-- 转存表中的数据 `blog_article`
--

INSERT INTO `blog_article` (`arc_id`, `arc_title`, `arc_sort`, `sendtime`, `updatetime`, `arc_thumb`, `is_recycle`, `arc_digest`, `arc_author`, `cate_id`, `admin_id`, `arc_content`, `arc_click`) VALUES
(104, '一款简洁好用的编辑器--Simditor', 100, 2019, '2019-03-15 10:41:02', '/upload/20190315/1cc029389beed6988dab94068e1ac21c.png', 2, '之前一直在用百度编辑器，功能也确实丰富，同时很多也确实没用上，界面就感觉比较冗余，Simditor编辑器感觉界面清新，需要的也都可以有，上传、代码个事、样式等等，是基于WYSIWYG的文本编辑器，支持浏览器: IE10+、Chrome、Firefox、Safari.喜欢你就上手...', 'Mrs.默先森', 43, 0, '<blockquote><p><span><span>安装下载</span></span></p></blockquote><p>npm安装：</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">$ npm install simditor<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p><span>bower安装</span></p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">$ bower install simditor<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>github：<a href="https://github.com/mycolorway/simditor" _src="https://github.com/mycolorway/simditor">https://github.com/mycolorway/simditor</a></p><p><span></span><br></p><blockquote><p><span><span>使用</span></span><br></p></blockquote><p>在web 应用中引入：<br></p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token operator">&lt;</span>link rel<span class="token operator">=</span><span class="token double-quoted-string string">"stylesheet"</span> type<span class="token operator">=</span><span class="token double-quoted-string string">"text/css"</span> href<span class="token operator">=</span><span class="token double-quoted-string string">"[style path]/simditor.css"</span> <span class="token operator">/</span><span class="token operator">&gt;</span>\r\n\r\n<span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token double-quoted-string string">"text/javascript"</span> src<span class="token operator">=</span><span class="token double-quoted-string string">"[script path]/jquery.min.js"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>\r\n<span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token double-quoted-string string">"text/javascript"</span> src<span class="token operator">=</span><span class="token double-quoted-string string">"[script path]/module.js"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>\r\n<span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token double-quoted-string string">"text/javascript"</span> src<span class="token operator">=</span><span class="token double-quoted-string string">"[script path]/hotkeys.js"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>\r\n<span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token double-quoted-string string">"text/javascript"</span> src<span class="token operator">=</span><span class="token double-quoted-string string">"[script path]/uploader.js"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>\r\n<span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token double-quoted-string string">"text/javascript"</span> src<span class="token operator">=</span><span class="token double-quoted-string string">"[script path]/simditor.js"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p><br></p><p>在项目中初始化出simditor:</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token operator">&lt;</span>textarea id<span class="token operator">=</span><span class="token double-quoted-string string">"editor"</span> placeholder<span class="token operator">=</span><span class="token double-quoted-string string">"武斌博客网：https://www.wubin.pro"</span> autofocus<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>textarea<span class="token operator">&gt;</span>\r\n<span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>\r\n    <span class="token keyword">var</span> editor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Simditor</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\r\n        textarea<span class="token punctuation">:</span> $<span class="token punctuation">(</span><span class="token single-quoted-string string">''#editor''</span><span class="token punctuation">)</span>\r\n        <span class="token comment">//optional options</span>\r\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>ok,到此默认的编辑器就可以看到了<br></p><p><img src="https://wubin.pro/Upload/ueditor/image/20180817/1534496728703959.png" title="1534496728703959.png" alt="屏幕快照 2018-08-17 下午5.05.04.png" width="670" height="438"></p><p><br></p><p>可选参数：<br></p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token keyword">var</span> editor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Simditor</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\r\n    textarea<span class="token punctuation">:</span> $<span class="token punctuation">(</span><span class="token single-quoted-string string">''#editor''</span><span class="token punctuation">)</span>\r\n    <span class="token comment">//optional options</span>\r\n    <span class="token punctuation">,</span>placeholder<span class="token punctuation">:</span><span class="token single-quoted-string string">''武斌博客网：https://www.wubin.pro''</span>\r\n    <span class="token punctuation">,</span>toolbar<span class="token punctuation">:</span><span class="token boolean">true</span><span class="token comment">//显示工具栏，默认值false</span>\r\n    <span class="token punctuation">,</span>toolbarFloat<span class="token punctuation">:</span><span class="token boolean">true</span><span class="token comment">//滚动时在浏览器顶部固定工具栏,默认值true</span>\r\n    <span class="token punctuation">,</span>toolbarHidden<span class="token punctuation">:</span><span class="token boolean">false</span><span class="token comment">//隐藏工具栏，默认值false</span>\r\n    <span class="token punctuation">,</span>defaultImage<span class="token punctuation">:</span><span class="token single-quoted-string string">''''</span><span class="token comment">//默认图像占位符。在Simditor中插入图片时使用,默认值''images/image.png''</span>\r\n    <span class="token punctuation">,</span>tabIndent<span class="token punctuation">:</span><span class="token boolean">true</span><span class="token comment">//使用tab缩进，默认true</span>\r\n    <span class="token punctuation">,</span>params<span class="token punctuation">:</span><span class="token punctuation">{</span>name<span class="token punctuation">:</span><span class="token single-quoted-string string">''超人''</span><span class="token punctuation">}</span><span class="token comment">//在textarea中插入隐藏输入以存储参数,默认值{}</span>\r\n    <span class="token punctuation">,</span>upload<span class="token punctuation">:</span><span class="token boolean">false</span><span class="token comment">//上传图片的额外参数，默认值false，可接受的值：false或key - value</span>\r\n    <span class="token punctuation">,</span>pasteImage<span class="token punctuation">:</span><span class="token boolean">false</span><span class="token comment">//通过剪贴板粘贴图像支持上传(仅支持Firefox and Chrome),默认值false</span>\r\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p><br></p><p>更多参数请参考&nbsp;<a href="https://simditor.tower.im//docs/doc-config.html" target="_blank" title="Options Doc">Options Doc</a>&nbsp;</p><p>如需要定义toolBar,可设置toolBar参数：</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">toolbar<span class="token punctuation">:</span><span class="token punctuation">[</span>\r\n    <span class="token single-quoted-string string">''title''</span><span class="token comment">//标题</span>\r\n    <span class="token punctuation">,</span><span class="token single-quoted-string string">''bold''</span><span class="token comment">//加粗</span>\r\n    <span class="token punctuation">,</span><span class="token single-quoted-string string">''italic''</span><span class="token comment">//斜体</span>\r\n    <span class="token punctuation">,</span><span class="token single-quoted-string string">''underline''</span><span class="token comment">//下划线</span>\r\n    <span class="token punctuation">,</span><span class="token single-quoted-string string">''strikethrough''</span><span class="token comment">//删除线</span>\r\n    <span class="token punctuation">,</span><span class="token single-quoted-string string">''fontScale''</span><span class="token comment">//字体缩放</span>\r\n    <span class="token punctuation">,</span><span class="token single-quoted-string string">''color''</span><span class="token comment">//字体颜色</span>\r\n    <span class="token punctuation">,</span><span class="token single-quoted-string string">''ol''</span><span class="token comment">//有序列表</span>\r\n    <span class="token punctuation">,</span><span class="token single-quoted-string string">''ul''</span><span class="token comment">//无序列表</span>\r\n    <span class="token punctuation">,</span><span class="token single-quoted-string string">''blockquote''</span><span class="token comment">//引用</span>\r\n    <span class="token punctuation">,</span><span class="token single-quoted-string string">''code''</span><span class="token comment">//代码</span>\r\n    <span class="token punctuation">,</span><span class="token single-quoted-string string">''table''</span><span class="token comment">//表格</span>\r\n    <span class="token punctuation">,</span><span class="token single-quoted-string string">''link''</span><span class="token comment">//链接</span>\r\n    <span class="token punctuation">,</span><span class="token single-quoted-string string">''image''</span><span class="token comment">//上传图片</span>\r\n    <span class="token punctuation">,</span><span class="token single-quoted-string string">''hr''</span><span class="token comment">//分割线</span>\r\n    <span class="token punctuation">,</span><span class="token single-quoted-string string">''indent''</span><span class="token comment">//缩进</span>\r\n    <span class="token punctuation">,</span><span class="token single-quoted-string string">''outdent''</span><span class="token comment">//反向缩进</span>\r\n    <span class="token punctuation">,</span><span class="token single-quoted-string string">''alignment''</span>\r\n<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p><br></p><p>上传参数<br></p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">upload<span class="token punctuation">:</span><span class="token punctuation">{</span>\r\n    url<span class="token punctuation">:</span> <span class="token single-quoted-string string">''''</span><span class="token comment">//上传url接口地址</span>\r\n    <span class="token punctuation">,</span>params<span class="token punctuation">:</span> <span class="token keyword">null</span><span class="token comment">//请求服务器携带的额外参数</span>\r\n    <span class="token punctuation">,</span>fileKey<span class="token punctuation">:</span> <span class="token single-quoted-string string">''upload_file''</span><span class="token comment">//上传文件name，等同    ,connectionCount: 3//可同时上传的图片数量</span>\r\n    <span class="token punctuation">,</span>leaveConfirm<span class="token punctuation">:</span> <span class="token single-quoted-string string">''文件上传中离开页面时的提示消息''</span>\r\n<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>上传完成返回的json数据<br></p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token punctuation">{</span>\r\n  <span class="token double-quoted-string string">"success"</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token operator">/</span><span class="token boolean">false</span><span class="token punctuation">,</span>\r\n  <span class="token double-quoted-string string">"msg"</span><span class="token punctuation">:</span> <span class="token double-quoted-string string">"error message"</span><span class="token punctuation">,</span> <span class="token shell-comment comment"># optional</span>\r\n  <span class="token double-quoted-string string">"file_path"</span><span class="token punctuation">:</span> <span class="token double-quoted-string string">"[real file path]"</span>\r\n<span class="token punctuation">}</span></code></pre></div>', 231),
(145, 'redis windows 客户端', 100, 0, '2019-03-17 10:12:24', '/upload/20190317/9752c43ba8bca959cd789b657207fb89.jpg', 2, '下载地址：https://github.com/MicrosoftArchive/redis/releases ', 'Mrs.默先森', 53, 0, '<p>下载地址：https://github.com/MicrosoftArchive/redis/releases</p><p><a href="http://www.koukousky.com/wp-content/uploads/2019/02/QQ%E6%88%AA%E5%9B%BE20190227235255.png" target="_blank"><img class="alignnone wp-image-2190 size-full" src="http://www.koukousky.com/wp-content/uploads/2019/02/QQ%E6%88%AA%E5%9B%BE20190227235255.png" alt="QQ截图20190227235255" width="1348" height="643"></a></p><p>&nbsp;</p><p><a href="http://www.koukousky.com/wp-content/uploads/2019/02/QQ%E5%9B%BE%E7%89%8720190227235210.png" target="_blank"><img class="alignnone wp-image-2189" src="http://www.koukousky.com/wp-content/uploads/2019/02/QQ%E5%9B%BE%E7%89%8720190227235210-496x300.png" alt="QQ图片20190227235210" width="496" height="300"></a></p>', 465),
(161, 'MySQLi面向对象实践--multi_query', 100, 0, '2019-04-09 11:20:09', '/upload/20190409/08c7ac9494e64fa54b36edd8a270dd7c.jpg', 2, '使用multi_query可以实现执行多条SQL语句，每一条SQL语句通过分号分隔。', 'Mrs.默先森', 65, 0, '<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;平在使用sql语句的时候，通常会用到执行数据操作，一般的是单一条的数据操作，多条说句操作没有怎么注意，现在给大家说说多条数据执行的函数。</p><div class="postBody"><div id="cnblogs_post_body" class="blogpost-body"><p>　　&nbsp; 多条用分号分隔的SQL语句中，只要有一条SQL语句执行失败，那么这一条SQL语句以及之后的SQL语句就不会执行。只有当第一条SQL语句执行失败，那么multi_query()的返回值才为false。如果第一条SQL语句执行成功了，那么都会返回true。</p><p>　　</p><div class="cnblogs_Highlighter sh-gutter"><div id="highlighter_77106" class="syntaxhighlighter  php"><table border="0" cellpadding="0" cellspacing="0" class="layui-table"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2" style="text-align: right;">1</div><div class="line number2 index1 alt1" style="text-align: right;">2</div><div class="line number3 index2 alt2" style="text-align: right;">3</div><div class="line number4 index3 alt1" style="text-align: right;">4</div><div class="line number5 index4 alt2" style="text-align: right;">5</div><div class="line number6 index5 alt1" style="text-align: right;">6</div><div class="line number7 index6 alt2" style="text-align: right;">7</div><div class="line number8 index7 alt1" style="text-align: right;">8</div><div class="line number9 index8 alt2" style="text-align: right;">9</div><div class="line number10 index9 alt1" style="text-align: right;">10</div><div class="line number11 index10 alt2" style="text-align: right;">11</div><div class="line number12 index11 alt1" style="text-align: right;">12</div><div class="line number13 index12 alt2" style="text-align: right;">13</div><div class="line number14 index13 alt1" style="text-align: right;">14</div><div class="line number15 index14 alt2" style="text-align: right;">15</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="php plain">&nbsp;&lt;?php</code></div><div class="line number2 index1 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$mysqli</code>&nbsp;<code class="php plain">=&nbsp;</code><code class="php keyword">new</code>&nbsp;<code class="php plain">Mysqli();</code></div><div class="line number3 index2 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$mysqli</code><code class="php plain">-&gt;connect(</code><code class="php string">"localhost"</code><code class="php plain">,</code><code class="php string">"root"</code><code class="php plain">,</code><code class="php string">"root"</code><code class="php plain">,</code><code class="php string">"test"</code><code class="php plain">);</code></div><div class="line number4 index3 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php keyword">if</code>&nbsp;<code class="php plain">(&nbsp;</code><code class="php variable">$mysqli</code><code class="php plain">-&gt;connect_errno ){</code></div><div class="line number5 index4 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php keyword">die</code><code class="php plain">(&nbsp;</code><code class="php variable">$mysqli</code><code class="php plain">-&gt;connect_error );</code></div><div class="line number6 index5 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php plain">}</code></div><div class="line number7 index6 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$mysqli</code><code class="php plain">-&gt;set_charset(</code><code class="php string">"utf8"</code><code class="php plain">);</code></div><div class="line number8 index7 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$sql</code>&nbsp;<code class="php plain">=&nbsp;</code><code class="php string">""</code><code class="php plain">;</code></div><div class="line number9 index8 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$sql</code>&nbsp;<code class="php plain">.=&nbsp;</code><code class="php string">"truncate table mysqli;"</code><code class="php plain">;&nbsp;</code><code class="php comments">//第一条SQL语句</code></div><div class="line number10 index9 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$sql</code>&nbsp;<code class="php plain">.=&nbsp;</code><code class="php string">"insert into mysqli (id, name) values (null, ''aaaa''),(null, ''bbbb'');"</code><code class="php plain">;</code><code class="php comments">//第二条SQL语句</code></div><div class="line number11 index10 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$sql</code>&nbsp;<code class="php plain">.=&nbsp;</code><code class="php string">"update table mysqli where uid = 1;"</code><code class="php plain">;</code><code class="php comments">//第三条SQL语句,因为没有uid字段，所以出错</code></div><div class="line number12 index11 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$sql</code>&nbsp;<code class="php plain">.=&nbsp;</code><code class="php string">"insert into mysqli (id, name) values (null, ''cccc'');"</code><code class="php plain">;</code></div><div class="line number13 index12 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$res</code>&nbsp;<code class="php plain">=&nbsp;</code><code class="php variable">$mysqli</code><code class="php plain">-&gt;multi_query(</code><code class="php variable">$sql</code><code class="php plain">);</code></div><div class="line number14 index13 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php plain">var_dump(</code><code class="php variable">$res</code><code class="php plain">);</code></div><div class="line number15 index14 alt2"><code class="php plain">&nbsp;?&gt;</code></div></div></td></tr></tbody></table></div></div><p>　　查看数据库：</p><div class="cnblogs_Highlighter sh-gutter"><div id="highlighter_361542" class="syntaxhighlighter  php"><table border="0" cellpadding="0" cellspacing="0" class="layui-table"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2" style="text-align: right;">1</div><div class="line number2 index1 alt1" style="text-align: right;">2</div><div class="line number3 index2 alt2" style="text-align: right;">3</div><div class="line number4 index3 alt1" style="text-align: right;">4</div><div class="line number5 index4 alt2" style="text-align: right;">5</div><div class="line number6 index5 alt1" style="text-align: right;">6</div><div class="line number7 index6 alt2" style="text-align: right;">7</div><div class="line number8 index7 alt1" style="text-align: right;">8</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="php plain">mysql&gt; select * from mysqli;</code></div><div class="line number2 index1 alt1"><code class="php plain">+----+------+</code></div><div class="line number3 index2 alt2"><code class="php plain">| id | name |</code></div><div class="line number4 index3 alt1"><code class="php plain">+----+------+</code></div><div class="line number5 index4 alt2"><code class="php plain">|&nbsp; 1 | aaaa |</code></div><div class="line number6 index5 alt1"><code class="php plain">|&nbsp; 2 | bbbb |</code></div><div class="line number7 index6 alt2"><code class="php plain">+----+------+</code></div><div class="line number8 index7 alt1"><code class="php plain">2 rows in set (0.00 sec)</code></div></div></td></tr></tbody></table></div></div><p>　　可以看到第三条SQL语句执行失败之后，第四条插入数据的SQL语句也没有执行</p><p>&nbsp;</p><h2><span>multi_query执行多条select查询语句</span></h2><p>　　对于执行多条select语句，那么返回的结果集也会有多个，所以就需要“切换结果集”，</p><p>　　使用Mysqli_result Mysqli::use_result 和&nbsp;Mysqli_result Mysqli::store_result()都可以将获取multi_query的结果中 指针所指向的结果集，通过移动内部指针来遍历多个结果集。</p><p>　　可以使用bool Mysqli::more_result()来检测是否还有结果集，如果有，则可以通过bool Mysqli::next_result()将内部指针指向下一个结果集。</p><h3>方法一：使用Mysqli_result Mysqli::use_result()</h3><div class="cnblogs_Highlighter sh-gutter"><div id="highlighter_115551" class="syntaxhighlighter  php"><table border="0" cellpadding="0" cellspacing="0" class="layui-table"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2" style="text-align: right;">1</div><div class="line number2 index1 alt1" style="text-align: right;">2</div><div class="line number3 index2 alt2" style="text-align: right;">3</div><div class="line number4 index3 alt1" style="text-align: right;">4</div><div class="line number5 index4 alt2" style="text-align: right;">5</div><div class="line number6 index5 alt1" style="text-align: right;">6</div><div class="line number7 index6 alt2" style="text-align: right;">7</div><div class="line number8 index7 alt1" style="text-align: right;">8</div><div class="line number9 index8 alt2" style="text-align: right;">9</div><div class="line number10 index9 alt1" style="text-align: right;">10</div><div class="line number11 index10 alt2" style="text-align: right;">11</div><div class="line number12 index11 alt1" style="text-align: right;">12</div><div class="line number13 index12 alt2" style="text-align: right;">13</div><div class="line number14 index13 alt1" style="text-align: right;">14</div><div class="line number15 index14 alt2" style="text-align: right;">15</div><div class="line number16 index15 alt1" style="text-align: right;">16</div><div class="line number17 index16 alt2" style="text-align: right;">17</div><div class="line number18 index17 alt1" style="text-align: right;">18</div><div class="line number19 index18 alt2" style="text-align: right;">19</div><div class="line number20 index19 alt1" style="text-align: right;">20</div><div class="line number21 index20 alt2" style="text-align: right;">21</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="php plain">&nbsp;&lt;?php</code></div><div class="line number2 index1 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$mysqli</code>&nbsp;<code class="php plain">=&nbsp;</code><code class="php keyword">new</code>&nbsp;<code class="php plain">Mysqli();</code></div><div class="line number3 index2 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$mysqli</code><code class="php plain">-&gt;connect(</code><code class="php string">"localhost"</code><code class="php plain">,</code><code class="php string">"root"</code><code class="php plain">,</code><code class="php string">"root"</code><code class="php plain">,</code><code class="php string">"test"</code><code class="php plain">);</code></div><div class="line number4 index3 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php keyword">if</code>&nbsp;<code class="php plain">(&nbsp;</code><code class="php variable">$mysqli</code><code class="php plain">-&gt;connect_errno ){</code></div><div class="line number5 index4 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php keyword">die</code><code class="php plain">(&nbsp;</code><code class="php variable">$mysqli</code><code class="php plain">-&gt;connect_error );</code></div><div class="line number6 index5 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php plain">}</code></div><div class="line number7 index6 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$mysqli</code><code class="php plain">-&gt;set_charset(</code><code class="php string">"utf8"</code><code class="php plain">);</code></div><div class="line number8 index7 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$sql</code>&nbsp;<code class="php plain">=&nbsp;</code><code class="php string">""</code><code class="php plain">;</code></div><div class="line number9 index8 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$sql</code>&nbsp;<code class="php plain">.=&nbsp;</code><code class="php string">"select * from mysqli;"</code><code class="php plain">;</code></div><div class="line number10 index9 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$sql</code>&nbsp;<code class="php plain">.=&nbsp;</code><code class="php string">"select * from user;"</code><code class="php plain">;</code></div><div class="line number11 index10 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$res</code>&nbsp;<code class="php plain">=&nbsp;</code><code class="php variable">$mysqli</code><code class="php plain">-&gt;multi_query(</code><code class="php variable">$sql</code><code class="php plain">);</code></div><div class="line number12 index11 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php keyword">if</code><code class="php plain">(&nbsp;</code><code class="php variable">$res</code>&nbsp;<code class="php plain">) {</code></div><div class="line number13 index12 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php keyword">do</code><code class="php plain">{</code></div><div class="line number14 index13 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php keyword">if</code><code class="php plain">(&nbsp;</code><code class="php variable">$mysqli_result</code>&nbsp;<code class="php plain">=&nbsp;</code><code class="php variable">$mysqli</code><code class="php plain">-&gt;use_result() ){</code></div><div class="line number15 index14 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php plain">print_r(&nbsp;</code><code class="php variable">$mysqli_result</code><code class="php plain">-&gt;fetch_all( MYSQLI_ASSOC ) );</code></div><div class="line number16 index15 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php plain">}</code></div><div class="line number17 index16 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php plain">}&nbsp;</code><code class="php keyword">while</code><code class="php plain">(&nbsp;</code><code class="php variable">$mysqli</code><code class="php plain">-&gt;more_results() &amp;&amp;&nbsp;</code><code class="php variable">$mysqli</code><code class="php plain">-&gt;next_result() );</code></div><div class="line number18 index17 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php plain">}&nbsp;</code><code class="php keyword">else</code>&nbsp;<code class="php plain">{</code></div><div class="line number19 index18 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php functions">echo</code>&nbsp;<code class="php string">"error "</code><code class="php plain">.</code><code class="php variable">$mysqli</code><code class="php plain">-&gt;errno.</code><code class="php string">" : "</code><code class="php plain">.</code><code class="php variable">$mysqli</code><code class="php plain">-&gt;error;</code></div><div class="line number20 index19 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php plain">}</code></div><div class="line number21 index20 alt2"><code class="php plain">?&gt;</code></div></div></td></tr></tbody></table></div></div><p>　　</p><h3>方法二：Mysqli_result Mysqli::store_result()</h3><div class="cnblogs_Highlighter sh-gutter"><div id="highlighter_414986" class="syntaxhighlighter  php"><table border="0" cellpadding="0" cellspacing="0" class="layui-table"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2" style="text-align: right;">1</div><div class="line number2 index1 alt1" style="text-align: right;">2</div><div class="line number3 index2 alt2" style="text-align: right;">3</div><div class="line number4 index3 alt1" style="text-align: right;">4</div><div class="line number5 index4 alt2" style="text-align: right;">5</div><div class="line number6 index5 alt1" style="text-align: right;">6</div><div class="line number7 index6 alt2" style="text-align: right;">7</div><div class="line number8 index7 alt1" style="text-align: right;">8</div><div class="line number9 index8 alt2" style="text-align: right;">9</div><div class="line number10 index9 alt1" style="text-align: right;">10</div><div class="line number11 index10 alt2" style="text-align: right;">11</div><div class="line number12 index11 alt1" style="text-align: right;">12</div><div class="line number13 index12 alt2" style="text-align: right;">13</div><div class="line number14 index13 alt1" style="text-align: right;">14</div><div class="line number15 index14 alt2" style="text-align: right;">15</div><div class="line number16 index15 alt1" style="text-align: right;">16</div><div class="line number17 index16 alt2" style="text-align: right;">17</div><div class="line number18 index17 alt1" style="text-align: right;">18</div><div class="line number19 index18 alt2" style="text-align: right;">19</div><div class="line number20 index19 alt1" style="text-align: right;">20</div><div class="line number21 index20 alt2" style="text-align: right;">21</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="php plain">&nbsp;&lt;?php</code></div><div class="line number2 index1 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$mysqli</code>&nbsp;<code class="php plain">=&nbsp;</code><code class="php keyword">new</code>&nbsp;<code class="php plain">Mysqli();</code></div><div class="line number3 index2 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$mysqli</code><code class="php plain">-&gt;connect(</code><code class="php string">"localhost"</code><code class="php plain">,</code><code class="php string">"root"</code><code class="php plain">,</code><code class="php string">"root"</code><code class="php plain">,</code><code class="php string">"test"</code><code class="php plain">);</code></div><div class="line number4 index3 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php keyword">if</code>&nbsp;<code class="php plain">(&nbsp;</code><code class="php variable">$mysqli</code><code class="php plain">-&gt;connect_errno ){</code></div><div class="line number5 index4 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php keyword">die</code><code class="php plain">(&nbsp;</code><code class="php variable">$mysqli</code><code class="php plain">-&gt;connect_error );</code></div><div class="line number6 index5 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php plain">}</code></div><div class="line number7 index6 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$mysqli</code><code class="php plain">-&gt;set_charset(</code><code class="php string">"utf8"</code><code class="php plain">);</code></div><div class="line number8 index7 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$sql</code>&nbsp;<code class="php plain">=&nbsp;</code><code class="php string">""</code><code class="php plain">;</code></div><div class="line number9 index8 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$sql</code>&nbsp;<code class="php plain">.=&nbsp;</code><code class="php string">"select * from mysqli;"</code><code class="php plain">;</code></div><div class="line number10 index9 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$sql</code>&nbsp;<code class="php plain">.=&nbsp;</code><code class="php string">"select * from user;"</code><code class="php plain">;</code></div><div class="line number11 index10 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$res</code>&nbsp;<code class="php plain">=&nbsp;</code><code class="php variable">$mysqli</code><code class="php plain">-&gt;multi_query(</code><code class="php variable">$sql</code><code class="php plain">);</code></div><div class="line number12 index11 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php keyword">if</code><code class="php plain">(&nbsp;</code><code class="php variable">$res</code>&nbsp;<code class="php plain">) {</code></div><div class="line number13 index12 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php keyword">do</code><code class="php plain">{</code></div><div class="line number14 index13 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php keyword">if</code><code class="php plain">(&nbsp;</code><code class="php variable">$mysqli_result</code>&nbsp;<code class="php plain">=&nbsp;</code><code class="php variable">$mysqli</code><code class="php plain">-&gt;store_result() ){</code></div><div class="line number15 index14 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php plain">print_r(&nbsp;</code><code class="php variable">$mysqli_result</code><code class="php plain">-&gt;fetch_all( MYSQLI_ASSOC ) );</code></div><div class="line number16 index15 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php plain">}</code></div><div class="line number17 index16 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php plain">}&nbsp;</code><code class="php keyword">while</code><code class="php plain">(&nbsp;</code><code class="php variable">$mysqli</code><code class="php plain">-&gt;more_results() &amp;&amp;&nbsp;</code><code class="php variable">$mysqli</code><code class="php plain">-&gt;next_result() );</code></div><div class="line number18 index17 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php plain">}&nbsp;</code><code class="php keyword">else</code>&nbsp;<code class="php plain">{</code></div><div class="line number19 index18 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php functions">echo</code>&nbsp;<code class="php string">"error "</code><code class="php plain">.</code><code class="php variable">$mysqli</code><code class="php plain">-&gt;errno.</code><code class="php string">" : "</code><code class="php plain">.</code><code class="php variable">$mysqli</code><code class="php plain">-&gt;error;</code></div><div class="line number20 index19 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php plain">}</code></div><div class="line number21 index20 alt2"><code class="php plain">&nbsp;?&gt;</code></div></div></td></tr></tbody></table></div></div></div></div>', 7);
INSERT INTO `blog_article` (`arc_id`, `arc_title`, `arc_sort`, `sendtime`, `updatetime`, `arc_thumb`, `is_recycle`, `arc_digest`, `arc_author`, `cate_id`, `admin_id`, `arc_content`, `arc_click`) VALUES
(160, '阿里云短信服务实现网站手机短信验证码', 100, 0, '2019-04-09 06:23:24', '/upload/20190409/cf6517a210e0c1a4a607ca632e5b2db4.png', 2, ' 今天在这里跟大家说一说关于验证码这点 。', 'Mrs.默先森', 44, 0, '<p>&nbsp; &nbsp; &nbsp; &nbsp;今天在这里跟大家说一说关于验证码这点 ，我们在上网期间，每次登陆都会碰到这样的问题，登陆的时候，有的是邮箱登录，有的是手机登录，现在人们平常用手机验证码的比较多，所以今天想用阿里云短信平台跟大家说一下手机短信验证码。其实，短信验证码用的是第三方，基本上都已经封装好了，我们拿过来用一下就行。<br>好了，废话不多说了，关于手机短信验证码总共可以分为以下几大步骤：<br>. . 短信服务开通<br>. . 获取阿里云访问秘钥(获取AK)<br>. . 申请短信签名<br>. .申请短信模板<br>. . SDK及DEMO下载<br>. . 前台代码<br>. .PHP实例代码 （后台）</p><p>1.短信服务开通<br>选择【产品】--【云通信】--【短信服务】 然后会跳转到短信服务开通页面 ，根据需求选择套餐，随后点击开通即可，如下图：<br><a href="https://iocaffcdn.phphub.org/uploads/images/201901/13/34248/58HWfLqpWC.png!large" class="fluidbox fluidbox__instance-3 fluidbox--initialized fluidbox--closed fluidbox--ready" style="text-align: center;"></a></p><div class="fluidbox__wrap"><a href="https://iocaffcdn.phphub.org/uploads/images/201901/13/34248/58HWfLqpWC.png!large" class="fluidbox fluidbox__instance-3 fluidbox--initialized fluidbox--closed fluidbox--ready" style="text-align: center;"><img src="https://iocaffcdn.phphub.org/uploads/images/201901/13/34248/58HWfLqpWC.png!large" alt="file" class="fluidbox__thumb"><div class="fluidbox__ghost"></div></a></div><p><br></p><div class="fluidbox__wrap"><img src="https://iocaffcdn.phphub.org/uploads/images/201901/13/34248/j7MpRixfyG.png!large" alt="file" class="fluidbox__thumb"><div class="fluidbox__ghost"></div></div><p></p><ol start="2"><li>获取阿里云访问秘钥(获取AK)<br>为了使用短信发送API-PHP SDK，您必须申请阿里云的访问密钥。阿里云访问秘钥是阿里云为用户使用 API（非控制台）来访问其云资源设计的“安全口令”。您可以用它来签名 API 请求内容以通过服务端的安全验证。<br>该访问秘钥成对（AccessKeyId 与 AccessKeySecret）生成和使用。每个阿里云用户可以创建多对访问秘钥，且可随时启用（Active）、禁用（Inactive）或者删除已经生成的访问秘钥对。<br>点击短信服务--【接口调用】==【获取Ak】，如果您还没有注册，您先注册，如果已经注册，就选择绑定已有阿里云账号，如下图：<br><a href="https://iocaffcdn.phphub.org/uploads/images/201901/13/34248/kDqbVS72g5.png!large" class="fluidbox fluidbox__instance-5 fluidbox--initialized fluidbox--closed fluidbox--ready" style="text-align: center;"><div class="fluidbox__wrap"><img src="https://iocaffcdn.phphub.org/uploads/images/201901/13/34248/kDqbVS72g5.png!large" alt="file" class="fluidbox__thumb"><div class="fluidbox__ghost"></div></div></a><br><a href="https://iocaffcdn.phphub.org/uploads/images/201901/13/34248/E1OIBegprL.png!large" class="fluidbox fluidbox__instance-6 fluidbox--initialized fluidbox--closed fluidbox--ready" style="text-align: center;"><div class="fluidbox__wrap"><img src="https://iocaffcdn.phphub.org/uploads/images/201901/13/34248/E1OIBegprL.png!large" alt="file" class="fluidbox__thumb"><div class="fluidbox__ghost"></div></div></a><br>这个时候会出来安全提示<br><a href="https://iocaffcdn.phphub.org/uploads/images/201901/13/34248/aCIumZ1mDF.png!large" class="fluidbox fluidbox__instance-7 fluidbox--initialized fluidbox--closed fluidbox--ready" style="text-align: center;"><div class="fluidbox__wrap"><img src="https://iocaffcdn.phphub.org/uploads/images/201901/13/34248/aCIumZ1mDF.png!large" alt="file" class="fluidbox__thumb"><div class="fluidbox__ghost"></div></div></a><br>接下来就是快速创建子用户AccessKey<br><a href="https://iocaffcdn.phphub.org/uploads/images/201901/13/34248/r7rUE0DIz4.png!large" class="fluidbox fluidbox__instance-8 fluidbox--initialized fluidbox--closed fluidbox--ready" style="text-align: center;"><div class="fluidbox__wrap"><img src="https://iocaffcdn.phphub.org/uploads/images/201901/13/34248/r7rUE0DIz4.png!large" alt="file" class="fluidbox__thumb"><div class="fluidbox__ghost"></div></div></a><br><a href="https://iocaffcdn.phphub.org/uploads/images/201901/13/34248/KTjHoYx53d.png!large" class="fluidbox fluidbox__instance-9 fluidbox--initialized fluidbox--closed fluidbox--ready" style="text-align: center;"><div class="fluidbox__wrap"><img src="https://iocaffcdn.phphub.org/uploads/images/201901/13/34248/KTjHoYx53d.png!large" alt="file" class="fluidbox__thumb"><div class="fluidbox__ghost"></div></div></a><br><a href="https://iocaffcdn.phphub.org/uploads/images/201901/13/34248/jzgjq7XwKc.png!large" class="fluidbox fluidbox__instance-10 fluidbox--initialized fluidbox--closed fluidbox--ready" style="text-align: center;"><div class="fluidbox__wrap"><img src="https://iocaffcdn.phphub.org/uploads/images/201901/13/34248/jzgjq7XwKc.png!large" alt="file" class="fluidbox__thumb"><div class="fluidbox__ghost"></div></div></a><br><a href="https://iocaffcdn.phphub.org/uploads/images/201901/13/34248/JVdccpUFPh.png!large" class="fluidbox fluidbox__instance-11 fluidbox--initialized fluidbox--closed fluidbox--ready" style="text-align: center;"><div class="fluidbox__wrap"><img src="https://iocaffcdn.phphub.org/uploads/images/201901/13/34248/JVdccpUFPh.png!large" alt="file" class="fluidbox__thumb"><div class="fluidbox__ghost"></div></div></a><br><a href="https://iocaffcdn.phphub.org/uploads/images/201901/13/34248/ClmdhrD7mA.png!large" class="fluidbox fluidbox__instance-12 fluidbox--initialized fluidbox--closed fluidbox--ready" style="text-align: center;"><div class="fluidbox__wrap"><img src="https://iocaffcdn.phphub.org/uploads/images/201901/13/34248/ClmdhrD7mA.png!large" alt="file" class="fluidbox__thumb"><div class="fluidbox__ghost"></div></div></a><br>【注意】这里的Ak信息记得自己妥善保管，可以自己下载下来</li></ol><p>3.申请短信签名和填写短信模板，如下图：<br><a href="https://iocaffcdn.phphub.org/uploads/images/201901/13/34248/BILuR3jKa6.png!large" class="fluidbox fluidbox__instance-13 fluidbox--initialized fluidbox--closed fluidbox--ready" style="text-align: center;"></a></p><div class="fluidbox__wrap"><a href="https://iocaffcdn.phphub.org/uploads/images/201901/13/34248/BILuR3jKa6.png!large" class="fluidbox fluidbox__instance-13 fluidbox--initialized fluidbox--closed fluidbox--ready" style="text-align: center;"><img src="https://iocaffcdn.phphub.org/uploads/images/201901/13/34248/BILuR3jKa6.png!large" alt="file" class="fluidbox__thumb"><div class="fluidbox__ghost"></div></a></div><p><a href="https://iocaffcdn.phphub.org/uploads/images/201901/13/34248/j7MpRixfyG.png!large" class="fluidbox fluidbox__instance-4 fluidbox--initialized fluidbox--closed fluidbox--ready" style="text-align: center;"></a><br>签名即经常在短信验证码中看到的下图红色部分：<br></p><div class="fluidbox__wrap"><img src="https://iocaffcdn.phphub.org/uploads/images/201901/13/34248/MJyY0s5IDv.png!large" alt="file" class="fluidbox__thumb"><div class="fluidbox__ghost"></div></div><p><a href="https://iocaffcdn.phphub.org/uploads/images/201901/13/34248/MJyY0s5IDv.png!large" class="fluidbox fluidbox__instance-14 fluidbox--initialized fluidbox--closed fluidbox--ready" style="text-align: center;"></a><br>根据用户属性来创建符合自身属性的签名信息。企业用户需要上传相关企业资质证明，个人用户需要上传证明个人身份的证明。 短信签名需要审核通过后才可以使用。在【签名管理】--【添加签名】，进行添加即可，可以添加多个签名，签名需要审核。<br>4.【模板管理】--【添加模板】 ，短信模板，即具体发送的短信内容。<br>短信模板可以支持验证码、短信通知、推广短信、国际/港澳台消息四种模式。验证码和短信通知，通过变量替换实现个性短信定制。推广短信不 支持在模板中添加变量，短信模板需要审核通过后才可以使用。</p><p></p><p>5 . SDK及DEMO下载<br>下载地址：&nbsp;<a href="https://help.aliyun.com/document_detail/55359.htmlspm=a2c4g.11186623.6.585.uqKHIX">https://help.aliyun.com/document_detail/55359.htmlspm=a2c4g.11186623.6.585.uqKHIX</a><br>这里使用SDK轻量版，更多需求可下载完整版， 我们只需要SignatureHelper.php文件即可 。<br><a href="https://iocaffcdn.phphub.org/uploads/images/201901/13/34248/eF6vsDEDLW.png!large" class="fluidbox fluidbox__instance-15 fluidbox--initialized fluidbox--closed fluidbox--ready" style="text-align: center;"></a></p><div class="fluidbox__wrap"><a href="https://iocaffcdn.phphub.org/uploads/images/201901/13/34248/eF6vsDEDLW.png!large" class="fluidbox fluidbox__instance-15 fluidbox--initialized fluidbox--closed fluidbox--ready" style="text-align: center;"><img src="https://iocaffcdn.phphub.org/uploads/images/201901/13/34248/eF6vsDEDLW.png!large" alt="file" class="fluidbox__thumb"><div class="fluidbox__ghost"></div></a></div><p></p><p>6.前台代码<br>本实例代码中包含手机验证码的发送， 生成随机验证码 ， 验证码的比对 ，前台倒计时功能 。<br><a href="https://iocaffcdn.phphub.org/uploads/images/201901/13/34248/coq0oSzWJS.png!large" class="fluidbox fluidbox__instance-16 fluidbox--initialized fluidbox--closed fluidbox--ready" style="text-align: center;"></a></p><div class="fluidbox__wrap"><a href="https://iocaffcdn.phphub.org/uploads/images/201901/13/34248/coq0oSzWJS.png!large" class="fluidbox fluidbox__instance-16 fluidbox--initialized fluidbox--closed fluidbox--ready" style="text-align: center;"><img src="https://iocaffcdn.phphub.org/uploads/images/201901/13/34248/coq0oSzWJS.png!large" alt="file" class="fluidbox__thumb"><div class="fluidbox__ghost"></div></a></div><p><br><span>前台实例代码</span></p><p></p><pre class=" language-php"><code class="  language-php"><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"beij_center"</span><span class="token operator">&gt;</span>\r\n    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"ger_zhuc_beij"</span><span class="token operator">&gt;</span>\r\n        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"ger_zhuc_biaot"</span><span class="token operator">&gt;</span>\r\n            <span class="token operator">&lt;</span>ul<span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span>li <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"ger_border_color"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>a<span class="token operator">&gt;</span>个人注册<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>我已经注册，现在就<span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"ftx-05 ml10"</span> href<span class="token operator">=</span><span class="token double-quoted-string string">"{{route (''home.login'')}}"</span><span class="token operator">&gt;</span>登录<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>\r\n            <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">&gt;</span>\r\n        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"zhuc_biaod"</span><span class="token operator">&gt;</span>\r\n            <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token operator">--</span>form表单<span class="token operator">--</span><span class="token punctuation">}</span><span class="token punctuation">}</span>\r\n            <span class="token operator">&lt;</span>form action<span class="token operator">=</span><span class="token double-quoted-string string">"{{route (''home.user.store'')}}"</span>method<span class="token operator">=</span><span class="token double-quoted-string string">"post"</span><span class="token operator">&gt;</span>\r\n                @csrf\r\n                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"reg-items"</span><span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"reg-label"</span><span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span>label <span class="token keyword">for</span><span class="token operator">=</span><span class="token double-quoted-string string">"J_Name"</span><span class="token operator">&gt;</span>用户名：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span>input <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"i-text"</span> type<span class="token operator">=</span><span class="token double-quoted-string string">"text"</span> name<span class="token operator">=</span><span class="token double-quoted-string string">"name"</span> placeholder<span class="token operator">=</span><span class="token double-quoted-string string">"请输入用户名"</span><span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>备注<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>display使用 inline<span class="token operator">-</span>block<span class="token operator">--</span><span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"msg-box"</span><span class="token operator">&gt;</span>\r\n                        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"msg-box"</span> style<span class="token operator">=</span><span class="token double-quoted-string string">"display: none;"</span><span class="token operator">&gt;</span>\r\n                            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"msg-weak"</span> style<span class="token operator">=</span><span class="token double-quoted-string string">"display: inline-block;"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>i<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span>\r\n                                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"msg-cont"</span><span class="token operator">&gt;</span><span class="token number">4</span><span class="token operator">-</span><span class="token number">20</span>个字符，支持汉字、字母、数字及<span class="token double-quoted-string string">"-"</span>、<span class="token double-quoted-string string">"_"</span>组合<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n                            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n                        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n                        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"msg-weak err-tips"</span> style<span class="token operator">=</span><span class="token double-quoted-string string">"display: none;"</span><span class="token operator">&gt;</span>\r\n                            <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>请输入用户名<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n                        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"suc-icon"</span> style<span class="token operator">=</span><span class="token double-quoted-string string">"display: none"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"reg-items"</span><span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"reg-label"</span><span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span>label <span class="token keyword">for</span><span class="token operator">=</span><span class="token double-quoted-string string">"J_Name"</span><span class="token operator">&gt;</span>设置密码：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span>input <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"i-text"</span> type<span class="token operator">=</span><span class="token double-quoted-string string">"password"</span> name<span class="token operator">=</span><span class="token double-quoted-string string">"password"</span> placeholder<span class="token operator">=</span><span class="token double-quoted-string string">"请输入密码"</span><span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>备注<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>display使用 inline<span class="token operator">-</span>block<span class="token operator">--</span><span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"msg-box"</span><span class="token operator">&gt;</span>\r\n                        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"msg-box"</span> style<span class="token operator">=</span><span class="token double-quoted-string string">"display: none;"</span><span class="token operator">&gt;</span>\r\n                            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"msg-weak"</span> style<span class="token operator">=</span><span class="token double-quoted-string string">"display: inline-block;"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>i<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span>\r\n                                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"msg-cont"</span><span class="token operator">&gt;</span>键盘大写锁定已打开，请注意大小写<span class="token operator">!</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n                            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n                        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n                        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"msg-weak err-tips"</span> style<span class="token operator">=</span><span class="token double-quoted-string string">"display:none;"</span><span class="token operator">&gt;</span>\r\n                            <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>请输入密码<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n                        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"reg-items"</span><span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"reg-label"</span><span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span>label <span class="token keyword">for</span><span class="token operator">=</span><span class="token double-quoted-string string">"J_Name"</span><span class="token operator">&gt;</span>确认密码：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span>input <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"i-text"</span> type<span class="token operator">=</span><span class="token double-quoted-string string">"password"</span> name<span class="token operator">=</span><span class="token double-quoted-string string">"password_confirmation"</span> placeholder<span class="token operator">=</span><span class="token double-quoted-string string">"请输入确认密码"</span><span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>备注<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>display使用 inline<span class="token operator">-</span>block<span class="token operator">--</span><span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"msg-box"</span><span class="token operator">&gt;</span>\r\n                        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"msg-weak err-tips"</span> style<span class="token operator">=</span><span class="token double-quoted-string string">"display: none;"</span><span class="token operator">&gt;</span>\r\n                            <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>密码不一样<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n                        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"reg-items"</span><span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"reg-label"</span><span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span>label <span class="token keyword">for</span><span class="token operator">=</span><span class="token double-quoted-string string">"J_Name"</span><span class="token operator">&gt;</span>账号：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span>input <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"i-text box"</span> type<span class="token operator">=</span><span class="token double-quoted-string string">"text"</span> value<span class="token operator">=</span><span class="token double-quoted-string string">"{{old (''email'')}}"</span> name<span class="token operator">=</span><span class="token double-quoted-string string">"account"</span> placeholder<span class="token operator">=</span><span class="token double-quoted-string string">"请输入注册账号"</span><span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>备注<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>display使用 inline<span class="token operator">-</span>block<span class="token operator">--</span><span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"msg-box"</span><span class="token operator">&gt;</span>\r\n                        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"msg-weak err-tips"</span> style<span class="token operator">=</span><span class="token double-quoted-string string">"display:none;"</span><span class="token operator">&gt;</span>\r\n                            <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>账号不能为空<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n                        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"reg-items"</span><span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"reg-label"</span><span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span>label <span class="token keyword">for</span><span class="token operator">=</span><span class="token double-quoted-string string">"J_Name"</span><span class="token operator">&gt;</span>验证码：<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span>input <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"i-text i-short"</span> type<span class="token operator">=</span><span class="token double-quoted-string string">"text"</span> placeholder<span class="token operator">=</span><span class="token double-quoted-string string">"请输入验证码"</span> name<span class="token operator">=</span><span class="token double-quoted-string string">"code"</span> value<span class="token operator">=</span><span class="token double-quoted-string string">""</span> aria<span class="token operator">-</span>label<span class="token operator">=</span><span class="token double-quoted-string string">"Recipient''s username"</span> aria<span class="token operator">-</span>describedby<span class="token operator">=</span><span class="token double-quoted-string string">"basic-addon2"</span><span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"check check-border"</span> style<span class="token operator">=</span><span class="token double-quoted-string string">"position:relative;left:0"</span><span class="token operator">&gt;</span>\r\n                        <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token double-quoted-string string">"javascript:;"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"check-phone"</span> name<span class="token operator">=</span><span class="token double-quoted-string string">"code"</span> onclick<span class="token operator">=</span><span class="token double-quoted-string string">"send(this)"</span> style<span class="token operator">=</span><span class="token double-quoted-string string">"padding:11px 10px 14px 10px;*line-height:60px;"</span><span class="token operator">&gt;</span>获取验证码<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>\r\n                        <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"check-phone disable"</span> style<span class="token operator">=</span><span class="token double-quoted-string string">"display: none;"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>em<span class="token operator">&gt;</span><span class="token number">60</span><span class="token operator">&lt;</span><span class="token operator">/</span>em<span class="token operator">&gt;</span>秒后重新获取<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>\r\n                        <span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"check-phone"</span> style<span class="token operator">=</span><span class="token double-quoted-string string">"display: none;padding:11px 10px 14px 10px"</span><span class="token operator">&gt;</span>重新获取验证码<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>备注<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>display使用 inline<span class="token operator">-</span>block<span class="token operator">--</span><span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"msg-box"</span><span class="token operator">&gt;</span>\r\n                        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"msg-weak err-tips"</span> style<span class="token operator">=</span><span class="token double-quoted-string string">"display:none;"</span><span class="token operator">&gt;</span>\r\n                            <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>请输入验证码<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n                        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"reg-items"</span><span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"reg-label"</span><span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span>label <span class="token keyword">for</span><span class="token operator">=</span><span class="token double-quoted-string string">"J_Name"</span><span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"dag_biaod"</span><span class="token operator">&gt;</span>\r\n                        <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token double-quoted-string string">"checkbox"</span> value<span class="token operator">=</span><span class="token double-quoted-string string">"english"</span><span class="token operator">&gt;</span>\r\n                        阅读并同意\r\n                        <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token double-quoted-string string">"#"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"ftx-05 ml10"</span><span class="token operator">&gt;</span>《wangdi通城用户注册协议》<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>\r\n                        <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token double-quoted-string string">"#"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"ftx-05 ml10"</span><span class="token operator">&gt;</span>《隐私协议》<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"reg-items"</span><span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"reg-label"</span><span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span>label <span class="token keyword">for</span><span class="token operator">=</span><span class="token double-quoted-string string">"J_Name"</span><span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span>button <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"reg-btn"</span> value<span class="token operator">=</span><span class="token double-quoted-string string">"立即注册"</span> type<span class="token operator">=</span><span class="token double-quoted-string string">"submit"</span><span class="token operator">&gt;</span>立即注册<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n            <span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">&gt;</span>\r\n        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"xiaogg"</span><span class="token operator">&gt;</span>\r\n            <span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token double-quoted-string string">"{{asset(''org/home'')}}/images/cdsgfd.jpg"</span><span class="token operator">&gt;</span>\r\n        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></code></pre><p>7.PHP实例代码（后台）</p><pre class=" language-php"><code class="  language-php"><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Controllers</span><span class="token punctuation">;</span>\r\n\r\n<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Requests<span class="token punctuation">\\</span>RegisterRequest</span><span class="token punctuation">;</span>\r\n<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Requests<span class="token punctuation">\\</span>UserRequest</span><span class="token punctuation">;</span>\r\n<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>User</span><span class="token punctuation">;</span>\r\n<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Request</span><span class="token punctuation">;</span>\r\n<span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token keyword">extends</span> <span class="token class-name">Controller</span>\r\n<span class="token punctuation">{</span>\r\n    <span class="token comment">//加载登录</span>\r\n    <span class="token keyword">public</span> <span class="token keyword">function</span> login <span class="token punctuation">(</span> Request <span class="token variable">$request</span> <span class="token punctuation">)</span>\r\n    <span class="token punctuation">{</span>\r\n       <span class="token comment">//dd ($request-&gt;all ());</span>\r\n        <span class="token keyword">return</span> view <span class="token punctuation">(</span> <span class="token single-quoted-string string">''user.login''</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n    <span class="token punctuation">}</span>\r\n\r\n    <span class="token comment">//登录提交</span>\r\n    <span class="token keyword">public</span> <span class="token keyword">function</span> loginForm <span class="token punctuation">(</span> Request <span class="token variable">$request</span> <span class="token punctuation">)</span>\r\n    <span class="token punctuation">{</span>\r\n         <span class="token comment">//dd (1);</span>\r\n        <span class="token comment">//后台验证</span>\r\n        <span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">validate</span> <span class="token punctuation">(</span><span class="token variable">$request</span><span class="token punctuation">,</span><span class="token punctuation">[</span>\r\n            <span class="token single-quoted-string string">''email''</span>   <span class="token operator">=</span><span class="token operator">&gt;</span><span class="token single-quoted-string string">''email''</span> <span class="token punctuation">,</span>\r\n            <span class="token single-quoted-string string">''password''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token single-quoted-string string">''required|min:6''</span>\r\n        <span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span>\r\n            <span class="token single-quoted-string string">''email.email''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token single-quoted-string string">''请输入邮箱''</span><span class="token punctuation">,</span>\r\n            <span class="token single-quoted-string string">''password.required''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token single-quoted-string string">''请输入登录密码''</span><span class="token punctuation">,</span>\r\n            <span class="token single-quoted-string string">''password.min''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token single-quoted-string string">''输入的密码不得少于6位''</span>\r\n        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n        <span class="token comment">//执行认证</span>\r\n        <span class="token variable">$credentials</span><span class="token operator">=</span><span class="token variable">$request</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">only</span><span class="token punctuation">(</span> <span class="token single-quoted-string string">''email''</span> <span class="token punctuation">,</span> <span class="token single-quoted-string string">''password''</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n        <span class="token keyword">if</span><span class="token punctuation">(</span>\\<span class="token scope">Auth<span class="token punctuation">::</span></span><span class="token function">attempt</span><span class="token punctuation">(</span> <span class="token variable">$credentials</span> <span class="token punctuation">,</span> <span class="token variable">$request</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">remember</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>\r\n            <span class="token comment">//登录成功，跳转到首页</span>\r\n            <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token variable">$request</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">from</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>\r\n                <span class="token keyword">return</span> <span class="token function">redirect</span><span class="token punctuation">(</span> <span class="token variable">$request</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">from</span> <span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">with</span><span class="token punctuation">(</span> <span class="token single-quoted-string string">''success''</span> <span class="token punctuation">,</span> <span class="token single-quoted-string string">''登录成功''</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n            <span class="token punctuation">}</span>\r\n\r\n            <span class="token keyword">return</span> <span class="token function">redirect</span><span class="token punctuation">(</span> <span class="token single-quoted-string string">''/''</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">with</span><span class="token punctuation">(</span> <span class="token single-quoted-string string">''success''</span> <span class="token punctuation">,</span> <span class="token single-quoted-string string">''登录成功''</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n        <span class="token punctuation">}</span>\r\n        <span class="token keyword">return</span> <span class="token function">redirect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">back</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">with</span><span class="token punctuation">(</span> <span class="token single-quoted-string string">''danger''</span> <span class="token punctuation">,</span> <span class="token single-quoted-string string">''用户名密码不正确''</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n    <span class="token punctuation">}</span>\r\n\r\n    <span class="token comment">//加载注册</span>\r\n    <span class="token keyword">public</span> <span class="token keyword">function</span> register <span class="token punctuation">(</span><span class="token punctuation">)</span>\r\n    <span class="token punctuation">{</span>\r\n        <span class="token keyword">return</span> view <span class="token punctuation">(</span> <span class="token single-quoted-string string">''user.register''</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n    <span class="token punctuation">}</span>\r\n\r\n    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">store</span><span class="token punctuation">(</span> RegisterRequest <span class="token variable">$request</span> <span class="token punctuation">)</span>\r\n    <span class="token punctuation">{</span>\r\n        <span class="token comment">//dd($request-&gt;all());</span>\r\n        <span class="token comment">//将数据存储到数据表</span>\r\n        <span class="token variable">$data</span>              <span class="token operator">=</span><span class="token variable">$request</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n        <span class="token variable">$data</span><span class="token punctuation">[</span> <span class="token single-quoted-string string">''password''</span> <span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">bcrypt</span><span class="token punctuation">(</span> <span class="token variable">$data</span><span class="token punctuation">[</span> <span class="token single-quoted-string string">''password''</span> <span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n        <span class="token scope">User<span class="token punctuation">::</span></span><span class="token function">create</span><span class="token punctuation">(</span> <span class="token variable">$data</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n        <span class="token comment">//模型事件，需要再注册之后，把email_verified_at字段事件自动处理</span>\r\n        <span class="token comment">//提示并且跳转</span>\r\n        <span class="token keyword">return</span> <span class="token function">redirect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">route</span><span class="token punctuation">(</span> <span class="token single-quoted-string string">''login''</span> <span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">with</span><span class="token punctuation">(</span> <span class="token single-quoted-string string">''success''</span> <span class="token punctuation">,</span> <span class="token single-quoted-string string">''注册成功''</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n    <span class="token punctuation">}</span>\r\n<span class="token punctuation">}</span></code></pre><p>后台登录方法代码</p><pre class=" language-php"><code class="  language-php"><span class="token keyword">class</span> <span class="token class-name">LoginController</span> <span class="token keyword">extends</span> <span class="token class-name">Controller</span>\r\n<span class="token punctuation">{</span>\r\n\r\n    <span class="token keyword">public</span> <span class="token keyword">function</span> index <span class="token punctuation">(</span><span class="token punctuation">)</span>\r\n    <span class="token punctuation">{</span>\r\n        <span class="token keyword">return</span> view <span class="token punctuation">(</span> <span class="token single-quoted-string string">''home.login.login''</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n    <span class="token punctuation">}</span>\r\n\r\n    <span class="token comment">//加载登录页面</span>\r\n  <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">login</span><span class="token punctuation">(</span>HomeLoginRequest <span class="token variable">$request</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\r\n\r\n        <span class="token comment">//判断用户是邮箱登录还是电话号码登录</span>\r\n      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">filter_var</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token punctuation">[</span><span class="token single-quoted-string string">''account''</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token constant">FILTER_VALIDATE_EMAIL</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\r\n          <span class="token variable">$data</span><span class="token punctuation">[</span><span class="token single-quoted-string string">''email''</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$request</span><span class="token punctuation">[</span><span class="token single-quoted-string string">''account''</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n      <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>\r\n          <span class="token variable">$data</span><span class="token punctuation">[</span><span class="token single-quoted-string string">''mobile''</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$request</span><span class="token punctuation">[</span><span class="token single-quoted-string string">''account''</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n      <span class="token punctuation">}</span>\r\n       <span class="token variable">$data</span><span class="token punctuation">[</span><span class="token single-quoted-string string">''password''</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable">$request</span><span class="token punctuation">[</span><span class="token single-quoted-string string">''password''</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n\r\n      <span class="token keyword">if</span> <span class="token punctuation">(</span> \\<span class="token scope">Auth<span class="token punctuation">::</span></span>attempt <span class="token punctuation">(</span> <span class="token variable">$data</span> <span class="token punctuation">,</span> <span class="token variable">$request</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">remember</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span>\r\n      <span class="token punctuation">{</span>\r\n\r\n          <span class="token keyword">return</span> redirect <span class="token punctuation">(</span> <span class="token variable">$request</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">query</span> <span class="token punctuation">(</span> <span class="token single-quoted-string string">''from''</span> <span class="token punctuation">)</span> <span class="token operator">?</span><span class="token punctuation">:</span> <span class="token single-quoted-string string">''/''</span> <span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">with</span> <span class="token punctuation">(</span> <span class="token single-quoted-string string">''success''</span> <span class="token punctuation">,</span> <span class="token single-quoted-string string">''登录成功''</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n      <span class="token punctuation">}</span>\r\n\r\n      <span class="token keyword">return</span> back <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">with</span> <span class="token punctuation">(</span> <span class="token single-quoted-string string">''danger''</span> <span class="token punctuation">,</span> <span class="token single-quoted-string string">''账号不存在或密码错误''</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n\r\n    <span class="token punctuation">}</span>\r\n  <span class="token punctuation">}</span></code></pre><p>这些弄完之后就可以实现短信验证码注册登录了，您可以试一试，有问题请联系我，可以给我发邮件哦，729589198@qq.com</p>', 10);
INSERT INTO `blog_article` (`arc_id`, `arc_title`, `arc_sort`, `sendtime`, `updatetime`, `arc_thumb`, `is_recycle`, `arc_digest`, `arc_author`, `cate_id`, `admin_id`, `arc_content`, `arc_click`) VALUES
(106, '简单好用的 Linux/Windows 面板(一键创建网站、FTP、数据库)', 100, 0, '2019-03-15 12:46:26', '/upload/20190315/ba0ea3bda636029699a5f492e6c7ba32.png', 2, 'Linux版请确保纯净系统安装(支持CentOS、Ubuntu、Debian、Fedora)，一键创建网站、FTP、数据库、SSL；安全管理，计划任务，文件管理，Tomcat，PHP多版本共存及切换；自带LNMP与LAMP;重要的是永久免费且每周三更新...2分钟装好面板，一键管理服务器...', 'Mrs.默先森', 53, 0, '<p>Linux版请确保纯净系统安装(支持CentOS、Ubuntu、Debian、Fedora)，一键创建网站、FTP、数据库、SSL；安全管理，计划任务，文件管理，Tomcat，PHP多版本共存及切换；自带LNMP与LAMP;重要的是永久免费且每周三更新...2分钟装好面板，一建管理服务器</p><p><br></p><p>面板官网地址：<a href="https://www.bt.cn/" target="_blank" title="https://www.bt.cn/" textvalue="https://www.bt.cn/">https://www.bt.cn/</a></p><p>安装请点击：<a href="https://www.bt.cn/bbs/thread-1186-1-1.html" target="_blank" title="https://www.bt.cn/bbs/thread-1186-1-1.html">https://www.bt.cn/bbs/thread-1186-1-1.html</a></p><p><br></p><p>超人这里使用的是linux面板；</p><p>以linux介绍为主；</p><p><br></p><p>体验感觉还是非常方便的；</p><p>免除繁琐的命令操作，对于不习惯命令操作的童鞋来说；</p><p>是个不错的选择；</p><p>可一键安装lamp、lnmp；</p><p>一键创建ftp、网站、数据库并进行方便管理；</p><p><br></p><p>更多的一键整合；</p><p>伪静态、301、SSL、定期备份、反向代理、php切换；</p><p>提供SSH开启关闭服务，SSH端口更改、禁ping、防火墙端口方形以及操作日志查看</p><h3>系统要求</h3><blockquote><p>操作系统：全新系统(支持CentOS、Ubuntu、Debian、Fedora)，</p><p>确保是干净的操作系统，没有安装过其它环境带的Apache/Nginx/php/MySQL</p><p>内存要求：内存要求最低128MB，推荐512MB以上，纯面板约占系统10MB内存</p><p><br></p></blockquote><h3><span hiragino="" sans="" microsoft="" font-size:="" background-color:="">安装方法 &nbsp;&nbsp;<a href="https://www.bt.cn/bbs/thread-1186-1-1.html" target="_blank" title="更详细教程" textvalue="更详细教程>>">更详细教程&gt;&gt;</a></span></h3><blockquote><p><span hiragino="" sans="" microsoft="" font-size:="" background-color:=""></span><span>使用 SSH 连接工具</span><span>连接到您的 Linux 服务器后，执行以下命令开始安装（大约2分钟完成面板安装）：</span><span hiragino="" sans="" microsoft="" font-size:="" background-color:=""></span></p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">yum install <span class="token operator">-</span>y wget <span class="token operator">&amp;&amp;</span> wget <span class="token operator">-</span>O install<span class="token punctuation">.</span>sh http<span class="token punctuation">:</span><span class="token comment">//download.bt.cn/install/install.sh &amp;&amp; s</span></code></pre></div></blockquote>', 605),
(107, 'atom-beauty格式化php代码提示', 100, 0, '2019-03-15 12:49:30', '/upload/20190315/925440f27f4e5aff7278b0b0abff7408.png', 2, 'Could not find ''php-cs-fixer''. The program may not be installed. See php-cs-fixer installation instructions at https://github.com/Glavin001/atom-beautify#beautifiers or go t', 'Mrs.默先森', 57, 0, '<h1 label="标题居左"><span>php-cs-fixer简介</span></h1><p><span sf="" ui="" pingfang="" hiragino="" sans="" microsoft="" wenquanyi="" micro="" text-align:="" background-color:="">php-cs-fixer</span><span sf="" ui="" pingfang="" hiragino="" sans="" microsoft="" wenquanyi="" micro="" text-align:="" background-color:="">是自动规范化php代码插件，良好的代码规范可以提高代码可读性，减少团队沟通维护成本</span></p><blockquote><p><a href="https://atom.io/packages/php-cs-fixer" target="_blank" title="php-cs-fixer Atom-Package" textvalue="php-cs-fixer Atom-Package">php-cs-fixer Atom-Package</a></p></blockquote><p>atom-beauty进行php代码格式化</p><p>一直出现错误提示</p><p>找不到`php-cs-fixer`</p><p><br></p><h1 label="标题居左"><span>Mac OS X + brew解决方法</span></h1><p><br></p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">brew install php<span class="token operator">-</span>cs<span class="token operator">-</span>fixer<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>查看安装位置：</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">wubindeMacBook<span class="token operator">-</span>Pro<span class="token punctuation">:</span><span class="token operator">~</span> wubin$ which php<span class="token operator">-</span>cs<span class="token operator">-</span>fixer\r\n<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>bin<span class="token operator">/</span>php<span class="token operator">-</span>cs<span class="token operator">-</span>fixer<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>如此解决<br></p><p><br></p><h1 label="标题居左"><span>其他方式配置php-cs-fixer</span></h1><blockquote><p>1.安装<a href="https://github.com/FriendsOfPHP/PHP-CS-Fixer/releases" target="_blank" title="php-cs-fixer.phar">php-cs-fixer.phar</a>文件<br></p></blockquote><p>详细安装使用方式可取<a href="https://github.com/FriendsOfPHP/PHP-CS-Fixer" target="_blank" title="php-cs-fixer">php-cs-fixer</a>官网查看</p><p>文件可现在到电脑上的任何地方</p><p>将下载好的php-cs-fixer的路径粘贴到配置项处即可&nbsp;</p><p>以atom配置为例</p><p><br></p><blockquote><p>2.配置atom-beauty</p></blockquote><p>找见已安装的atom-beauty扩展<br></p><p>点击设置</p><p>找到Executables将右侧箭头展开&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span>这↓里</span>&nbsp;</p><p><img src="https://wubin.pro/Upload/ueditor/image/20180427/1524811811516357.png" width="604" height="72"></p><p><br></p><p>找到php-cs-fixer</p><p>将自己下载好的php-cs-fixer路径粘贴上去即可&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span>这里↓展开</span></p><p><img src="https://www.wubin.pro/Upload/ueditor/image/20180427/1524811811338651.png" width="613" height="129"></p>', 393),
(108, '基于animate动画和swiper的pc端个人博客模板 Html', 100, 0, '2019-03-15 12:51:18', '/upload/20190315/f5140d59167642e9ee3b81ececfc999f.png', 2, '模板基于animatecss、使用swiper轮播图，整个模板在加载时候有一个缓冲的动画，感觉起来十分舒适，模板提供博客经常使用的首页、列表页和文章内容页面...', 'Mrs.默先森', 58, 0, '<p>模板基于animatecss、使用swiper轮播图，整个模板在加载时候有一个缓冲的动画，感觉起来十分舒适，模板提供博客经常使用的首页、列表页和文章内容页面...</p><p><img src="https://wubin.pro/Upload/ueditor/image/20170831/1504171396272358.png" alt="1504171396272358.png"></p>', 198),
(109, 'thinkphp5系列之手势验证码（VAPTCHA）', 100, 0, '2019-03-15 12:55:43', '/upload/20190315/9ae892e4447cbf5b5d580205ec00510e.gif', 2, 'VAPTCHA，又称为手势验证码，需要用户使用鼠标绘制指定轨迹即可完成人及验证，开始试了一下，画好几遍才能华对，感觉智商压制啊，但想想人家1xxx6验证码，嗯，难点还是好，验证码能有效防止恶意密码破解、论坛灌水、垃圾邮件、撞库等。', 'Mrs.默先森', 52, 0, '<h1 label="标题居左"><span>官网&amp;手册</span></h1><p><a href="https://www.vaptcha.com/" target="_blank" title="手势验证码官网">手势验证码官网</a><br></p><p><a href="https://www.vaptcha.com/document/install" target="_blank" title="Vaptcha-php-sdk">Vaptcha-php-sdk</a><br></p><p><br></p><h1 label="标题居左"><span>环境要求</span><br></h1><p>Vaptcha SDK PHP版本适用于 php5.3及以上版本</p><p>需开启curl扩展</p><p><br></p><h1 label="标题居左"><span>安装SDk</span></h1><p>github下载：git clone https://github.com/vaptcha/vaptcha-php-sdk.git</p><p>composer安装(推荐)：composer require Vaptcha/vaptcha-sdk</p><p><br></p><h1 label="标题居左"><span>代码部署</span></h1><p><span><span><span label="明显强调">登录</span><a href="https://www.vaptcha.com/manage" target="_blank" title="后台"><span>后台</span></a><span label="明显强调">添加验证单元</span></span></span></p><p>创建验证单元获得vid+key</p><p>参数请妥善保存</p><p>部署需要在线服务器进行</p><p><img src="https://wubin.pro/Upload/ueditor/image/20180428/1524896400894496.png" width="421" height="518"><br></p><p><img src="https://www.wubin.pro/Upload/ueditor/image/20180428/1524896400272682.png" width="656" height="68"></p><p><br></p><p><span microsoft="" helvetica="" font-size:="" white-space:="" background-color:=""><span label="明显强调">引入js和预加载动画</span></span></p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token operator">&lt;</span>style<span class="token operator">&gt;</span>\r\n    <span class="token punctuation">.</span>vaptcha<span class="token operator">-</span>init<span class="token operator">-</span>main <span class="token punctuation">{</span>\r\n        display<span class="token punctuation">:</span> table<span class="token punctuation">;</span>\r\n        width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>\r\n        height<span class="token punctuation">:</span> <span class="token number">100</span><span class="token operator">%</span>\r\n        background<span class="token operator">-</span>color<span class="token punctuation">:</span> <span class="token shell-comment comment">#EEEEEE;</span>\r\n    <span class="token punctuation">}</span>\r\n    <span class="token punctuation">.</span>vaptcha<span class="token operator">-</span>init<span class="token operator">-</span>loading <span class="token punctuation">{</span>\r\n        display<span class="token punctuation">:</span> table<span class="token operator">-</span>cell<span class="token punctuation">;</span>\r\n        vertical<span class="token operator">-</span>align<span class="token punctuation">:</span> middle<span class="token punctuation">;</span>\r\n        text<span class="token operator">-</span>align<span class="token punctuation">:</span> center\r\n    <span class="token punctuation">}</span>\r\n    <span class="token punctuation">.</span>vaptcha<span class="token operator">-</span>init<span class="token operator">-</span>loading<span class="token operator">&gt;</span>a <span class="token punctuation">{</span>\r\n        display<span class="token punctuation">:</span> inline<span class="token operator">-</span>block<span class="token punctuation">;</span>\r\n        width<span class="token punctuation">:</span> <span class="token number">18</span>px<span class="token punctuation">;</span>\r\n        height<span class="token punctuation">:</span> <span class="token number">18</span>px<span class="token punctuation">;</span>\r\n        border<span class="token punctuation">:</span> none<span class="token punctuation">;</span>\r\n    <span class="token punctuation">}</span>\r\n    <span class="token punctuation">.</span>vaptcha<span class="token operator">-</span>init<span class="token operator">-</span>loading<span class="token operator">&gt;</span>a img <span class="token punctuation">{</span>\r\n        vertical<span class="token operator">-</span>align<span class="token punctuation">:</span> middle\r\n    <span class="token punctuation">}</span>\r\n    <span class="token punctuation">.</span>vaptcha<span class="token operator">-</span>init<span class="token operator">-</span>loading <span class="token punctuation">.</span>vaptcha<span class="token operator">-</span>text <span class="token punctuation">{</span>\r\n        font<span class="token operator">-</span>family<span class="token punctuation">:</span> sans<span class="token operator">-</span>serif<span class="token punctuation">;</span>\r\n        font<span class="token operator">-</span>size<span class="token punctuation">:</span> <span class="token number">12</span>px<span class="token punctuation">;</span>\r\n        color<span class="token punctuation">:</span> <span class="token shell-comment comment">#CCCCCC;</span>\r\n        vertical<span class="token operator">-</span>align<span class="token punctuation">:</span> middle\r\n    <span class="token punctuation">}</span>\r\n<span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">&gt;</span>\r\n<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 点击式按钮建议宽度不低于<span class="token number">200</span>px<span class="token punctuation">,</span>高度介于<span class="token number">36</span>px与<span class="token number">46</span>px  <span class="token operator">--</span><span class="token operator">&gt;</span>\r\n<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 嵌入式仅需设置宽度，高度根据宽度自适应，最小宽度为<span class="token number">200</span>px <span class="token operator">--</span><span class="token operator">&gt;</span>\r\n<span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token double-quoted-string string">"vaptcha_container"</span> style<span class="token operator">=</span><span class="token double-quoted-string string">"width:300px;height:36px;"</span><span class="token operator">&gt;</span>\r\n   <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>vaptcha_container是用来引入Vaptcha的容器，下面代码为预加载动画，仅供参考<span class="token operator">--</span><span class="token operator">&gt;</span>\r\n   <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"vaptcha-init-main"</span><span class="token operator">&gt;</span>\r\n      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"vaptcha-init-loading"</span><span class="token operator">&gt;</span>\r\n          <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token double-quoted-string string">"/"</span> target<span class="token operator">=</span><span class="token double-quoted-string string">"_blank"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token double-quoted-string string">"https://cdn.vaptcha.com/vaptcha-loading.gif"</span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>\r\n          <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"vaptcha-text"</span><span class="token operator">&gt;</span>Vaptcha启动中<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>\r\n      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token double-quoted-string string">"https://cdn.bootcss.com/jquery/3.3.1/jquery.min.js"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>\r\n<span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token double-quoted-string string">"https://cdn.vaptcha.com/v.js"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p><br></p><p>布局如图，这里在页面增加用户名和密码</p><p>预加载动画</p><p><img src="https://wubin.pro/Upload/ueditor/image/20180428/1524897015861587.png" alt="1524897015861587.png" width="561" height="245"></p><p><br></p><p><span microsoft="" helvetica="" font-size:="" white-space:="" background-color:=""><span label="明显强调">请求服务器端获取vid和challenge</span></span></p><p>请求getVaptcha加载手势验证码</p><p>宕机请求getDownTime处理</p><p>javascript部分代码：</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">    <span class="token keyword">var</span> form <span class="token operator">=</span> <span class="token punctuation">{</span>\r\n      token<span class="token punctuation">:</span> <span class="token single-quoted-string string">''''</span><span class="token punctuation">,</span>\r\n      challenge<span class="token punctuation">:</span> <span class="token single-quoted-string string">''''</span><span class="token punctuation">,</span>\r\n      username<span class="token punctuation">:</span> <span class="token single-quoted-string string">''''</span><span class="token punctuation">,</span>\r\n      password<span class="token punctuation">:</span> <span class="token single-quoted-string string">''''</span>\r\n    <span class="token punctuation">}</span>\r\n    <span class="token comment">//Vaptcha对象</span>\r\n    <span class="token keyword">var</span> obj<span class="token punctuation">;</span>\r\n    <span class="token comment">//根据服务端接口获取的vid与challenge创建实例</span>\r\n    <span class="token comment">//验证参数对象</span>\r\n    $<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"{:url(''getVaptcha'')}"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n      <span class="token keyword">var</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>\r\n        vid<span class="token punctuation">:</span> res<span class="token punctuation">.</span>vid<span class="token punctuation">,</span> <span class="token comment">//验证单元id, string, 必填</span>\r\n        challenge<span class="token punctuation">:</span> res<span class="token punctuation">.</span>challenge<span class="token punctuation">,</span> <span class="token comment">//验证流水号, string, 必填</span>\r\n        container<span class="token punctuation">:</span> <span class="token double-quoted-string string">"#vaptcha_container"</span><span class="token punctuation">,</span> <span class="token comment">//验证码容器, HTMLElement或者selector, 必填</span>\r\n        type<span class="token punctuation">:</span> <span class="token double-quoted-string string">"click"</span><span class="token punctuation">,</span> <span class="token comment">//必填，表示点击式验证模式[embed:嵌入式,click:点击式,invisible:隐藏式]</span>\r\n        effect<span class="token punctuation">:</span> <span class="token single-quoted-string string">''float''</span><span class="token punctuation">,</span> <span class="token comment">//验证图显示方式, string, 可选择float, popup, 默认float</span>\r\n        color<span class="token punctuation">:</span> <span class="token double-quoted-string string">"#3C8AFF"</span><span class="token punctuation">,</span> <span class="token comment">//按钮颜色</span>\r\n        https<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">//协议类型,boolean,可选true,false,不填则自适应。</span>\r\n        outage<span class="token punctuation">:</span> <span class="token double-quoted-string string">"{:url(''getDownTime'')}"</span><span class="token punctuation">,</span> <span class="token comment">//服务器端配置的宕机模式接口地址</span>\r\n        checkingAnimation<span class="token punctuation">:</span> <span class="token double-quoted-string string">"display"</span><span class="token punctuation">,</span> <span class="token comment">//是否显示智能检测动画, "hide"则为隐藏</span>\r\n        success<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>token<span class="token punctuation">,</span> challenge<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//验证成功回调函数, 参数token, challenge 为string, 必填</span>\r\n          <span class="token comment">//执行表单验证失败时，需要重新初始化VAPTCHA</span>\r\n          <span class="token comment">//todo:执行人机验证成功后的操作</span>\r\n          form<span class="token punctuation">.</span>token <span class="token operator">=</span> token<span class="token punctuation">;</span>\r\n          form<span class="token punctuation">.</span>challenge <span class="token operator">=</span> challenge<span class="token punctuation">;</span>\r\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n        fail<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//验证失败回调函数</span>\r\n          <span class="token comment">//todo:执行人机验证失败后的操作</span>\r\n        <span class="token punctuation">}</span>\r\n      <span class="token punctuation">}</span>\r\n\r\n      window<span class="token punctuation">.</span><span class="token function">vaptcha</span><span class="token punctuation">(</span>config<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>vaptcha_obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n        obj <span class="token operator">=</span> vaptcha_obj<span class="token punctuation">;</span>\r\n        obj<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">''json''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">''json''</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p><br></p><p>服务器端代码部署:</p><p><span microsoft="" helvetica="" font-size:="" background-color:="">使用接口前需先实例化</span><code liberation="" font-size:="" padding:="" 2px="" 4px="" color:="" background-color:="" border-radius:="" white-space:="">Vaptcha</code></p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token keyword">use</span> <span class="token package">Vaptcha<span class="token punctuation">\\</span>Vaptcha</span><span class="token punctuation">;</span>\r\n\r\n<span class="token keyword">private</span> <span class="token variable">$vaptcha</span><span class="token punctuation">;</span>\r\n<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\r\n<span class="token punctuation">{</span>\r\n    <span class="token variable">$vid</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''your vid''</span><span class="token punctuation">;</span>\r\n    <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''your key''</span><span class="token punctuation">;</span>\r\n    <span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">vaptcha</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vaptcha</span><span class="token punctuation">(</span><span class="token variable">$vid</span><span class="token punctuation">,</span> <span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 实例化sdk，$vid 和 $key 对应验证单元中的Vid和Key</span>\r\n<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>与html代码部署相结合的两个方法：</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">    <span class="token comment">/**\r\n     * [getvaptcha 获取流水号接口]\r\n     * @return [type] [description]\r\n     */</span>\r\n    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">getvaptcha</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\r\n    <span class="token punctuation">{</span>\r\n        <span class="token variable">$challenge</span> <span class="token operator">=</span> <span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">vaptcha</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">getChallenge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n        <span class="token keyword">echo</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token variable">$challenge</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n        exit<span class="token punctuation">;</span>\r\n    <span class="token punctuation">}</span>\r\n    <span class="token comment">/**\r\n     * [getDownTime 宕机模式]\r\n     * @return [type] [description]\r\n     */</span>\r\n    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">getDownTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\r\n    <span class="token punctuation">{</span>\r\n        <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token global">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">''data''</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 客户端sdk以get方式发送数据</span>\r\n        <span class="token keyword">echo</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">vaptcha</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">downTime</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n        exit<span class="token punctuation">;</span>\r\n    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>正常加载手势验证码：</p><p><img src="https://wubin.pro/Upload/ueditor/image/20180428/1524898293795455.png" width="429" height="307"></p><p>宕机时显示验证码</p><p><img src="https://wubin.pro/Upload/ueditor/image/20180428/1524898294819295.png" width="418" height="384"></p><p><br></p><p><span label="明显强调">登录进行人机检测</span></p><p>提示消息使用<a href="http://layer.layui.com/" target="_blank" title="layer弹出层">layer弹出层</a><br></p><p>如有需要，请自行引入</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token double-quoted-string string">"https://cdn.bootcss.com/layer/3.1.0/layer.js"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p><br></p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token keyword">function</span> <span class="token function">post</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n      event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>form<span class="token punctuation">.</span>token<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n        layer<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''请先进行人机验证''</span><span class="token punctuation">,</span><span class="token punctuation">{</span>icon<span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\r\n      <span class="token punctuation">}</span>\r\n      form<span class="token punctuation">.</span>username <span class="token operator">=</span> $<span class="token punctuation">(</span><span class="token single-quoted-string string">''input[name=username]''</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n      form<span class="token punctuation">.</span>password <span class="token operator">=</span> $<span class="token punctuation">(</span><span class="token single-quoted-string string">''input[name=password]''</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n      $<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"{:url(''login'')}"</span><span class="token punctuation">,</span>form<span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">{</span>\r\n          <span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>code<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\r\n             layer<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>msg<span class="token punctuation">,</span><span class="token punctuation">{</span>icon<span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n             obj<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//初始化验证码</span>\r\n          <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>\r\n            layer<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>msg<span class="token punctuation">,</span><span class="token punctuation">{</span>icon<span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n          <span class="token punctuation">}</span>\r\n      <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''json''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>请求php处理登录<br></p><p>php中处理时需要对验证码进行二次验证</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">login</span><span class="token punctuation">(</span>Request <span class="token variable">$request</span><span class="token punctuation">)</span>\r\n    <span class="token punctuation">{</span>\r\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">isPost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n            <span class="token comment">//进行二次验证,成功返回true，失败返回false</span>\r\n            <span class="token variable">$validatePass</span> <span class="token operator">=</span> <span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">vaptcha</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">challenge</span><span class="token punctuation">,</span> <span class="token variable">$request</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">token</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$validatePass</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n                <span class="token keyword">return</span> <span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token single-quoted-string string">''code''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''msg''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token single-quoted-string string">''请先进行人机验证''</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n            <span class="token punctuation">}</span>\r\n            <span class="token comment">//比对用户名密码是否正确</span>\r\n            <span class="token variable">$userInfo</span> <span class="token operator">=</span> <span class="token function">db</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''user''</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''username''</span><span class="token punctuation">,</span> <span class="token variable">$request</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">username</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''password''</span><span class="token punctuation">,</span> <span class="token variable">$request</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">password</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$userInfo</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n                <span class="token keyword">return</span> <span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token single-quoted-string string">''code''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''msg''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token single-quoted-string string">''用户名或密码不正确''</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n            <span class="token punctuation">}</span>\r\n            <span class="token keyword">return</span> <span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token single-quoted-string string">''code''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''msg''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token single-quoted-string string">''登录成功''</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n        <span class="token punctuation">}</span>\r\n    <span class="token punctuation">}</span></code></pre></div>', 332);
INSERT INTO `blog_article` (`arc_id`, `arc_title`, `arc_sort`, `sendtime`, `updatetime`, `arc_thumb`, `is_recycle`, `arc_digest`, `arc_author`, `cate_id`, `admin_id`, `arc_content`, `arc_click`) VALUES
(103, '基于vuejs实现完整的购物车实例代码(购物车全选、反选、商品总价、数量)', 100, 0, '2019-03-15 10:02:59', '/upload/20190315/a6d398760aa0bf5e75db37685a072593.png', 2, '购物车是电商网站或手机商城中很常见的，文中所有购物车的效果均采用vuejs进行控制操作，该实例代码中实现了全选、反选、商品数量、购物车商品删除、每一步操作都会结合计算商品总价，比起jquery实现代码结构简单清晰、更易理解的逻辑性，也包含清空购物车之后的显示操作......', 'Mrs.默先森', 46, 0, '<p>购物车是电商网站或手机商城中很常见的，文中所有购物车的效果均采用vuejs进行控制操作，该实例代码中实现了全选、反选、商品数量、购物车商品删除、每一步操作都会结合计算商品总价，比起jquery实现代码结构简单清晰、更易理解的逻辑性，也包含清空购物车之后的显示操作......</p><p><br></p><p><img src="https://wubin.pro/Upload/ueditor/image/20180416/1523884805975375.gif" alt="1523884805975375.gif" width="671" height="298"></p><p>模板使用bootstrap布局</p><p><span>头部引入文件</span></p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token double-quoted-string string">"https://cdn.bootcss.com/vue/2.5.17-beta.0/vue.js"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>\r\n<span class="token operator">&lt;</span>link href<span class="token operator">=</span><span class="token double-quoted-string string">"https://cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"</span> rel<span class="token operator">=</span><span class="token double-quoted-string string">"stylesheet"</span><span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p><br></p><p><span label="明显强调">html部分代码</span></p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>\r\n    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"container"</span> id<span class="token operator">=</span><span class="token double-quoted-string string">"app"</span><span class="token operator">&gt;</span>\r\n    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"row"</span><span class="token operator">&gt;</span>\r\n        <span class="token operator">&lt;</span>template v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token double-quoted-string string">"goods.length==0"</span><span class="token operator">&gt;</span>\r\n            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"panel panel-default"</span><span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"panel-body"</span><span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span>p style<span class="token operator">=</span><span class="token double-quoted-string string">"text-align: center;margin: 100px auto"</span><span class="token operator">&gt;</span>\r\n                        购物车中暂无商品\r\n                        <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token double-quoted-string string">""</span><span class="token operator">&gt;</span>武斌博客wubin<span class="token punctuation">.</span>pro<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n        <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>\r\n        <span class="token operator">&lt;</span>template v<span class="token operator">-</span><span class="token keyword">else</span><span class="token operator">&gt;</span>\r\n            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"panel panel-default"</span><span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"panel-heading"</span><span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span>h3 <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"panel-title"</span><span class="token operator">&gt;</span>购物车<span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"panel-body"</span><span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span>table <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"table table-striped table-hover"</span><span class="token operator">&gt;</span>\r\n                        <span class="token operator">&lt;</span>thead<span class="token operator">&gt;</span>\r\n                        <span class="token operator">&lt;</span>tr<span class="token operator">&gt;</span>\r\n                            <span class="token operator">&lt;</span>th<span class="token operator">&gt;</span>\r\n                                <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token double-quoted-string string">"checkbox"</span> @click<span class="token operator">=</span><span class="token double-quoted-string string">"selectAll"</span> v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token double-quoted-string string">"allCheck"</span><span class="token operator">&gt;</span>\r\n                            <span class="token operator">&lt;</span><span class="token operator">/</span>th<span class="token operator">&gt;</span>\r\n                            <span class="token operator">&lt;</span>th<span class="token operator">&gt;</span>商品名称<span class="token operator">&lt;</span><span class="token operator">/</span>th<span class="token operator">&gt;</span>\r\n                            <span class="token operator">&lt;</span>th<span class="token operator">&gt;</span>商品单价<span class="token operator">&lt;</span><span class="token operator">/</span>th<span class="token operator">&gt;</span>\r\n                            <span class="token operator">&lt;</span>th<span class="token operator">&gt;</span>数量<span class="token operator">&lt;</span><span class="token operator">/</span>th<span class="token operator">&gt;</span>\r\n                            <span class="token operator">&lt;</span>th<span class="token operator">&gt;</span>操作<span class="token operator">&lt;</span><span class="token operator">/</span>th<span class="token operator">&gt;</span>\r\n                        <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">&gt;</span>\r\n                        <span class="token operator">&lt;</span><span class="token operator">/</span>thead<span class="token operator">&gt;</span>\r\n                        <span class="token operator">&lt;</span>tbody<span class="token operator">&gt;</span>\r\n                        <span class="token operator">&lt;</span>tr v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token double-quoted-string string">"(v,k) in goods"</span><span class="token operator">&gt;</span>\r\n                            <span class="token operator">&lt;</span>td<span class="token operator">&gt;</span>\r\n                                <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token double-quoted-string string">"checkbox"</span> <span class="token punctuation">:</span>checked<span class="token operator">=</span><span class="token double-quoted-string string">"allSelectData.indexOf(v.id)!=-1"</span> @click<span class="token operator">=</span><span class="token double-quoted-string string">"select(v.id)"</span><span class="token operator">&gt;</span>\r\n                            <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">&gt;</span>\r\n                            <span class="token operator">&lt;</span>td<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span>v<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">&gt;</span>\r\n                            <span class="token operator">&lt;</span>td<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span>v<span class="token punctuation">.</span>price<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">&gt;</span>\r\n                            <span class="token operator">&lt;</span>td<span class="token operator">&gt;</span>\r\n                                <span class="token operator">&lt;</span>button type<span class="token operator">=</span><span class="token double-quoted-string string">"button"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"btn btn-success btn-xs"</span> @click<span class="token operator">=</span><span class="token double-quoted-string string">"reduce(k)"</span><span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>\r\n                                <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token double-quoted-string string">"text"</span> v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token double-quoted-string string">"v.num"</span> style<span class="token operator">=</span><span class="token double-quoted-string string">"width: 30px;text-align: center"</span><span class="token operator">&gt;</span>\r\n                                <span class="token operator">&lt;</span>button type<span class="token operator">=</span><span class="token double-quoted-string string">"button"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"btn btn-primary btn-xs"</span> @click<span class="token operator">=</span><span class="token double-quoted-string string">"plus(k)"</span><span class="token operator">&gt;</span> <span class="token operator">+</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>\r\n                            <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">&gt;</span>\r\n                            <span class="token operator">&lt;</span>td<span class="token operator">&gt;</span>\r\n                                <span class="token operator">&lt;</span>button type<span class="token operator">=</span><span class="token double-quoted-string string">"button"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"btn btn-danger"</span> @click<span class="token operator">=</span><span class="token double-quoted-string string">"del(k)"</span><span class="token operator">&gt;</span> 删除<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>\r\n                            <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">&gt;</span>\r\n                        <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">&gt;</span>\r\n                        <span class="token operator">&lt;</span><span class="token operator">/</span>tbody<span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span><span class="token operator">/</span>table<span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"panel-footer "</span><span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span>p style<span class="token operator">=</span><span class="token double-quoted-string string">"text-align: right"</span><span class="token operator">&gt;</span>\r\n                        总计：<span class="token operator">&lt;</span>span<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span>totalPrice<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span> 元\r\n                    <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n        <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>\r\n    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n<span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p><br></p><p><span label="明显强调">JavaScript部分代码</span><br></p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>\r\n    <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\r\n        el<span class="token punctuation">:</span> <span class="token single-quoted-string string">''#app''</span><span class="token punctuation">,</span>\r\n        data<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n            <span class="token comment">//商品数据</span>\r\n            goods<span class="token punctuation">:</span> <span class="token punctuation">[</span>\r\n                <span class="token punctuation">{</span><span class="token double-quoted-string string">"id"</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"name"</span><span class="token punctuation">:</span> <span class="token double-quoted-string string">"荣耀 V10 高配版 6GB+64GB 幻夜黑 移动联通电信4G全面屏游戏手机 双卡双待"</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"price"</span><span class="token punctuation">:</span> <span class="token number">2799</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"num"</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n                <span class="token punctuation">{</span><span class="token double-quoted-string string">"id"</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"name"</span><span class="token punctuation">:</span> <span class="token double-quoted-string string">"三星 Galaxy S9+（SM-G9650/DS）6GB+128GB 谜夜黑 移动联通电信4G手机 双卡双待"</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"price"</span><span class="token punctuation">:</span> <span class="token number">6999</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"num"</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n                <span class="token punctuation">{</span><span class="token double-quoted-string string">"id"</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"name"</span><span class="token punctuation">:</span> <span class="token double-quoted-string string">"华为 HUAWEI nova 2S 全面屏四摄 6GB +64GB 曜石黑 移动联通电信4G手机 双卡双待"</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"price"</span><span class="token punctuation">:</span> <span class="token number">2799</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"num"</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n                <span class="token punctuation">{</span><span class="token double-quoted-string string">"id"</span><span class="token punctuation">:</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"name"</span><span class="token punctuation">:</span> <span class="token double-quoted-string string">"360手机 N6 Pro 全网通 6GB+64GB 极夜黑 移动联通电信4G手机 双卡双待 全面屏 游戏手机"</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"price"</span><span class="token punctuation">:</span> <span class="token number">1699</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"num"</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n                <span class="token punctuation">{</span><span class="token double-quoted-string string">"id"</span><span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"name"</span><span class="token punctuation">:</span> <span class="token double-quoted-string string">"锤子 坚果 Pro 2 碳黑色（细红线版） 全面屏双摄 6+64GB 全网通 移动联通电信4G手机 双卡双待"</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"price"</span><span class="token punctuation">:</span> <span class="token number">2099</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"num"</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n                <span class="token punctuation">{</span><span class="token double-quoted-string string">"id"</span><span class="token punctuation">:</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"name"</span><span class="token punctuation">:</span> <span class="token double-quoted-string string">"三星 Galaxy Note8（SM-N9500）6GB+128GB 谜夜黑 移动联通电信4G手机 双卡双待"</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"price"</span><span class="token punctuation">:</span> <span class="token number">7388</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"num"</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n            <span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n            allSelectData<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n            allCheck<span class="token punctuation">:</span> <span class="token boolean">true</span>\r\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n        <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n            <span class="token comment">//控制加载页面全部选中</span>\r\n            this<span class="token punctuation">.</span>goods<span class="token punctuation">.</span><span class="token keyword">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> k<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>\r\n                this<span class="token punctuation">.</span>allSelectData<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span>id<span class="token punctuation">)</span>\r\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n        methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n            <span class="token comment">//全选</span>\r\n            <span class="token function">selectAll</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>event<span class="token punctuation">.</span>currentTarget<span class="token punctuation">.</span>checked<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n                    this<span class="token punctuation">.</span>allSelectData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token comment">//全选</span>\r\n                    this<span class="token punctuation">.</span>allSelectData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n                    this<span class="token punctuation">.</span>goods<span class="token punctuation">.</span><span class="token keyword">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> k<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>\r\n                        this<span class="token punctuation">.</span>allSelectData<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n                    <span class="token punctuation">}</span><span class="token punctuation">)</span>\r\n                <span class="token punctuation">}</span>\r\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n            <span class="token comment">//每个选项</span>\r\n            <span class="token function">select</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n                <span class="token comment">//检测当前商品是否在数组中</span>\r\n                <span class="token keyword">var</span> res <span class="token operator">=</span> this<span class="token punctuation">.</span>allSelectData<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n                res <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">?</span> this<span class="token punctuation">.</span>allSelectData<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token punctuation">:</span> this<span class="token punctuation">.</span>allSelectData<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n                this<span class="token punctuation">.</span>allCheck <span class="token operator">=</span> this<span class="token punctuation">.</span>allSelectData<span class="token punctuation">.</span>length <span class="token operator">==</span> this<span class="token punctuation">.</span>goods<span class="token punctuation">.</span>length <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\r\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n            <span class="token comment">//删除当前购物车商品数据</span>\r\n            <span class="token function">del</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n                this<span class="token punctuation">.</span>goods<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n            <span class="token comment">//数量减</span>\r\n            <span class="token function">reduce</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n                this<span class="token punctuation">.</span>goods<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>num<span class="token operator">--</span><span class="token punctuation">;</span>\r\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>this<span class="token punctuation">.</span>goods<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>num <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n                    this<span class="token punctuation">.</span>goods<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n                <span class="token punctuation">}</span>\r\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n            <span class="token comment">//数量加</span>\r\n            <span class="token function">plus</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n                this<span class="token punctuation">.</span>goods<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>num<span class="token operator">++</span><span class="token punctuation">;</span>\r\n            <span class="token punctuation">}</span>\r\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n        computed<span class="token punctuation">:</span> <span class="token punctuation">{</span>\r\n            <span class="token comment">//商品总价</span>\r\n            <span class="token function">totalPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n                let total <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\r\n                this<span class="token punctuation">.</span>goods<span class="token punctuation">.</span><span class="token keyword">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> k<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>\r\n                    <span class="token keyword">var</span> res <span class="token operator">=</span> this<span class="token punctuation">.</span>allSelectData<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n                    <span class="token keyword">if</span> <span class="token punctuation">(</span>res <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n                        total <span class="token operator">+</span><span class="token operator">=</span> v<span class="token punctuation">.</span>price <span class="token operator">*</span> v<span class="token punctuation">.</span>num<span class="token punctuation">;</span>\r\n                    <span class="token punctuation">}</span>\r\n                <span class="token punctuation">}</span><span class="token punctuation">)</span>\r\n                <span class="token keyword">return</span> total<span class="token punctuation">;</span>\r\n            <span class="token punctuation">}</span>\r\n        <span class="token punctuation">}</span>\r\n\r\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\r\n<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></code></pre></div>', 135),
(105, 'PHP基于phpqrcode类生成(带LOGO图像的)二维码', 100, 0, '2019-03-15 11:56:47', '/upload/20190315/18bb3711a04de35b55394d3a7db5882a.jpeg', 2, '二维码现在已经遍布各路大神小神的生活，使用phpqrcode生成二维码是比较简单的,这篇文章主要介绍了PHP基于phpqrcode类生成二维码的方法，结合实例形式详细分析了phpqrcode类的具体功能、使用方法及相关操作注意事项,需要的朋友可以参考下，phpcrcode类库文件下载......', 'Mrs.默先森', 44, 0, '<p>phpcrcode类库文件下载地址：<a href="https://sourceforge.net/projects/phpqrcode/" target="_blank" title="https://sourceforge.net/projects/phpqrcode/">https://sourceforge.net/projects/phpqrcode/</a><br></p><blockquote><p><span>使用方法</span><br></p></blockquote><p>下载来的压缩包里面包含很多类库以及demo，我们只需要phpqrcode.php这一个文件就可以了，其他的是去是留自行处理，而其中我们需要的是QRcode类（第2963行）中的png方法（第3090行）</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function">png</span><span class="token punctuation">(</span><span class="token variable">$text</span><span class="token punctuation">,</span> <span class="token variable">$outfile</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token variable">$level</span> <span class="token operator">=</span> <span class="token constant">QR_ECLEVEL_L</span><span class="token punctuation">,</span> <span class="token variable">$size</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token variable">$margin</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token variable">$saveandprint</span><span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">)</span>\r\n<span class="token punctuation">{</span>\r\n  <span class="token variable">$enc</span> <span class="token operator">=</span> <span class="token scope">QRencode<span class="token punctuation">::</span></span><span class="token function">factory</span><span class="token punctuation">(</span><span class="token variable">$level</span><span class="token punctuation">,</span> <span class="token variable">$size</span><span class="token punctuation">,</span> <span class="token variable">$margin</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n  <span class="token keyword">return</span> <span class="token variable">$enc</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">encodePNG</span><span class="token punctuation">(</span><span class="token variable">$text</span><span class="token punctuation">,</span> <span class="token variable">$outfile</span><span class="token punctuation">,</span> <span class="token variable">$saveandprint</span><span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p><br></p><hr><p><br></p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token comment">/**\r\n * 生成二维码\r\n * function png($text, $outfile = false, $level = QR_ECLEVEL_L, $size = 3, $margin = 4, $saveandprint=false)\r\n * $text:二维码所包含的内容，可以是链接，文本，json\r\n * $outfile,默认值false，直接输出，只将二维码图片输出否则需要给出二维码的文件名以及路径\r\n * $level：二维码容错率\r\n * $size：控制生成的二维码大小\r\n * $margin：控制生成二维码空白区域大小\r\n * $saveandprint，默认值为false，保存二维码图片，$outfile必须设置路径\r\n */</span>\r\n<span class="token variable">$url</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''https://www.wubin.pro''</span><span class="token punctuation">;</span>\r\n<span class="token scope">QRcode<span class="token punctuation">::</span></span>png <span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token constant">QR_ECLEVEL_L</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p><br></p><blockquote><p><span>生成带LOGO的二维码</span></p></blockquote><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token variable">$url</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''https://www.wubin.pro''</span><span class="token punctuation">;</span>\r\n<span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''images/qrcode.png''</span><span class="token punctuation">;</span>\r\n<span class="token scope">QRcode<span class="token punctuation">::</span></span>png <span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">,</span><span class="token variable">$filename</span><span class="token punctuation">,</span><span class="token constant">QR_ECLEVEL_L</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n\r\n<span class="token variable">$QR</span> <span class="token operator">=</span> <span class="token variable">$filename</span><span class="token punctuation">;</span><span class="token comment">//二维码</span>\r\n<span class="token variable">$logo</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''images/logo.JPG''</span><span class="token punctuation">;</span><span class="token comment">//logo</span>\r\n<span class="token keyword">if</span><span class="token punctuation">(</span>file_exists <span class="token punctuation">(</span><span class="token variable">$logo</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\r\n	<span class="token comment">//目标图像资源</span>\r\n	<span class="token variable">$QR</span> <span class="token operator">=</span> imagecreatefromstring <span class="token punctuation">(</span>file_get_contents <span class="token punctuation">(</span><span class="token variable">$QR</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n	<span class="token comment">//源图像资源</span>\r\n	<span class="token variable">$logo</span> <span class="token operator">=</span> imagecreatefromstring <span class="token punctuation">(</span>file_get_contents <span class="token punctuation">(</span><span class="token variable">$logo</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n	<span class="token comment">//二维码宽高</span>\r\n	<span class="token variable">$QR_width</span> <span class="token operator">=</span> imagesx <span class="token punctuation">(</span><span class="token variable">$QR</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n	<span class="token variable">$QR_height</span> <span class="token operator">=</span> imagesy <span class="token punctuation">(</span><span class="token variable">$QR</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n	<span class="token comment">//logo图像的宽高</span>\r\n	<span class="token variable">$logo_width</span> <span class="token operator">=</span> imagesx <span class="token punctuation">(</span><span class="token variable">$logo</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n	<span class="token variable">$logo_height</span> <span class="token operator">=</span> imagesy <span class="token punctuation">(</span><span class="token variable">$logo</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n	<span class="token comment">//设置组合之后logo宽度</span>\r\n	<span class="token variable">$logo_qr_width</span>  <span class="token operator">=</span> <span class="token variable">$QR_width</span> <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">;</span>\r\n	<span class="token comment">//logo图片的缩放比</span>\r\n	<span class="token variable">$scale</span> <span class="token operator">=</span> <span class="token variable">$logo_width</span><span class="token operator">/</span><span class="token variable">$logo_qr_width</span><span class="token punctuation">;</span>\r\n	<span class="token comment">//计算logo缩放之后高度</span>\r\n	<span class="token variable">$logo_qr_height</span> <span class="token operator">=</span> <span class="token variable">$logo_height</span><span class="token operator">/</span><span class="token variable">$scale</span><span class="token punctuation">;</span>\r\n	<span class="token comment">//计算组合之后logo左上角坐标</span>\r\n	<span class="token variable">$from_width</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token variable">$QR_width</span><span class="token operator">-</span><span class="token variable">$logo_qr_width</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>\r\n	imagecopyresampled <span class="token punctuation">(</span><span class="token variable">$QR</span><span class="token punctuation">,</span><span class="token variable">$logo</span><span class="token punctuation">,</span><span class="token variable">$from_width</span><span class="token punctuation">,</span><span class="token variable">$from_width</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token variable">$logo_qr_width</span><span class="token punctuation">,</span><span class="token variable">$logo_qr_height</span><span class="token punctuation">,</span><span class="token variable">$logo_width</span><span class="token punctuation">,</span><span class="token variable">$logo_height</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n	<span class="token comment">//输出目标</span>\r\n	imagepng <span class="token punctuation">(</span><span class="token variable">$QR</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''images/qrcode.png''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n	<span class="token comment">//释放资源</span>\r\n	imagedestroy <span class="token punctuation">(</span><span class="token variable">$QR</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n	imagedestroy <span class="token punctuation">(</span><span class="token variable">$logo</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>更多用法，可直接参考源码：<a href="http://phpqrcode.sourceforge.net/" target="_blank" title="http://phpqrcode.sourceforge.net/">http://phpqrcode.sourceforge.net/</a></p>', 399);
INSERT INTO `blog_article` (`arc_id`, `arc_title`, `arc_sort`, `sendtime`, `updatetime`, `arc_thumb`, `is_recycle`, `arc_digest`, `arc_author`, `cate_id`, `admin_id`, `arc_content`, `arc_click`) VALUES
(110, 'Laravel 将二维对象转为数组', 100, 0, '2019-03-16 12:50:03', '/upload/20190316/3547a1829206ff78a6add51be16fdd7e.png', 2, '有时候需要数组数据用来遍历，以达到一些目的，使用框架获得数据结并不能直接使用，需要将二维对象转为数组数据，使用$res = array_map ( ''get_object_vars'' , $field );可快速高效的解决该问题，另还给出了其它方式提供以供参考......', 'Mrs.默先森', 50, 0, '<p><span><span label="明显强调">问题描述</span></span></p><p>在使用houdunwang/arr数组增强<br></p><p>将数据树状显示</p><p>其要求第一个参数需为数组数据</p><p><br></p><p>使用命令查询数据：</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token variable">$field</span> <span class="token operator">=</span> <span class="token scope">DB<span class="token punctuation">::</span></span><span class="token function">table</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''tags''</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>获得对象，然后使用：</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token variable">$field</span> <span class="token operator">=</span> <span class="token scope">DB<span class="token punctuation">::</span></span><span class="token function">table</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''tags''</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>得到：</p><p><img src="https://wubin.pro/Upload/ueditor/image/20180120/1516419101891265.png" alt="1516419101891265.png" width="448" height="240"></p><p>将该数据用于进行测试</p><p>但结果出现如下报错：</p><p><img src="https://wubin.pro/Upload/ueditor/image/20180120/1516419232264317.png" alt="1516419232264317.png" width="488" height="110"></p><p>这个是把对象当做数组使用了</p><p><br></p><p><span><span label="明显强调">解决</span></span></p><p>将二维对象转换为数组一快速有效方法</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token variable">$field</span> <span class="token operator">=</span> <span class="token scope">DB<span class="token punctuation">::</span></span>table <span class="token punctuation">(</span> <span class="token single-quoted-string string">''tags''</span> <span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">get</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">toArray</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n<span class="token variable">$res</span>   <span class="token operator">=</span> array_map <span class="token punctuation">(</span> <span class="token single-quoted-string string">''get_object_vars''</span> <span class="token punctuation">,</span> <span class="token variable">$field</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p><br></p><p><img src="https://wubin.pro/Upload/ueditor/image/20180120/1516420258387000.png" width="387" height="259"></p><p><br></p><p>使用以下方式也可最终获得数组</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token variable">$field</span> <span class="token operator">=</span> <span class="token scope">DB<span class="token punctuation">::</span></span>table <span class="token punctuation">(</span> <span class="token single-quoted-string string">''tags''</span> <span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">get</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">toArray</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n<span class="token variable">$field</span> <span class="token operator">=</span> <span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">obj_to_array</span> <span class="token punctuation">(</span><span class="token variable">$field</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\ndd <span class="token punctuation">(</span> <span class="token variable">$field</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">obj_to_array</span><span class="token punctuation">(</span><span class="token variable">$array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n   <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">is_object</span><span class="token punctuation">(</span><span class="token variable">$array</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n      <span class="token variable">$array</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">array</span><span class="token punctuation">)</span><span class="token variable">$array</span><span class="token punctuation">;</span>\r\n   <span class="token punctuation">}</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$array</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n      <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$array</span> <span class="token keyword">as</span> <span class="token variable">$key</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n         <span class="token variable">$array</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">obj_to_array</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n      <span class="token punctuation">}</span>\r\n   <span class="token punctuation">}</span>\r\n   <span class="token keyword">return</span> <span class="token variable">$array</span><span class="token punctuation">;</span>\r\n<span class="token punctuation">}</span></code></pre></div>', 939),
(111, 'centos7.3配置php7运行环境', 100, 0, '2019-03-16 14:40:20', '/upload/20190316/c16fb52403836b3e0a2a3c657419983f.png', 2, 'CentOS（Community Enterprise Operating System，中文意思是：社区企业操作系统）是Linux发行版之一，它是来自于Red Hat Enterprise Linux依照开放源代码规定释出的源代码所编译而成。PHP7是PHP编程语言的一个主要版本，并号称是开发Web应用程序的一次革命，可开发和交付移动企业和云应用。此版本被认为是PHP在2004年发布PHP5后最重要的变化，PHP 7对速度进行大幅度提。', 'Mrs.默先森', 53, 0, '<p><span helvetica="" font-size:="" background-color:="">CentOS（Community Enterprise Operating System，中文意思是：社区企业操作系统）是Linux发行版之一，它是来自于Red Hat Enterprise Linux依照开放源代码规定释出的源代码所编译而成。PHP7是PHP编程语言的一个主要版本，并号称是开发Web应用程序的一次革命，可开发和交付移动企业和云应用。此版本被认为是PHP在2004年发布PHP5后最重要的变化，PHP 7对速度进行大幅度提。</span></p><p>安装apache</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">yum <span class="token operator">-</span>y install httpd httpd<span class="token operator">-</span>devel\r\n<span class="token comment">//安装完成后，使用systemctl设置开机启动</span>\r\nsystemctl start httpd<span class="token punctuation">.</span>service\r\nsystemctl enable httpd<span class="token punctuation">.</span>service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>安装mysql，MySQL 没有在 CentOS 7 的软件源库里面， CentOS 7 里面有对应的替代品 MariaDB</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token number">1.</span> 安装mysql软件源\r\n    yum install http<span class="token punctuation">:</span><span class="token comment">//dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm</span>\r\n<span class="token number">2.</span> 接下来安装 MySQL 的客户端和服务端 \r\n    yum install mysql<span class="token operator">-</span>server mysql<span class="token operator">-</span>client   \r\n<span class="token number">3.</span> 安装完成后，启动mysql，使用 mysql_secure_installation 来完成 MySQL 的安装配置<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>安装 PHP 7-目前发行包的软件源里面是不包含 PHP 7 所以为了安装 PHP 7 我们同样需要添加 PHP 7 的软件源Remi 的 PHP 7 的软件包和插件比较完善，所以我们就先添加 Remi 的软件源</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token number">1.</span> 添加 Remi 的软件源\r\n    yum install scl<span class="token operator">-</span>utils\r\n    yum install https<span class="token punctuation">:</span><span class="token comment">//dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span>\r\n    yum install http<span class="token punctuation">:</span><span class="token comment">//rpms.remirepo.net/enterprise/remi-release-7.rpm</span>\r\n<span class="token number">2.</span> 安装 php70<span class="token operator">-</span>php\r\n    yum install php70<span class="token operator">-</span>php\r\n<span class="token number">3.</span> 安装 <span class="token constant">PHP</span> <span class="token number">7</span> 和各种常用的包\r\n    yum install php70 php70<span class="token operator">-</span>php<span class="token operator">-</span>mysqlnd php70<span class="token operator">-</span>php<span class="token operator">-</span>curl php70<span class="token operator">-</span>php<span class="token operator">-</span>simplexml\r\n    yum install php70<span class="token operator">-</span>php<span class="token operator">-</span>devel php70<span class="token operator">-</span>php<span class="token operator">-</span>gd php70<span class="token operator">-</span>php<span class="token operator">-</span>json php70<span class="token operator">-</span>php<span class="token operator">-</span>mcrypt\r\n    yum install php70<span class="token operator">-</span>php<span class="token operator">-</span>mbstring php70<span class="token operator">-</span>php<span class="token operator">-</span>opcache php70<span class="token operator">-</span>php<span class="token operator">-</span>pear\r\n    yum install php70<span class="token operator">-</span>php<span class="token operator">-</span>pecl<span class="token operator">-</span>apcu php70<span class="token operator">-</span>php<span class="token operator">-</span>pecl<span class="token operator">-</span>geoip php70<span class="token operator">-</span>php<span class="token operator">-</span>pecl<span class="token operator">-</span>imagick\r\n    yum install php70<span class="token operator">-</span>php<span class="token operator">-</span>pecl<span class="token operator">-</span>json<span class="token operator">-</span>post php70<span class="token operator">-</span>php<span class="token operator">-</span>pecl<span class="token operator">-</span>memcache php70<span class="token operator">-</span>php<span class="token operator">-</span>pecl<span class="token operator">-</span>memcached\r\n    yum install php70<span class="token operator">-</span>php<span class="token operator">-</span>pecl<span class="token operator">-</span>xmldiff php70<span class="token operator">-</span>php<span class="token operator">-</span>pecl<span class="token operator">-</span>zip php70<span class="token operator">-</span>php<span class="token operator">-</span>pspell php70<span class="token operator">-</span>php<span class="token operator">-</span>soap\r\n    yum install php70<span class="token operator">-</span>php<span class="token operator">-</span>tidy php70<span class="token operator">-</span>php<span class="token operator">-</span>xml php70<span class="token operator">-</span>php<span class="token operator">-</span>xmlrpc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p class="p1"><span class="s1">安装phpmyadmin：1.</span>官网下载zip压缩包；2.传至服务器；3.解压：unzip filename.zip</p>', 905),
(112, 'Atom编辑器一些比较常用的插件(持续更新......)', 100, 0, '2019-03-16 14:42:49', '/upload/20190316/90a6f597d6ca263df39548eee69d0e73.png', 2, 'Atom是一款比较轻便也非常炫酷的编辑器，让我们在一线coding的生活感觉舒服好多，也能满足我们的各种需求，Atom 是github专门为程序员推出的一个跨平台文本编辑器。具有简洁和直观的图形用户界面，并有很多有趣的特点：支持CSS，HTML，JavaScript等网页编程语言。个人感觉也是福利，O(∩_∩)O.......', 'Mrs.默先森', 57, 0, '<blockquote><p><a href="https://github.com/chinakids/atom-simplified-chinese-menu" target="_blank" title="simplified-chinese-menu">simplified-chinese-menu</a><br></p></blockquote><p>Atom的简体中文语言包，完整汉化，兼容所有已发布的版本Atom</p><p><br></p><blockquote><p><a href="https://github.com/atom-minimap/minimap" target="_blank" title="minimap">minimap</a><br></p></blockquote><p>右侧小地图，显示缩小版代码，用过sublime都应该知道&nbsp;<br></p><p><br></p><blockquote><p><a href="https://github.com/file-icons/atom" target="_blank" title="file-icons">file-icons</a><br></p></blockquote><p>文件图标<br></p><p><br></p><blockquote><p><a href="https://github.com/nikhilkalige/docblockr" target="_blank" title="docblockr">docblockr</a><br></p></blockquote><p>更好的代码注释</p><p><br></p><blockquote><p><a href="https://github.com/Glavin001/atom-beautify" target="_blank" title="atom-beautify">atom-beautify</a><br></p></blockquote><p>代码格式化插件，需结合【php-cs-fixer】</p><p>Beautify HTML, CSS, JavaScript, PHP, Python, Ruby, Java, C, C++, C#, Objective-C, CoffeeScript, TypeScript, Coldfusion, SQL, and more in Atom</p><p><br></p><blockquote><p><a href="https://github.com/JoelBesada/activate-power-mode" target="_blank" title="activate-power-mode">activate-power-mode</a><br></p></blockquote><p>敲代码时震撼效果</p><p><br></p><blockquote><p><a href="https://github.com/armin-pfaeffle/atom-minify" target="_blank" title="atom-minify">atom-minify</a><br></p></blockquote><p>JS、CSS压缩工具</p><p><br></p><blockquote><p><a href="https://github.com/harmsk/atom-html-preview" target="_blank" title="atom-html-preview">atom-html-preview</a></p></blockquote><p>Atom编辑器实时预览HTML页面</p><p><br></p><blockquote><p><a href="https://github.com/faceair/atom-goto-definition" target="_blank" title="goto-definition">goto-definition</a><br></p></blockquote><p>代码追踪，追踪类、函数</p><ul segoe="" apple="" color="" ui="" white-space:="" class=" list-paddingleft-2"><li><p>Support for&nbsp;<code liberation="" font-size:="" padding:="" 0.2em="" margin:="" background-color:="" border-radius:="">JavaScript(ES6 &amp;&amp; JSX)</code>,&nbsp;<code liberation="" font-size:="" padding:="" 0.2em="" margin:="" background-color:="" border-radius:="">TypeScript</code>,&nbsp;<code liberation="" font-size:="" padding:="" 0.2em="" margin:="" background-color:="" border-radius:="">CoffeeScript</code>,&nbsp;<code liberation="" font-size:="" padding:="" 0.2em="" margin:="" background-color:="" border-radius:="">Python</code>,&nbsp;<code liberation="" font-size:="" padding:="" 0.2em="" margin:="" background-color:="" border-radius:="">Ruby</code>,&nbsp;<code liberation="" font-size:="" padding:="" 0.2em="" margin:="" background-color:="" border-radius:="">PHP</code>,&nbsp;<code liberation="" font-size:="" padding:="" 0.2em="" margin:="" background-color:="" border-radius:="">Hack</code>,&nbsp;<code liberation="" font-size:="" padding:="" 0.2em="" margin:="" background-color:="" border-radius:="">Perl</code>,&nbsp;<code liberation="" font-size:="" padding:="" 0.2em="" margin:="" background-color:="" border-radius:="">KRL</code>,&nbsp;<code liberation="" font-size:="" padding:="" 0.2em="" margin:="" background-color:="" border-radius:="">Erb</code>,&nbsp;<code liberation="" font-size:="" padding:="" 0.2em="" margin:="" background-color:="" border-radius:="">Haml</code>,&nbsp;<code liberation="" font-size:="" padding:="" 0.2em="" margin:="" background-color:="" border-radius:="">C/C++</code>,&nbsp;<code liberation="" font-size:="" padding:="" 0.2em="" margin:="" background-color:="" border-radius:="">Puppet</code>,&nbsp;<code liberation="" font-size:="" padding:="" 0.2em="" margin:="" background-color:="" border-radius:="">ASP</code>,&nbsp;<code liberation="" font-size:="" padding:="" 0.2em="" margin:="" background-color:="" border-radius:="">Shell</code></p></li><li><p>Goto-Definition functiona<code liberation="" font-size:="" padding:="" 0.2em="" margin:="" background-color:="" border-radius:="">Alt+Cmd+Enter</code>/<code liberation="" font-size:="" padding:="" 0.2em="" margin:="" background-color:="" border-radius:="">Ctrl+Alt+Enter</code></p></li></ul><p><br></p><blockquote><p><a href="https://github.com/facebook-atom/hyperclick" target="_blank" title="hyperclick">hyperclick</a><br></p></blockquote><p>代码追踪，追踪类、函数</p><p>cmd-click/ctrl-click 进行代码追踪，跟phpStorm相同</p>', 591),
(113, '个人博客模板Html之《火烧云》Html', 100, 0, '2019-03-16 14:45:33', '/upload/20190316/bf9511a42fa472e2aa1bb179796df86d.png', 2, '博客模板主要有三个页面首页、列表页、文章内容详情页，作为个人博客是比较适合滴...', 'Mrs.默先森', 58, 0, '<p>博客模板主要有三个页面首页、列表页、文章内容详情页</p><p><br></p><p style="text-align: center;"><img src="https://wubin.pro/Upload/ueditor/image/20170824/1503567869430974.png" alt="1503567869430974.png" width="446" height="162"></p><p><br></p><p><img src="https://wubin.pro/Upload/ueditor/image/20170824/1503567956764778.png" alt="1503567956764778.png"></p>', 865),
(114, 'Filezilla链接ftp：服务器发回了不可路由的地址。使用服务器地址代替。', 100, 0, '2019-03-16 14:47:39', '/upload/20190316/0c1d8c5fdf673d83d178b77f50643871.png', 2, 'Filezilla链接ftp时候出现：服务器发回了不可路由的地址。使用服务器地址代替。确定主机地址、用户名密码以及21端口是没有问题的，然后尝试使用主动模式去链接，但是依然并不能解决，经分析排查最后阿里云端口问题，这里给出解决方式，希望何以帮到你......', 'Mrs.默先森', 57, 0, '<p>Filezilla链接ftp时候出现：服务器发回了不可路由的地址。使用服务器地址代替。</p><p>确定主机地址、用户名密码以及21端口是没有问题的</p><p helvetica="" pingfang="" hiragino="" sans="" wenquanyi="" micro="" microsoft="" style="text-align: justify;">更改Filezilla设置，编辑-设置-连接-FTP-被动模式</p><p helvetica="" pingfang="" hiragino="" sans="" wenquanyi="" micro="" microsoft="" style="text-align: justify;">将“使用服务器的外部ip地址来代替”改为“回到主动模式”即可。</p><p helvetica="" pingfang="" hiragino="" sans="" wenquanyi="" micro="" microsoft="" style="text-align: justify;">这样问题依然没有得到解决</p><p><br></p><p><span label="明显强调">解决方式</span></p><p helvetica="" pingfang="" hiragino="" sans="" wenquanyi="" micro="" microsoft="" white-space:="" style="text-align: justify;">博主使用的是阿里云服务器</p><p helvetica="" pingfang="" hiragino="" sans="" wenquanyi="" micro="" microsoft="" white-space:="" style="text-align: justify;">在服务器安全组中配置规则</p><p helvetica="" pingfang="" hiragino="" sans="" wenquanyi="" micro="" microsoft="" white-space:="" style="text-align: justify;">放行ftp被动模式的高端端口1024/65535</p><p helvetica="" pingfang="" hiragino="" sans="" wenquanyi="" micro="" microsoft="" white-space:="" style="text-align: justify;"><br></p><p><img src="https://wubin.pro/Upload/ueditor/image/20180423/1524464536691550.jpg" alt="1524464536691550.jpg"></p>', 280),
(115, 'Windows Phpstorm 打开Terminal报错', 100, 0, '2019-03-16 14:49:28', '/upload/20190316/b9ef35c4d3862bc87a5df1ae6e83afeb.png', 2, '打开PhpStrorm使用Terminal之后出现错误提示：java.io.IOException:Couldn`t create PTY，打开windows电脑的cmd窗口是正常滴，cmd没有问题，那问题就应该是ide问题了，这里给出集中解决方式，若你也遇到同样问题还百思不得姐，也许这篇文章能帮助到你......', 'Mrs.默先森', 57, 0, '<p>打开PhpStrorm使用Terminal之后出现错误提示：java.io.IOException:Couldn`t create PTY，打开windows电脑的cmd窗口是正常滴，cmd没有问题，那问题就应该是ide问题了，这里给出集中解决方式，若你也遇到同样问题还百思不得姐，也许这篇文章能帮助到你。</p><p><br></p><p><img src="https://wubin.pro/Upload/ueditor/image/20180321/1521615240692250.png" alt="1521615240692250.png" width="317" height="134"></p><p><br></p><p>无法打开PTY</p><p>其实就是无法打开相应命令</p><p><span label="明显强调">解决方式</span></p><p>到File -&gt; Settings -&gt; Tools -&gt; Terimal<br></p><p>修改shell path</p><p><img src="https://wubin.pro/Upload/ueditor/image/20180321/1521615805553348.png" width="617" height="444"></p><p><br></p><p>随后重启编辑器</p><p>再不行重启电脑</p><p>如果这里配置没问题</p><p>但问题依然没解决</p><p>那就在快捷方式【右键】以管理员方式运行</p><p><br></p><p>如果不想每次这么麻烦启动</p><p>那右键 -&gt;兼容性 -&gt; 以管理员运行此程序&nbsp;</p><p>打钩、确定、再双击启动即可</p><p><br></p><p><img src="https://wubin.pro/Upload/ueditor/image/20180321/1521615805421049.png" width="402" height="619"></p><p><br></p><p>如果到此还没解决问题</p><p>也别一波一波的谷歌、百度了</p><p>直接重装系统</p><p>真的，相信博主</p><p>这个只需要花一个点</p><p>在这期间你还能休息会儿......</p><p><br></p><p>如果，我是说如果<br></p><p>都不行</p><p>那你联系博主</p><p>电脑换<img src="http://img.baidu.com/hi/tsj/t_0024.gif" width="50" height="50" border="0" vspace="0" title="" alt="">不锈钢盆</p><p><img src="http://img.baidu.com/hi/jx2/j_0005.gif" width="50" height="50" border="0" vspace="0" title="" alt=""></p>', 355),
(116, 'win10下 git运行出现 fatal', 100, 0, '2019-03-16 14:51:18', '/upload/20190316/0bf4016dc8448164199c6b4d6e0be3d2.jpeg', 2, '在windows10系统下运行git出现：fatal: open /dev/null or dup failed: No such file or directory，而且git bash打开会出现闪退现象，重新安装git、更换最新版本、都尝试了，电脑也重启了n²遍，翻了无数资料，谷歌百度，最后解决了该问题，这里分享给有需要的小伙伴儿......', 'Mrs.默先森', 57, 0, '<p><span label="明显强调">问题描述</span></p><p>在windows10系统下运行git出现：fatal: open /dev/null or dup failed: No such file or directory</p><p>而且git bash打开会出现闪退现象，重新安装git、更换最新版本、都尝试了</p><p>电脑也重启了n²遍</p><p>翻了无数资料，谷歌百度，最后解决了该问题</p><p>这里分享给有需要的小伙伴儿......&nbsp;</p><p><img src="https://wubin.pro/Upload/ueditor/image/20180306/1520328463734333.jpg" alt="1520328463734333.jpg" width="730" height="213"></p><p><br></p><p><span label="明显强调">解决方式</span></p><p>打开c:\\Windows\\System32\\</p><p>找到cmd.exe</p><p>单击右键，以管理员运行cmd</p><p>输入以下命令，回车运行：</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">sfc <span class="token operator">/</span>scannow<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p><span><span>扫描系统损坏文件并进行修复</span></span></p><p><span>注：</span>sfc \\scannow 是系统检测文件，这个程序的作用就是检测系统文件，如果检测到受保护的文件已经被不正确的文件覆盖，它就从系统文件备份（就是dllcache）中提取正确的文件系统，替换不正确的文件</p><p><img src="https://wubin.pro/Upload/ueditor/image/20180306/1520328896912727.jpg" alt="1520328896912727.jpg" width="728" height="414"></p><p>完成之后再重新启动电脑即可。</p>', 392),
(117, 'macOS High Sierra 安装mysql数据库', 100, 0, '2019-03-16 14:52:29', '/upload/20190316/ec2f13b40a05bd957c54525b6afd0139.png', 2, '本文详细介绍macOS High Sierra 安装下载mysql ，https://dev.mysql.com/downloads/mysql/，文中使用dmg进行的安装，简单粗暴，mysql是官网最新版5.7.21，mac系统版本10.13.3，有需要安装的朋友可以进行参考......', 'Mrs.默先森', 57, 0, '<p><span label="明显强调">下载</span></p><p>下载mysql for mac：<a href="https://dev.mysql.com/downloads/mysql/" target="_blank" title="https://dev.mysql.com/downloads/mysql/">https://dev.mysql.com/downloads/mysql/</a></p><p>这里下载是dmg，也就是第一个</p><p><img src="https://wubin.pro/Upload/ueditor/image/20180228/1519799189968160.png" alt="1519799189968160.png" width="690" height="404"></p><p><span label="明显强调">安装</span></p><p>双击dmg进行安装即可</p><p>安装完成之后将弹窗中的root密码记录下来</p><p>如果安装完成就忘记密码</p><p>那你可能需要：<a href="https://www.wubin.pro/c/35.html" target="_self" title="mac忘记Mysql密码解决方法">mac忘记Mysql密码解决方法</a></p><p><img src="https://wubin.pro/Upload/ueditor/image/20180228/1519799539446787.png" alt="1519799539446787.png" width="675" height="286"></p><p><span label="明显强调">启动</span></p><p>打开偏好设置</p><p>找见mysql，启动mysql即可</p><p>或者可勾选复选框</p><p>在系统系统时候自动启动mysql服务</p><p><img src="https://wubin.pro/Upload/ueditor/image/20170816/1502868060108263.png" width="675" height="327"></p><p><span label="明显强调">执行mysql</span></p><p>将mysql命令添加到系统命令</p><p>vi&nbsp;<span courier="" font-size:="" white-space:="" background-color:="">.bash_profile</span>&nbsp;或用编辑器编辑</p><p>加入&nbsp;<span courier="" font-size:="" white-space:="" background-color:="">PATH=$PATH:/usr/local/mysql/bin</span>&nbsp;</p><p>然后终端执行：<span courier="" font-size:="" white-space:="" background-color:="">source ~/.bash_profile</span>&nbsp; &nbsp;&nbsp;</p><p>可参考：<a href="https://www.wubin.pro/c/28.html" target="_blank" title="mac 设置环境变量">mac 设置环境变量</a></p><p><br></p><p><br></p><p>使用mysql -uroot -p(安装弹窗中的密码)</p><p>登录mysql</p><p>执行命令重置mysql密码：</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token constant">SET</span> <span class="token constant">PASSWORD</span> <span class="token keyword">FOR</span> <span class="token single-quoted-string string">''root''</span>@<span class="token single-quoted-string string">''localhost''</span> <span class="token operator">=</span> <span class="token function">PASSWORD</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''newpassword''</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>', 232),
(118, 'Phpstorm界面不停的indexing，不停的闪烁', 100, 0, '2019-03-16 14:53:51', '/upload/20190316/02e786d5cd101ce053823d48bb291eda.gif', 2, 'phpstrorm开启之后不停的indexing，就是不停的闪啊闪的，闪的都对生活失去信心了，其实一直闪也挺好，手指随着键盘起舞......', 'Mrs.默先森', 57, 0, '<p><span helvetica="" pingfang="" hiragino="" sans="" wenquanyi="" micro="" microsoft="" font-size:="" background-color:="">选择 File-&gt;Invalidate Caches / Restart...-&gt;Invalidate and Restart，就行了！</span></p><p><span helvetica="" pingfang="" hiragino="" sans="" wenquanyi="" micro="" microsoft="" font-size:="" background-color:=""></span></p><p><br></p><p style="text-align: center;"><img src="https://wubin.pro/Upload/ueditor/image/20180226/1519649691987725.gif" width="282" height="146"></p><div><br></div>', 305),
(119, 'Hbuilder项目管理器无法找到', 100, 0, '2019-03-16 14:54:57', '/upload/20190316/e96af2d81b7380b9ff6054cada4a2a02.png', 2, 'Hbuilder编辑器，左侧的项目管理器丢失...', 'Mrs.默先森', 57, 0, '<p>Hbuilder编辑器，左侧的项目管理器丢失...</p><p><br></p><p><img src="https://wubin.pro/Upload/ueditor/image/20180223/1519376436347552.png" width="737" height="443"></p><p>可在这里重新打开左侧的项目管理器：</p><p><img src="http://www.wubin.pro/Upload/ueditor/image/20180223/1519376436683980.png"></p>', 289),
(120, 'git将代码同时推送到github、oschina', 100, 0, '2019-03-16 14:56:09', '/upload/20190316/5bf537a813504772f0f92bda0524e58a.png', 2, '多地储备粮食，防止天zai发生，git也可以同时推送到不同平台，由于大家都懂原因，github访问速度回比较慢，这个时候码云优势就体现出来了，多地备份，麻麻再也不用担心系统崩溃了，操作也比较简单实用...', 'Mrs.默先森', 57, 0, '<p><span><span label="明显强调">首先</span></span></p><p>你需要有<a href="https://github.com/" target="_blank" title="github">github</a>和<a href="https://gitee.com/" target="_blank" title="码云">码云</a>账号</p><p>这个自行搞定即可</p><p><br></p><p><span><span label="明显强调">在github创建一个项目</span></span></p><p><img src="http://www.wubin.pro/Upload/ueditor/image/20180115/1516021132904438.png" width="700" height="578"></p><p><br></p><p><span><span label="明显强调">将项目导入到码云中</span></span></p><p><img src="https://wubin.pro/Upload/ueditor/image/20180115/1516021132415125.png" width="450" height="361"></p><p><img src="https://wubin.pro/Upload/ueditor/image/20180115/1516021132348938.png" width="689" height="96"></p><p><br></p><p><span><span label="明显强调">将github项目clone到本地</span></span></p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">$ git clone https<span class="token punctuation">:</span><span class="token comment">//github.com/Imasuperman/thinkphp5-crblog.git</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p class="p1"><span class="s1">$ git clone https://github.com/Imasuperman/thinkphp5-crblog.git</span></p><p class="p1"><span class="s1">Cloning into ''thinkphp5-crblog''...</span></p><p class="p1"><span class="s1">remote: Counting objects: 3, done.</span></p><p class="p1"><span class="s1">remote: Compressing objects: 100% (2/2), done.</span></p><p class="p1"><span class="s1">remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0</span></p><p class="p1"><span class="s1">Unpacking objects: 100% (3/3), done.</span></p><p><br></p><p>进入项目目录</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">$ cd thinkphp5<span class="token operator">-</span>crblog<span class="token operator">/</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>查看当前配置有哪些远程仓库</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">$ git remote <span class="token operator">-</span>v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p class="p1"><span class="s1">$ git remote -v</span></p><p class="p1"><span class="s1">origin<span class="Apple-tab-span"></span>https://github.com/Imasuperman/thinkphp5-crblog.git (fetch)</span></p><p class="p1"><span class="s1">origin<span class="Apple-tab-span"></span>https://github.com/Imasuperman/thinkphp5-crblog.git (push)</span></p><p>可以看到目前只有github</p><p>&nbsp;</p><p>执行命令（<span pingfang="" hanhei="" microsoft="" background-color:="">origin-osc可改，它只是https://gitee.com/shuaibin/thinkphp5-crblog.git的别名</span>）：</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">$ git remote add origin<span class="token operator">-</span>osc https<span class="token punctuation">:</span><span class="token comment">//gitee.com/shuaibin/thinkphp5-crblog.git</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>再查看当前配置有哪些远程仓库</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">$ git remote <span class="token operator">-</span>v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p class="p1"><span class="s1">$ git remote -v</span></p><p class="p1"><span class="s1">origin<span class="Apple-tab-span"></span>https://github.com/Imasuperman/thinkphp5-crblog.git (fetch)</span></p><p class="p1"><span class="s1">origin<span class="Apple-tab-span"></span>https://github.com/Imasuperman/thinkphp5-crblog.git (push)</span></p><p class="p1"><span class="s1">origin-osc<span class="Apple-tab-span"></span>https://gitee.com/shuaibin/thinkphp5-crblog.git (fetch)</span></p><p class="p1"><span class="s1">origin-osc<span class="Apple-tab-span"></span>https://gitee.com/shuaibin/thinkphp5-crblog.git (push)</span></p><p class="p1"><span class="s1">&nbsp;</span></p><p class="p1"><span><span label="明显强调">将代码提交到github和码云</span></span></p><p class="p1">在项目中创建测试文件</p><p class="p1">依次执行命令即可提交至两个仓库</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">$ git add <span class="token operator">-</span>A\r\n$ git commit <span class="token operator">-</span>m <span class="token single-quoted-string string">''描述''</span>\r\n$ git push origin master\r\n$ git push origin<span class="token operator">-</span>osc master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p class="p1"><span class="s1">$ git add -A</span></p><p class="p1"><span class="s1">$ git commit -m ''wubin.pro''</span></p><p class="p1">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s1">[master 6821831] wubin.pro</span></p><p class="p1">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s1"><span class="Apple-converted-space">&nbsp;</span>1 file changed, 0 insertions(+), 0 deletions(-)</span></p><p class="p1">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s1"><span class="Apple-converted-space">&nbsp;</span>create mode 100644 index.php</span></p><p class="p1"><span class="s1">$ git push origin master</span></p><p class="p1">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s1">Counting objects: 3, done.</span></p><p class="p1">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s1">Delta compression using up to 8 threads.</span></p><p class="p1">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s1">Compressing objects: 100% (2/2), done.</span></p><p class="p1">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s1">Writing objects: 100% (3/3), 280 bytes | 280.00 KiB/s, done.</span></p><p class="p1">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s1">Total 3 (delta 0), reused 0 (delta 0)</span></p><p class="p1">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s1">To https://github.com/Imasuperman/thinkphp5-crblog.git</span></p><p class="p1">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s1"><span class="Apple-converted-space">&nbsp;&nbsp;&nbsp;</span>6898f23..6821831<span class="Apple-converted-space">&nbsp;&nbsp;</span>master -&gt; master</span></p><p class="p1"><span class="s1">$ git push origin-osc master</span></p><p class="p1">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s1">Counting objects: 3, done.</span></p><p class="p1">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s1">Delta compression using up to 8 threads.</span></p><p class="p1">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s1">Compressing objects: 100% (2/2), done.</span></p><p class="p1">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s1">Writing objects: 100% (3/3), 280 bytes | 280.00 KiB/s, done.</span></p><p class="p1">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s1">Total 3 (delta 0), reused 0 (delta 0)</span></p><p class="p1">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s1">To https://gitee.com/shuaibin/thinkphp5-crblog.git</span></p><p class="p1">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s1"><span class="Apple-converted-space">&nbsp;&nbsp;&nbsp;</span>6898f23..6821831<span class="Apple-converted-space">&nbsp;&nbsp;</span>master -&gt; master</span></p><p><br></p><p><span><span label="明显强调">脚本简化操作</span></span></p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">vi push<span class="token punctuation">.</span>sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>在脚本中输入内容：<br></p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token shell-comment comment">#!/bin/bash</span>\r\ngit push origin master\r\ngit push origin<span class="token operator">-</span>osc master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>更改权限，给当前用户增加执行权限<br></p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">chmod u<span class="token operator">+</span>x push<span class="token punctuation">.</span>sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>再进行提交时候，即可同时提交至两个托管仓库</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token punctuation">.</span><span class="token operator">/</span>push<span class="token punctuation">.</span>sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p class="p1"><span class="s1">$ git add -A</span></p><p class="p1"><span class="s1">$ git commit -m ''测试提交''</span></p><p class="p1"><span class="s1">&nbsp;&nbsp;&nbsp;&nbsp;[master 809004a] 测试提交</span></p><p class="p1"><span class="s1"><span class="Apple-converted-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>2 files changed, 3 insertions(+)</span></p><p class="p1"><span class="s1"><span class="Apple-converted-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>create mode 100644 b.txt</span></p><p class="p1"><span class="s1"><span class="Apple-converted-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>create mode 100755 push.sh</span></p><p class="p1"><span class="s1">$ ./push.sh<span class="Apple-converted-space">&nbsp;</span></span></p><p class="p1">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s1">Counting objects: 3, done.</span></p><p class="p1">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s1">Delta compression using up to 8 threads.</span></p><p class="p1">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s1">Compressing objects: 100% (3/3), done.</span></p><p class="p1">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s1">Writing objects: 100% (3/3), 380 bytes | 380.00 KiB/s, done.</span></p><p class="p1">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s1">Total 3 (delta 0), reused 0 (delta 0)</span></p><p class="p1">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s1">To https://github.com/Imasuperman/thinkphp5-crblog.git</span></p><p class="p1">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s1"><span class="Apple-converted-space">&nbsp;&nbsp;&nbsp;</span>6821831..809004a<span class="Apple-converted-space">&nbsp;&nbsp;</span>master -&gt; master</span></p><p class="p1">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s1">Counting objects: 3, done.</span></p><p class="p1">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s1">Delta compression using up to 8 threads.</span></p><p class="p1">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s1">Compressing objects: 100% (3/3), done.</span></p><p class="p1">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s1">Writing objects: 100% (3/3), 380 bytes | 380.00 KiB/s, done.</span></p><p class="p1">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s1">Total 3 (delta 0), reused 0 (delta 0)</span></p><p class="p1">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s1">To https://gitee.com/shuaibin/thinkphp5-crblog.git</span></p><p class="p1">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s1"><span class="Apple-converted-space">&nbsp;&nbsp;&nbsp;</span>6821831..809004a<span class="Apple-converted-space">&nbsp;&nbsp;</span>master -&gt; master</span></p>', 267),
(121, 'mac下使用git clone出现', 100, 0, '2019-03-16 14:57:48', '/upload/20190316/bdc33f3a290a12e1499ca5fb236f003d.png', 2, '之前使用git一直是没有问题的，突然间键盘坏掉了换了个新的，键盘都换新了，索性将系统也重置了，备份了代码，软件就从头来吧,信息苦苦装到大半夜，在使用git clone时候出现提示信息，导致git无法正常使用...', 'Mrs.默先森', 57, 0, '<p><span>问题描述</span></p><p>在mac系统，使用git下载项目</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">git clone <span class="token constant">XXX</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>但是出现了报错，错误信息如下：</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">xcrun<span class="token punctuation">:</span> error<span class="token punctuation">:</span> invalid active developer path <span class="token punctuation">(</span><span class="token operator">/</span>Library<span class="token operator">/</span>Developer<span class="token operator">/</span>CommandLineTools<span class="token punctuation">)</span><span class="token punctuation">,</span> missing xcrun at<span class="token punctuation">:</span> <span class="token operator">/</span>Library<span class="token operator">/</span>Developer<span class="token operator">/</span>CommandLineTools<span class="token operator">/</span>usr<span class="token operator">/</span>bin<span class="token operator">/</span>xcrun<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p><span>问题分析</span></p><p>开始以为是git安装的问题</p><p class="p1"><span class="s1">wubindeMacBook-Pro:thinkphp-crblog wubin$ whereis git</span></p><p class="p1"><span class="s1">/usr/bin/git</span></p><p>查看git已经正常安装</p><p><br></p><p>尝试重新安装：</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">brew install git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>出现报错：<br></p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">Error<span class="token punctuation">:</span> The following formula<span class="token punctuation">:</span>\r\n  git\r\ncannot be installed <span class="token keyword">as</span> a binary package <span class="token keyword">and</span> must be built from source<span class="token punctuation">.</span>\r\nInstall the Command Line Tools<span class="token punctuation">:</span>\r\n  xcode<span class="token operator">-</span>select <span class="token operator">--</span>installError<span class="token punctuation">:</span> Git must be installed <span class="token keyword">and</span> in your <span class="token constant">PATH</span><span class="token operator">!</span>Error<span class="token punctuation">:</span> The following formula<span class="token punctuation">:</span>\r\n  git\r\ncannot be installed <span class="token keyword">as</span> a binary package <span class="token keyword">and</span> must be built from source<span class="token punctuation">.</span>\r\nInstall the Command Line Tools<span class="token punctuation">:</span>\r\n  xcode<span class="token operator">-</span>select <span class="token operator">--</span>install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>其实上面报错信息中可以看到</p><p>需要安装Command Line Tools</p><p>执行命令：</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">xcode<span class="token operator">-</span>select <span class="token operator">--</span>install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>安装即可，当再次执行以上命令提示：<br></p><p class="p1"><span class="s1">wubindeMacBook-Pro:thinkphp-crblog wubin$ xcode-select --install</span></p><p class="p1"><span class="s1">xcode-select: error: command line tools are already installed, use "Software Update" to install updates</span></p><p>说明已经安装成功</p><p><br></p><p>随后执行git clone XX</p><p>项目正常下载到本地</p>', 295),
(122, 'PhpStorm配置本地代码与服务器自动同步', 100, 0, '2019-03-16 14:59:02', '/upload/20190316/5f1fa181811e1fd73cd56b9c2bc513e5.png', 2, 'PhpStorm是一个轻量级且便捷的PHP IDE，其旨在提高用户效率，可深刻理解用户的编码，提供智能代码补全，快速导航以及即时错误检查。超人在使用众多编辑器中赶脚还是这款IDE绝对给力，点此到官网地址，文中详细说明了其破解，ftp代码自动同步服务器，还不速速围观...', 'Mrs.默先森', 57, 0, '<p><span microsoft="">PhpStorm是一个轻量级且便捷的PHP IDE，其旨在提高用户效率，可深刻理解用户的编码，提供智能代码补全，快速导航以及即时错误检查。超人在使用众多编辑器中赶脚还是这款IDE绝对给力，当然你使用ftp工具进行上传也不是不行，比如说我们有时候要修改代码及时看效果的话使用编辑器及该及传就会非常方便了，闲话少说，我们直奔主题。</span></p><h3><span microsoft="">下载与破解</span></h3><p><span microsoft="">附上官网地址：<a href="http://www.jetbrains.com/phpstorm/" target="_blank">PhpStorm IDE</a><br></span></p><p><span>破解参考：<a href="http://idea.lanyus.com/" target="_blank">IntelliJ IDEA注册码</a></span></p><p><span>使用或者破解中有问题，可以在下方进行留言或者联系超人来协助解决，<span microsoft="">破解完成之后打开PhpStorm之后选择open选择一个本地项目打开就ok了</span></span></p><p><span>如果你没有服务器，那你还是在下面评论评论赶紧撤吧</span></p><h3><span>ftp配置连接服务器</span></h3><p><span>打开之后你应该是看到这样一个界面：<br></span></p><p><span><img src="https://wubin.pro/Upload/ueditor/image/20170621/1498058885677147.png" alt="1498058885677147.png">这个时候，我们需要进行服务器参数配置，首先第一步需要打开远程服务器，一次按照下图中进行选择：<img src="https://wubin.pro/Upload/ueditor/image/20170621/1498059795936714.png" alt="1498059795936714.png"><img src="https://wubin.pro/Upload/ueditor/image/20170621/1498059959179347.png" alt="1498059959179347.png">之后会弹出一下对话框，进行设置填写</span></p><p><span><img src="https://wubin.pro/Upload/ueditor/image/20170621/1498060464641265.png" alt="1498060464641265.png"></span></p><p><span>随后填写服务器相关信息进行远程连接，这里超人使用ftp进行连接，配置如下：<img src="https://wubin.pro/Upload/ueditor/image/20170622/1498061045425674.png" alt="1498061045425674.png">ok，这个时候出现连接成功提示，证明你已经连上服务器了，不要着急点右下角的确定按钮，那么接下来需要两部操作就ok了<img src="https://wubin.pro/Upload/ueditor/image/20170622/1498061436927228.png" alt="1498061436927228.png"></span></p><p><img src="https://wubin.pro/Upload/ueditor/image/20170622/1498061615361306.png"></p><p>到这里点击ok，知道全部窗口关闭就成了，至此连接服务器成功，下图代表连接成功：<img src="https://wubin.pro/Upload/ueditor/image/20170622/1498061798731709.png" alt="1498061798731709.png"></p><h3>设置自动上传</h3><p>修改代码，保存自动上传，服务器与本地保持同步代码<img src="https://wubin.pro/Upload/ueditor/image/20170622/1498062358475654.png" alt="1498062358475654.png"><img src="https://wubin.pro/Upload/ueditor/image/20170622/1498062358824184.png" alt="1498062358824184.png"><img src="http://img.baidu.com/hi/jx2/j_0015.gif" width="40" height="40" border="0" vspace="0" title="" alt="">,终于配置完成了，可以尝试在你本地修改代码，这时会自动同步到服务器；</p><p>这样就就算有一方丢失，你也不需要担心，因为还有对方为了你不抛弃，不放弃给你做着备份...</p>', 289),
(123, 'PhpStorm配置less自动编译css', 100, 0, '2019-03-16 15:01:19', '/upload/20190316/874fd60e35104d0a943c884bc69a2ec2.jpg', 2, 'Less 是一门 CSS 预处理语言，它扩展了 CSS 语言，增加了变量、Mixin、函数等特性，使 CSS 更易维护和扩展。作为 CSS 的一种扩展，Less 不仅完全兼容 CSS 语法，而且连新增的特性也是使用 CSS 语法。这样的设计使得学习 Less 很轻松，而且你可以在任何时候回退到 CSS...', 'Mrs.默先森', 57, 0, '<p>Less 是一门 CSS 预处理语言，它扩展了 CSS 语言，增加了变量、Mixin、函数等特性，使 CSS 更易维护和扩展。作为 CSS 的一种扩展，Less 不仅完全兼容 CSS 语法，而且连新增的特性也是使用 CSS 语法。这样的设计使得学习 Less 很轻松，而且你可以在任何时候回退到 CSS...</p><p><br></p><p>less中文网：<a href="http://lesscss.cn/" target="_blank" title="less中文网">less中文网</a></p><p>nodejs下载：<a href="https://nodejs.org/en/download/" target="_blank" title="nodejs">nodejs</a></p><p>less使用可作为参考；</p><p>phpstorm配置支持less需要使用npm命令；</p><p>需要安装nodejs</p><p>本文在windows和mac下进行测试；</p><h3>第一步：安装nodejs</h3><p>点此<a href="https://nodejs.org/en/download/" target="_self" title="nodejs下载">nodejs下载</a>，找到自己对应的版本；<br></p><p>点击下载；</p><p>按照提示一步一步安装即可；</p><h3>第二步：npm安装less</h3><p>在终端运行：<br></p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">npm install <span class="token operator">-</span>g less<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>ps：以上命令操作你都可以在<a href="http://lesscss.cn/" target="_blank" title="less中文网">less中文网</a>中找得到<br></p><p>然后重启编辑器；</p><p>如果不能正常运行以下步骤，那就重启电脑；<img src="http://img.baidu.com/hi/jx2/j_0023.gif" width="40" height="40" border="0" vspace="0" title="" alt=""></p><h3>第三步：修改phpstorm配置</h3><p>windows打开设置【setting】<br></p><p>mac找到首选项【Preferences】</p><p>打开之后，在左上角搜索框输入：file Watchers<img src="https://wubin.pro/Upload/ueditor/image/20170702/1499011150981100.png" alt="1499011150981100.png">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;之后会弹出new watcher对话框</p><p>点击ok</p><p>再点ok，把对话框全点没了；</p><p><br></p><p>然后你就可以新建文件index.less进行测试</p><p>如果新建文件上部弹出提示消息；</p><p>那就点击Add watcher添加监听；</p><p>每次书写，ctrl+s保存会自动编译css</p>', 462);
INSERT INTO `blog_article` (`arc_id`, `arc_title`, `arc_sort`, `sendtime`, `updatetime`, `arc_thumb`, `is_recycle`, `arc_digest`, `arc_author`, `cate_id`, `admin_id`, `arc_content`, `arc_click`) VALUES
(124, 'phpStorm 2017 破解', 100, 0, '2019-03-16 15:02:21', '/upload/20190316/071ce77ef7c35d97c2d44ce49432970e.png', 2, '在我大天朝，破解满天飞，phpstorm是编辑代码一款非常不错的编辑器，用起来嘎嘎给力，安装完成之后，需要注册码，去官网一看，什么?199刀，这果断必须是不行的，此路不通，果断掉头就走，这里给出集中测试好使的破解方式方法...', 'Mrs.默先森', 57, 0, '<p>在我大天朝，破解满天飞，phpstorm是编辑代码一款非常不错的编辑器，用起来嘎嘎给力，安装完成之后，需要注册码，去官网一看，什么?199刀，这果断必须是不行的，此路不通，果断掉头就走，这里给出集中测试好使的破解方式方法...</p><p><br></p><p>学生凭学生证可<a href="https://sales.jetbrains.com/hc/zh-cn/articles/207154369-%E5%AD%A6%E7%94%9F%E6%8E%88%E6%9D%83%E7%94%B3%E8%AF%B7%E6%96%B9%E5%BC%8F" target="_blank" title="免费申请">免费申请</a>正版授权</p><p>当然如果资金不是问题</p><p>直接购买正版即可</p><p>不用这么费劲</p><h3><span><span>方式一：</span></span></h3><p><span><a href="http://idea.lanyus.com/" target="_blank" title="IntelliJ IDEA 注册码">IntelliJ IDEA 注册码</a></span><span><span><br></span></span></p><p><span><span segoe="" lucida="" microsoft="" droid="" wenquanyi="" micro="" hiragino="" sans="" gb="" text-align:="" background-color:="">注册码有效期为2016年11月24日至2017年11月23日</span><br segoe="" lucida="" microsoft="" droid="" wenquanyi="" micro="" hiragino="" sans="" gb="" text-align:="" white-space:="" background-color:=""><span segoe="" lucida="" microsoft="" droid="" wenquanyi="" micro="" hiragino="" sans="" gb="" text-align:="" background-color:="">使用前请将“0.0.0.0 account.jetbrains.com”添加到hosts文件中</span></span></p><p><span><span segoe="" lucida="" microsoft="" droid="" wenquanyi="" micro="" hiragino="" sans="" gb="" text-align:="" background-color:="">点击获取注册码</span></span></p><p><span><span segoe="" lucida="" microsoft="" droid="" wenquanyi="" micro="" hiragino="" sans="" gb="" text-align:="" background-color:="">然后复制注册码</span></span></p><p><span><span segoe="" lucida="" microsoft="" droid="" wenquanyi="" micro="" hiragino="" sans="" gb="" text-align:="" background-color:="">粘贴到Activation code即可</span></span></p><p><img src="https://wubin.pro/Upload/ueditor/image/20170728/1501211269570757.png" alt="1501211269570757.png" width="714" height="589"></p><p><span><span segoe="" lucida="" microsoft="" droid="" wenquanyi="" micro="" hiragino="" sans="" gb="" text-align:="" background-color:=""></span></span></p><h3><span><span>方式二：</span></span></h3><p>License server 输入：http://www.0-php.com:1017</p><p>即可破解运行</p><p>如下</p><p><img src="https://wubin.pro/Upload/ueditor/image/20170728/1501211602539140.png" alt="1501211602539140.png"></p><div><br></div>', 256),
(125, 'phpStudy的Apache配置虚拟主机', 100, 0, '2019-03-16 15:03:22', '/upload/20190316/139904f3c316038694efeead3613f798.png', 2, '该程序包集成最新的Apache+Nginx+LightTPD+PHP+MySQL+phpMyAdmin+Zend Optimizer+Zend Loader，一次性安装，无须配置即可使用，是非常方便、好用的PHP调试环境。虚拟主机配置在实际开发中也是比较常用的，直接域名访问项目...', 'Mrs.默先森', 57, 0, '<p>该程序包集成最新的Apache+Nginx+LightTPD+PHP+MySQL+phpMyAdmin+Zend Optimizer+Zend Loader，一次性安装，无须配置即可使用，是非常方便、好用的PHP调试环境。虚拟主机配置在实际开发中也是比较常用的，直接域名访问项目...</p><p><span bitstream="" vera="" font-size:="" background-color:="">支持Apache、IIS、Nginx和LightTPD。</span></p><p>下载地址：<a href="http://www.phpstudy.net/phpstudy/phpStudy20161103.zip" target="_blank" title="http://www.phpstudy.net/phpstudy/phpStudy20161103.zip">http://www.phpstudy.net/phpstudy/phpStudy20161103.zip</a><br></p><p>以下测试环境是phpstudy</p><p><br></p><p>配置虚拟主机需要在apache配置文件【httpd.conf】中开启加载虚拟主机配置【vhosts.conf】</p><p>Include conf/vhosts.conf<br></p><p>确保没有注释掉【默认是打开的】</p><p><span><span>注意：</span></span><span>以下操作中改动配置文件之后需要重启服务器环境</span></p><h3>方式一：</h3><p>可在phpstudy面板上进行操作配置即可</p><p>①点击其他选项菜单--&gt;站点域名管理</p><p><img src="https://wubin.pro/Upload/ueditor/image/20170728/1501227563495709.png" alt="1501227563495709.png" width="380" height="334"></p><p><img src="https://wubin.pro/Upload/ueditor/image/20170728/1501227818239863.png" alt="1501227818239863.png" width="391" height="335"></p><p>站点域名设置时候</p><p>注意一下下面的说明</p><p>这里填写一个域名</p><p>指向到对应项目的根目录就可以</p><p>然后点击【新增】</p><p>再点击【保存设置并生成配置文件】</p><p>这里我设置了两个域名app.dev和blog.dev</p><p>分别指向www/blog/和www/app/</p><p>通过地址栏分别访问就可以访问到自己项目</p><p><img src="https://wubin.pro/Upload/ueditor/image/20170728/1501228170990136.png" alt="1501228170990136.png" width="633" height="255"></p><p><br></p><h3>方式二：</h3><p>当然，也可以自己修改配置文件<br></p><p>不过就比较麻烦了</p><p>建议还是使用phpstudy，方便高效</p><p>下面来详细说明一下如何手动修改配置文件配置虚拟主机</p><p><br></p><p>① 配置虚拟主机需要在apache配置文件【httpd.conf】中开启加载虚拟主机配置【vhosts.conf】</p><p>&nbsp;&nbsp;&nbsp;&nbsp;Include conf/vhosts.conf<br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;确保没有注释掉【默认是打开的】</p><p>② 在vhost.conf中添加一下代码</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token operator">&lt;</span>VirtualHost <span class="token operator">*</span><span class="token punctuation">:</span><span class="token number">80</span><span class="token operator">&gt;</span>    \r\n    DocumentRoot <span class="token double-quoted-string string">"D:\\phpStudy\\WWW\\ceshi"</span>\r\n    ServerName ceshi<span class="token punctuation">.</span>dev    <span class="token shell-comment comment">#域名</span>\r\n    ServerAlias \r\n      <span class="token shell-comment comment">#根目录</span>\r\n      Options  FollowSymLinks ExecCGI\r\n      AllowOverride All\r\n      Order allow<span class="token punctuation">,</span>deny\r\n      Allow from all\r\n      <span class="token keyword">Require</span> all granted\r\n<span class="token operator">&lt;</span><span class="token operator">/</span>VirtualHost<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>③ 在浏览器输入ceshi.dev,就可进行正常访问项目</p><p><br></p><p><span>注意：</span>如果你的虚拟主机域名配置的是qq.com这种已经存在的外网域名</p><p>那么，当你做好②步配置之后</p><p>你在地址栏输入qq.com的时候</p><p>也能访问</p><p>只不过是会访问到腾讯网站去了</p><p>那么这个时候需要增加一步</p><p>④ 配置本地hosts文件：C:\\Windows\\System32\\drivers\\etc\\hosts;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;在最后加入以下代码<br></p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span> qq<span class="token punctuation">.</span>com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>这时，当访问qq.com时候就可以访问你自己的项目了</p>', 398),
(126, 'windows环境下php集成环境phpStudy2017 开启目录列表显示', 100, 0, '2019-03-16 15:04:19', '/upload/20190316/fe69f2f429114f6d0467d474195e4217.png', 2, '前几天phpStudy更新了2017版本，下载安装完之后，地址栏输入localhost之后：You don`t have permission to access/ on this server;在2016软件页面上有非常方便的开启目录显示的，2017版找半天也没找见，那就修改apache配置文件呗，打开看了之后也没什么问题...', 'Mrs.默先森', 57, 0, '<p>前几天phpStudy更新了2017版本，下载安装完之后，地址栏输入localhost之后：You don`t have permission to access/ on this server;在2016软件页面上有非常方便的开启目录显示的，2017版找半天也没找见，那就修改apache配置文件呗，打开看了之后也没什么问题，那其配置会是在哪里呢，搜索半天也没找见，最后吃了根一块钱的冰棍，就找到哪里配置了，这里分享给有需要的小伙伴</p><p>phpstudy官网：<a href="http://www.phpstudy.net/" target="_blank" title="http://www.phpstudy.net/">http://www.phpstudy.net/</a><br></p><p>phpstudy2017下载：<a href="http://www.phpstudy.net/phpstudy/phpstudy2017.zip" target="_blank" title="http://www.phpstudy.net/phpstudy/phpstudy2017.zip">http://www.phpstudy.net/phpstudy/phpstudy2017.zip</a></p><h4><span><span>更新说明</span></span></h4><p>更新之后界面上增加了工具箱和快捷键配置</p><p>增加了手册、翻译等功能</p><p>个人觉得一些反而没有以前使用方便</p><p>www目录、apache、php等放在D:\\phptudy\\PHPTutorial\\</p><p><img src="https://wubin.pro/Upload/ueditor/image/20170911/1505059880396593.jpg" width="323" height="271"><img src="http://www.wubin.pro/Upload/ueditor/image/20170911/1505059880751071.jpg" width="345" height="274"><br></p><p><br></p><p>更新之后感觉如何，还需要进一步使用之后，各位小伙伴自己体验吧，ok，我们来说本篇文章的主题：apache开启目录显示，当安装完成phpstudy2017默认目录列表是未开启的，那么首先肯定是修改apache的配置文件httpd.conf，配置文件位置：D:\\phptudy\\PHPTutorial\\Apache\\conf\\httpd.conf或者是可以通过phpStudy启动页面：其他选项菜单--&gt;打开配置文件--&gt;httpd-conf来打开</p><p>这个是其默认的配置，看了目录列表显示是开启的，但浏览器显示依然无法访问</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">DocumentRoot <span class="token double-quoted-string string">"D:\\phptudy\\PHPTutorial\\WWW"</span>\r\n<span class="token operator">&lt;</span>Directory <span class="token operator">/</span><span class="token operator">&gt;</span>\r\n    Options <span class="token operator">+</span>Indexes <span class="token operator">+</span>FollowSymLinks <span class="token operator">+</span>ExecCGI\r\n    AllowOverride All\r\n    Order allow<span class="token punctuation">,</span>deny\r\n    Allow from all    \r\n    <span class="token keyword">Require</span> all granted\r\n<span class="token operator">&lt;</span><span class="token operator">/</span>Directory<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><h4><span><span>解决方法</span></span></h4><p>后来发现在vhosts.conf中有一个默认虚拟主机配置</p><p>配置文件位置：D:\\phptudy\\PHPTutorial\\Apache\\conf\\vhosts.conf</p><p>或者通过phpstudy软件页面打开vhosts-ini</p><p><img src="http://www.wubin.pro/Upload/ueditor/image/20170911/1505059880448781.jpg" width="341" height="226"></p><p>打开配置文件之后会看到默认一个虚拟主机</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token operator">&lt;</span>VirtualHost _default_<span class="token punctuation">:</span><span class="token number">80</span><span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>将Options -Indexes修改为</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">Options <span class="token operator">+</span>Indexes<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>然后重启phpstudy集成环境，就可以正常显示目录列表了</p>', 386),
(127, '制作正式版 macOS 10.12 Sierra 安装 U盘', 100, 0, '2019-03-16 15:05:22', '/upload/20190316/fd4d997ddeb247543b0d4abd7f7137f1.jpg', 2, '之前一直在线安装mac系统，比较方便，但耗时较长，最近安装imac pro在线安装怎么也装不上这系统，后来自己翻资料，做了系统盘，u盘制作比较方便，主要是安装比较快，写出来分享大家...', 'Mrs.默先森', 57, 0, '<h4><span>一、准备工作</span></h4><p><span>①准备一个8G+U盘，确保U盘数据已经做好备份(该过程会抹掉U盘数据)</span></p><p><span>②下载macOS 10.12原版安装包，可点</span><a href="http://pan.baidu.com/s/1c2tmT0k" target="_blank" title="这里"><span>这里</span></a><span>进行下载，或者采用其他方式下载<br></span></p><p><span>③将其放到Application文件夹</span></p><p><img src="https://wubin.pro/Upload/ueditor/image/20170920/1505889158189022.png" alt="1505889158189022.png" width="263" height="209"><img src="https://wubin.pro/Upload/ueditor/image/20170920/1505888535307811.png" alt="1505888535307811.png" width="293" height="211"></p><p><br></p><h4><span>二、格式化U盘</span></h4><p><span>①将U盘插到电脑上，选择「应用程序」-&gt;「实用工具」-&gt;「磁盘工具」</span></p><p><span>②左侧菜单中找到U盘，点击格式化</span></p><p><span>③名称如数：ABCD(后面的命令中需要用到此名字，如果你对其进行修改，请务必记得修改下面的命令)，格式选择 「Mac OS 扩展 (日志式)」，选项选择「GUID 分区表」</span></p><p><span>④开始格式化</span></p><p><span><span><img src="https://wubin.pro/Upload/ueditor/image/20170920/1505888945982506.png" alt="1505888945982506.png" width="635" height="349"></span></span></p><h4><span>三、制作启动盘</span><br></h4><p><span><span></span></span><span>①打开mac电脑的终端</span></p><p><span>②复制以下命令粘贴到终端执行</span></p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">sudo <span class="token operator">/</span>Applications<span class="token operator">/</span>Install\\ macOS\\ Sierra<span class="token punctuation">.</span>app<span class="token operator">/</span>Contents<span class="token operator">/</span>Resources<span class="token operator">/</span>createinstallmedia <span class="token operator">--</span>volume <span class="token operator">/</span>Volumes<span class="token operator">/</span><span class="token constant">ABCD</span><span class="token operator">/</span> <span class="token operator">--</span>applicationpath <span class="token operator">/</span>Applications<span class="token operator">/</span>Install\\ macOS\\ Sierra<span class="token punctuation">.</span>app<span class="token operator">/</span> <span class="token operator">--</span>nointeraction<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p><span>③回车之后输入mac密码，接下来就是等待系统制作启动盘了</span></p><p><span>④这个过程大概需要十几分钟，当出现complete Done启动盘制作完成</span></p><p><span><span><img src="https://wubin.pro/Upload/ueditor/image/20170920/1505892018791893.png" alt="1505892018791893.png" width="423" height="273"></span></span></p><p><span>⑤制作完成之后，桌面出现「Install&nbsp;macOS Sierra」的盘符那么就表示启动盘是正常的了</span></p><h4><span><span><span>四、U盘启动安装</span></span></span></h4><p><span><span>①将制作好的盘插入需要安装系统的mac，</span></span></p><p><span><span>②启动mac，按住`option`不放，直到多出现一个usb选项</span></span></p><p><span><span>③选择U盘来安装 macOS Sierra，可以选择覆盖安装，或者格掉系统之后全新安装，整个过程大概20-30分钟就会安装好系统</span></span></p><p><span><span><br></span></span></p><p><span>附：</span><a href="https://support.apple.com/zh-cn/HT204904" target="_blank" title="官网的重装方法">官网的重装方法</a></p>', 587),
(128, '云骑士装机大师一键重装windows系统', 100, 0, '2019-03-16 15:06:25', '/upload/20190316/c0916df0cf98c7164899171bd5e2960d.png', 2, '云骑士装机大师，一键重装XP、windows7、windows8、windows10，一键制作u盘启动，一键备份还原数据，甚至无需光驱和U盘，无需电脑技术可一键重装：XP、Win7、Win8、Win8.1、Win10，soeasy,其中非常详细图文介绍，不想看没关系，有萌妹子视频详解教程...', 'Mrs.默先森', 57, 0, '<p>云骑士：<a href="http://www.yunqishi.net.cn/" target="_blank" title="http://www.yunqishi.net.cn/">http://www.yunqishi.net.cn/</a></p><p><br></p><p>可制作u盘启动、在线重装、一键备份、提供系统下载，个人体验了一把还是非常方便的，当中每一个操作在官网都介绍非常详细，重要的是，有视频介绍，更重要的是视频中是萌妹子来介绍...然后超人尝试度娘搜索了一下【一键装机】前面的都是类似的网站，跟云骑士基本都一样杨的，但是他们都少了一样东西，就是萌妹子@张磊，选择哪个看你...</p><p><img src="https://wubin.pro/Upload/ueditor/image/20171009/1507522289483737.png" width="692" height="164"></p><p><img src="https://wubin.pro/Upload/ueditor/image/20171009/1507522289318324.png" width="692" height="639"></p><p><img src="https://wubin.pro/Upload/ueditor/image/20171009/1507522289244635.png" width="678" height="579"></p>', 899);
INSERT INTO `blog_article` (`arc_id`, `arc_title`, `arc_sort`, `sendtime`, `updatetime`, `arc_thumb`, `is_recycle`, `arc_digest`, `arc_author`, `cate_id`, `admin_id`, `arc_content`, `arc_click`) VALUES
(129, 'Mac 安装Homebrew(macOS 缺失的软件包管理器)', 100, 0, '2019-03-16 15:09:11', '/upload/20190316/19640cde8e3c1ac8d02212069b8d451c.png', 2, 'Homebrew官网：https://brew.sh/index_zh-cn.html，使用Homebrew可以安装Apple没有预装但是我们又需要的东西，我们知道linux下，Red hat我们可以使用yum，Ubuntu中可以使用apt-get，再mac os系统下我们可以使用第三方软件包管理工具:Homebrew简称brew……', 'Mrs.默先森', 57, 0, '<p>Homebrew官网：<a href="https://brew.sh/index_zh-cn.html" target="_blank" title="https://brew.sh/index_zh-cn.html">https://brew.sh/index_zh-cn.html</a></p><p><span label="明显强调">Homebrew安装</span></p><p>Homebrew安装十分简单，将以下命令粘贴到你的终端、回车即可</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token operator">/</span>usr<span class="token operator">/</span>bin<span class="token operator">/</span>ruby <span class="token operator">-</span>e <span class="token double-quoted-string string">"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>安装界面在文章最后列出</p><p><span>Homebrew能干什么</span></p><p>搜索软件：brew search 软件名，如：brew search wget</p><p>安装，如：brew install wget</p><p>卸载，如：brew remove wget</p><p><br></p><p>Homebrew会将软件包安装到肚里目录</p><p>并将其软连接到/usr/local</p><p class="p1"><span class="s1">wubindeMacBook-Pro:htdocs wubin$ cd /usr/local/</span></p><p class="p1"><span class="s1">wubindeMacBook-Pro:local wubin$ find Cellar/</span></p><p class="p1"><span class="s1">Cellar/</span></p><p class="p1"><span class="s1">Cellar//wget</span></p><p class="p1"><span class="s1">Cellar//wget/1.19.2_1</span></p><p class="p1"><span class="s1">Cellar//wget/1.19.2_1/INSTALL_RECEIPT.json</span></p><p class="p1"><span class="s1">Cellar//wget/1.19.2_1/bin</span></p><p class="p1"><span class="s1">Cellar//wget/1.19.2_1/bin/wget</span></p><p class="p1"><span class="s1">Cellar//wget/1.19.2_1/.brew</span></p><p class="p1"><span class="s1">Cellar//wget/1.19.2_1/.brew/wget.rb</span></p><p><br></p><p class="p1"><span class="s1">wubindeMacBook-Pro:local wubin$ ls -l bin</span></p><p class="p1"><span class="s1">lrwxr-xr-x<span class="Apple-converted-space">&nbsp;&nbsp;</span>1 wubin<span class="Apple-converted-space">&nbsp;&nbsp;</span>admin<span class="Apple-converted-space">&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span>28<span class="Apple-converted-space">&nbsp;&nbsp;</span>1 15 11:31 brew -&gt; /usr/local/Homebrew/bin/brew</span></p><p class="p1"><span class="s1">lrwxr-xr-x<span class="Apple-converted-space">&nbsp;&nbsp;</span>1 wubin<span class="Apple-converted-space">&nbsp;&nbsp;</span>admin<span class="Apple-converted-space">&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span>32<span class="Apple-converted-space">&nbsp;&nbsp;</span>1 15 12:02 wget -&gt; ../Cellar/wget/1.19.2_1/bin/wget</span></p><p><span><br></span></p><p><span>Homebrew安装界面</span></p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">wubindeMacBook<span class="token operator">-</span>Pro<span class="token punctuation">:</span>htdocs wubin$ <span class="token operator">/</span>usr<span class="token operator">/</span>bin<span class="token operator">/</span>ruby <span class="token operator">-</span>e <span class="token double-quoted-string string">"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"</span>\r\n<span class="token operator">==</span><span class="token operator">&gt;</span> This script will install<span class="token punctuation">:</span>\r\n<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>bin<span class="token operator">/</span>brew\r\n<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share<span class="token operator">/</span>doc<span class="token operator">/</span>homebrew\r\n<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share<span class="token operator">/</span>man<span class="token operator">/</span>man1<span class="token operator">/</span>brew<span class="token punctuation">.</span><span class="token number">1</span>\r\n<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share<span class="token operator">/</span>zsh<span class="token operator">/</span>site<span class="token operator">-</span>functions<span class="token operator">/</span>_brew\r\n<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>etc<span class="token operator">/</span>bash_completion<span class="token punctuation">.</span>d<span class="token operator">/</span>brew\r\n<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>Homebrew\r\n<span class="token operator">==</span><span class="token operator">&gt;</span> The following existing directories will be made group writable<span class="token punctuation">:</span>\r\n<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>bin\r\n<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span><span class="token keyword">include</span>\r\n<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>lib\r\n<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share\r\n<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share<span class="token operator">/</span>doc\r\n<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share<span class="token operator">/</span>man\r\n<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share<span class="token operator">/</span>man<span class="token operator">/</span>man1\r\n<span class="token operator">==</span><span class="token operator">&gt;</span> The following existing directories will have their owner set to wubin<span class="token punctuation">:</span>\r\n<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>bin\r\n<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span><span class="token keyword">include</span>\r\n<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>lib\r\n<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share\r\n<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share<span class="token operator">/</span>doc\r\n<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share<span class="token operator">/</span>man\r\n<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share<span class="token operator">/</span>man<span class="token operator">/</span>man1\r\n<span class="token operator">==</span><span class="token operator">&gt;</span> The following existing directories will have their group set to admin<span class="token punctuation">:</span>\r\n<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>bin\r\n<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span><span class="token keyword">include</span>\r\n<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>lib\r\n<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share\r\n<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share<span class="token operator">/</span>doc\r\n<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share<span class="token operator">/</span>man\r\n<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share<span class="token operator">/</span>man<span class="token operator">/</span>man1\r\n<span class="token operator">==</span><span class="token operator">&gt;</span> The following <span class="token keyword">new</span> <span class="token class-name">directories</span> will be created<span class="token punctuation">:</span>\r\n<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>Cellar\r\n<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>Homebrew\r\n<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>Frameworks\r\n<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>etc\r\n<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>opt\r\n<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>sbin\r\n<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share<span class="token operator">/</span>zsh\r\n<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share<span class="token operator">/</span>zsh<span class="token operator">/</span>site<span class="token operator">-</span>functions\r\n<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span><span class="token keyword">var</span>\r\n<span class="token operator">==</span><span class="token operator">&gt;</span> The Xcode Command Line Tools will be installed<span class="token punctuation">.</span>\r\n\r\nPress <span class="token keyword">RETURN</span> to <span class="token keyword">continue</span> <span class="token keyword">or</span> any other key to abort\r\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token operator">/</span>usr<span class="token operator">/</span>bin<span class="token operator">/</span>sudo <span class="token operator">/</span>bin<span class="token operator">/</span>chmod u<span class="token operator">+</span>rwx <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>bin <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span><span class="token keyword">include</span> <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>lib <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share<span class="token operator">/</span>doc <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share<span class="token operator">/</span>man <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share<span class="token operator">/</span>man<span class="token operator">/</span>man1\r\nPassword<span class="token punctuation">:</span>\r\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token operator">/</span>usr<span class="token operator">/</span>bin<span class="token operator">/</span>sudo <span class="token operator">/</span>bin<span class="token operator">/</span>chmod g<span class="token operator">+</span>rwx <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>bin <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span><span class="token keyword">include</span> <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>lib <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share<span class="token operator">/</span>doc <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share<span class="token operator">/</span>man <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share<span class="token operator">/</span>man<span class="token operator">/</span>man1\r\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token operator">/</span>usr<span class="token operator">/</span>bin<span class="token operator">/</span>sudo <span class="token operator">/</span>usr<span class="token operator">/</span>sbin<span class="token operator">/</span>chown wubin <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>bin <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span><span class="token keyword">include</span> <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>lib <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share<span class="token operator">/</span>doc <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share<span class="token operator">/</span>man <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share<span class="token operator">/</span>man<span class="token operator">/</span>man1\r\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token operator">/</span>usr<span class="token operator">/</span>bin<span class="token operator">/</span>sudo <span class="token operator">/</span>usr<span class="token operator">/</span>bin<span class="token operator">/</span>chgrp admin <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>bin <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span><span class="token keyword">include</span> <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>lib <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share<span class="token operator">/</span>doc <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share<span class="token operator">/</span>man <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share<span class="token operator">/</span>man<span class="token operator">/</span>man1\r\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token operator">/</span>usr<span class="token operator">/</span>bin<span class="token operator">/</span>sudo <span class="token operator">/</span>bin<span class="token operator">/</span>mkdir <span class="token operator">-</span>p <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>Cellar <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>Homebrew <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>Frameworks <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>etc <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>opt <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>sbin <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share<span class="token operator">/</span>zsh <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share<span class="token operator">/</span>zsh<span class="token operator">/</span>site<span class="token operator">-</span>functions <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span><span class="token keyword">var</span>\r\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token operator">/</span>usr<span class="token operator">/</span>bin<span class="token operator">/</span>sudo <span class="token operator">/</span>bin<span class="token operator">/</span>chmod g<span class="token operator">+</span>rwx <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>Cellar <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>Homebrew <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>Frameworks <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>etc <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>opt <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>sbin <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share<span class="token operator">/</span>zsh <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share<span class="token operator">/</span>zsh<span class="token operator">/</span>site<span class="token operator">-</span>functions <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span><span class="token keyword">var</span>\r\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token operator">/</span>usr<span class="token operator">/</span>bin<span class="token operator">/</span>sudo <span class="token operator">/</span>bin<span class="token operator">/</span>chmod <span class="token number">755</span> <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share<span class="token operator">/</span>zsh <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share<span class="token operator">/</span>zsh<span class="token operator">/</span>site<span class="token operator">-</span>functions\r\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token operator">/</span>usr<span class="token operator">/</span>bin<span class="token operator">/</span>sudo <span class="token operator">/</span>usr<span class="token operator">/</span>sbin<span class="token operator">/</span>chown wubin <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>Cellar <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>Homebrew <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>Frameworks <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>etc <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>opt <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>sbin <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share<span class="token operator">/</span>zsh <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share<span class="token operator">/</span>zsh<span class="token operator">/</span>site<span class="token operator">-</span>functions <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span><span class="token keyword">var</span>\r\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token operator">/</span>usr<span class="token operator">/</span>bin<span class="token operator">/</span>sudo <span class="token operator">/</span>usr<span class="token operator">/</span>bin<span class="token operator">/</span>chgrp admin <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>Cellar <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>Homebrew <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>Frameworks <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>etc <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>opt <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>sbin <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share<span class="token operator">/</span>zsh <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share<span class="token operator">/</span>zsh<span class="token operator">/</span>site<span class="token operator">-</span>functions <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span><span class="token keyword">var</span>\r\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token operator">/</span>usr<span class="token operator">/</span>bin<span class="token operator">/</span>sudo <span class="token operator">/</span>bin<span class="token operator">/</span>mkdir <span class="token operator">-</span>p <span class="token operator">/</span>Users<span class="token operator">/</span>wubin<span class="token operator">/</span>Library<span class="token operator">/</span>Caches<span class="token operator">/</span>Homebrew\r\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token operator">/</span>usr<span class="token operator">/</span>bin<span class="token operator">/</span>sudo <span class="token operator">/</span>bin<span class="token operator">/</span>chmod g<span class="token operator">+</span>rwx <span class="token operator">/</span>Users<span class="token operator">/</span>wubin<span class="token operator">/</span>Library<span class="token operator">/</span>Caches<span class="token operator">/</span>Homebrew\r\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token operator">/</span>usr<span class="token operator">/</span>bin<span class="token operator">/</span>sudo <span class="token operator">/</span>usr<span class="token operator">/</span>sbin<span class="token operator">/</span>chown wubin <span class="token operator">/</span>Users<span class="token operator">/</span>wubin<span class="token operator">/</span>Library<span class="token operator">/</span>Caches<span class="token operator">/</span>Homebrew\r\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token operator">/</span>usr<span class="token operator">/</span>bin<span class="token operator">/</span>sudo <span class="token operator">/</span>bin<span class="token operator">/</span>mkdir <span class="token operator">-</span>p <span class="token operator">/</span>Library<span class="token operator">/</span>Caches<span class="token operator">/</span>Homebrew\r\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token operator">/</span>usr<span class="token operator">/</span>bin<span class="token operator">/</span>sudo <span class="token operator">/</span>bin<span class="token operator">/</span>chmod g<span class="token operator">+</span>rwx <span class="token operator">/</span>Library<span class="token operator">/</span>Caches<span class="token operator">/</span>Homebrew\r\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token operator">/</span>usr<span class="token operator">/</span>bin<span class="token operator">/</span>sudo <span class="token operator">/</span>usr<span class="token operator">/</span>sbin<span class="token operator">/</span>chown wubin <span class="token operator">/</span>Library<span class="token operator">/</span>Caches<span class="token operator">/</span>Homebrew\r\n<span class="token operator">==</span><span class="token operator">&gt;</span> Searching online <span class="token keyword">for</span> the Command Line Tools\r\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token operator">/</span>usr<span class="token operator">/</span>bin<span class="token operator">/</span>sudo <span class="token operator">/</span>usr<span class="token operator">/</span>bin<span class="token operator">/</span>touch <span class="token operator">/</span>tmp<span class="token operator">/</span><span class="token punctuation">.</span>com<span class="token punctuation">.</span>apple<span class="token punctuation">.</span>dt<span class="token punctuation">.</span>CommandLineTools<span class="token punctuation">.</span>installondemand<span class="token punctuation">.</span>in<span class="token operator">-</span>progress\r\n<span class="token operator">==</span><span class="token operator">&gt;</span> Installing Command Line Tools <span class="token punctuation">(</span>macOS High Sierra version <span class="token number">10.13</span><span class="token punctuation">)</span> <span class="token keyword">for</span> Xcode<span class="token operator">-</span><span class="token number">9.2</span>\r\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token operator">/</span>usr<span class="token operator">/</span>bin<span class="token operator">/</span>sudo <span class="token operator">/</span>usr<span class="token operator">/</span>sbin<span class="token operator">/</span>softwareupdate <span class="token operator">-</span>i Command\\ Line\\ Tools\\ <span class="token punctuation">(</span>macOS\\ High\\ Sierra\\ version\\ <span class="token number">10.13</span><span class="token punctuation">)</span>\\ <span class="token keyword">for</span>\\ Xcode<span class="token operator">-</span><span class="token number">9.2</span>\r\nSoftware Update Tool\r\n\r\n\r\nDownloading Command Line Tools <span class="token punctuation">(</span>macOS High Sierra version <span class="token number">10.13</span><span class="token punctuation">)</span> <span class="token keyword">for</span> Xcode\r\nDownloaded Command Line Tools <span class="token punctuation">(</span>macOS High Sierra version <span class="token number">10.13</span><span class="token punctuation">)</span> <span class="token keyword">for</span> Xcode\r\nInstalling Command Line Tools <span class="token punctuation">(</span>macOS High Sierra version <span class="token number">10.13</span><span class="token punctuation">)</span> <span class="token keyword">for</span> Xcode\r\nDone with Command Line Tools <span class="token punctuation">(</span>macOS High Sierra version <span class="token number">10.13</span><span class="token punctuation">)</span> <span class="token keyword">for</span> Xcode\r\nDone<span class="token punctuation">.</span>\r\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token operator">/</span>usr<span class="token operator">/</span>bin<span class="token operator">/</span>sudo <span class="token operator">/</span>bin<span class="token operator">/</span>rm <span class="token operator">-</span>f <span class="token operator">/</span>tmp<span class="token operator">/</span><span class="token punctuation">.</span>com<span class="token punctuation">.</span>apple<span class="token punctuation">.</span>dt<span class="token punctuation">.</span>CommandLineTools<span class="token punctuation">.</span>installondemand<span class="token punctuation">.</span>in<span class="token operator">-</span>progress\r\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token operator">/</span>usr<span class="token operator">/</span>bin<span class="token operator">/</span>sudo <span class="token operator">/</span>usr<span class="token operator">/</span>bin<span class="token operator">/</span>xcode<span class="token operator">-</span>select <span class="token operator">--</span><span class="token keyword">switch</span> <span class="token operator">/</span>Library<span class="token operator">/</span>Developer<span class="token operator">/</span>CommandLineTools\r\n<span class="token operator">==</span><span class="token operator">&gt;</span> Downloading <span class="token keyword">and</span> installing Homebrew<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\r\nremote<span class="token punctuation">:</span> Counting objects<span class="token punctuation">:</span> <span class="token number">96315</span><span class="token punctuation">,</span> done<span class="token punctuation">.</span>\r\nremote<span class="token punctuation">:</span> Compressing objects<span class="token punctuation">:</span> <span class="token number">100</span><span class="token operator">%</span> <span class="token punctuation">(</span><span class="token number">47</span><span class="token operator">/</span><span class="token number">47</span><span class="token punctuation">)</span><span class="token punctuation">,</span> done<span class="token punctuation">.</span>\r\nremote<span class="token punctuation">:</span> Total <span class="token number">96315</span> <span class="token punctuation">(</span>delta <span class="token number">27</span><span class="token punctuation">)</span><span class="token punctuation">,</span> reused <span class="token number">44</span> <span class="token punctuation">(</span>delta <span class="token number">17</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pack<span class="token operator">-</span>reused <span class="token number">96247</span>\r\nReceiving objects<span class="token punctuation">:</span> <span class="token number">100</span><span class="token operator">%</span> <span class="token punctuation">(</span><span class="token number">96315</span><span class="token operator">/</span><span class="token number">96315</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">21.97</span> MiB <span class="token operator">|</span> <span class="token number">2.06</span> MiB<span class="token operator">/</span>s<span class="token punctuation">,</span> done<span class="token punctuation">.</span>\r\nResolving deltas<span class="token punctuation">:</span> <span class="token number">100</span><span class="token operator">%</span> <span class="token punctuation">(</span><span class="token number">69927</span><span class="token operator">/</span><span class="token number">69927</span><span class="token punctuation">)</span><span class="token punctuation">,</span> done<span class="token punctuation">.</span>\r\nFrom https<span class="token punctuation">:</span><span class="token comment">//github.com/Homebrew/brew</span>\r\n\r\n<span class="token constant">HEAD</span> is now at <span class="token number">253</span>a41f52 Merge pull request <span class="token shell-comment comment">#3670 from MikeMcQuaid/gitconfig</span>\r\n<span class="token operator">==</span><span class="token operator">&gt;</span> Tapping homebrew<span class="token operator">/</span>core\r\nCloning into <span class="token single-quoted-string string">''/usr/local/Homebrew/Library/Taps/homebrew/homebrew-core''</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\r\nremote<span class="token punctuation">:</span> Counting objects<span class="token punctuation">:</span> <span class="token number">4709</span><span class="token punctuation">,</span> done<span class="token punctuation">.</span>\r\nremote<span class="token punctuation">:</span> Compressing objects<span class="token punctuation">:</span> <span class="token number">100</span><span class="token operator">%</span> <span class="token punctuation">(</span><span class="token number">4458</span><span class="token operator">/</span><span class="token number">4458</span><span class="token punctuation">)</span><span class="token punctuation">,</span> done<span class="token punctuation">.</span>\r\nremote<span class="token punctuation">:</span> Total <span class="token number">4709</span> <span class="token punctuation">(</span>delta <span class="token number">53</span><span class="token punctuation">)</span><span class="token punctuation">,</span> reused <span class="token number">892</span> <span class="token punctuation">(</span>delta <span class="token number">35</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pack<span class="token operator">-</span>reused <span class="token number">0</span>\r\nReceiving objects<span class="token punctuation">:</span> <span class="token number">100</span><span class="token operator">%</span> <span class="token punctuation">(</span><span class="token number">4709</span><span class="token operator">/</span><span class="token number">4709</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3.83</span> MiB <span class="token operator">|</span> <span class="token number">44.00</span> KiB<span class="token operator">/</span>s<span class="token punctuation">,</span> done<span class="token punctuation">.</span>\r\nResolving deltas<span class="token punctuation">:</span> <span class="token number">100</span><span class="token operator">%</span> <span class="token punctuation">(</span><span class="token number">53</span><span class="token operator">/</span><span class="token number">53</span><span class="token punctuation">)</span><span class="token punctuation">,</span> done<span class="token punctuation">.</span>\r\nTapped <span class="token number">4476</span> formulae <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">756</span> files<span class="token punctuation">,</span> <span class="token number">12</span><span class="token constant">MB</span><span class="token punctuation">)</span>\r\n<span class="token operator">==</span><span class="token operator">&gt;</span> Cleaning up <span class="token operator">/</span>Library<span class="token operator">/</span>Caches<span class="token operator">/</span>Homebrew<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\r\n<span class="token operator">==</span><span class="token operator">&gt;</span> Migrating <span class="token operator">/</span>Library<span class="token operator">/</span>Caches<span class="token operator">/</span>Homebrew to <span class="token operator">/</span>Users<span class="token operator">/</span>wubin<span class="token operator">/</span>Library<span class="token operator">/</span>Caches<span class="token operator">/</span>Homebrew<span class="token punctuation">.</span><span class="token punctuation">.</span>\r\n<span class="token operator">==</span><span class="token operator">&gt;</span> Deleting <span class="token operator">/</span>Library<span class="token operator">/</span>Caches<span class="token operator">/</span>Homebrew<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\r\nAlready up<span class="token operator">-</span>to<span class="token operator">-</span>date<span class="token punctuation">.</span>\r\n<span class="token operator">==</span><span class="token operator">&gt;</span> Installation successful<span class="token operator">!</span>\r\n\r\n<span class="token operator">==</span><span class="token operator">&gt;</span> Homebrew has enabled anonymous aggregate user behaviour analytics<span class="token punctuation">.</span>\r\nRead the analytics documentation <span class="token punctuation">(</span><span class="token keyword">and</span> how to opt<span class="token operator">-</span>out<span class="token punctuation">)</span> here<span class="token punctuation">:</span>\r\n  https<span class="token punctuation">:</span><span class="token comment">//docs.brew.sh/Analytics.html</span>\r\n\r\n<span class="token operator">==</span><span class="token operator">&gt;</span> Next steps<span class="token punctuation">:</span>\r\n<span class="token operator">-</span> Run `brew help` to get started\r\n<span class="token operator">-</span> Further documentation<span class="token punctuation">:</span> \r\n    https<span class="token punctuation">:</span><span class="token comment">//docs.brew.sh</span></code></pre></div>', 598),
(130, 'Download Java for Mac OS X', 100, 0, '2019-03-16 15:10:16', '/upload/20190316/8ec79dd75fbb6dd2057ca3cbc8db9785.png', 2, '在MAC作测试时候提示需要安装JAVA JDK，下载链接：https://www.java.com/en/download/mac_download.jsp', 'Mrs.默先森', 57, 0, '<p>apple下载链接：<a href="https://support.apple.com/kb/DL1572?viewlocale=en_US&amp;locale=en_US" target="_blank" title="https://support.apple.com/kb/DL1572?viewlocale=en_US&amp;locale=en_US">https://support.apple.com/kb/DL1572?viewlocale=en_US&amp;locale=en_US</a><br></p><p>java网站：<a href="https://www.java.com/en/download/mac_download.jsp" target="_blank" title="https://www.java.com/en/download/mac_download.jsp">https://www.java.com/en/download/mac_download.jsp</a></p><p><br></p><p>下载来双击dmg文件进行安装即可</p><p>这里超人使用java网站中进行下载的</p><p><img src="http://www.wubin.pro/Upload/ueditor/image/20180115/1515996869418860.png" width="205" height="218"><img src="http://www.wubin.pro/Upload/ueditor/image/20180115/1515996869110765.png" width="367" height="275"></p><hr><p><img src="https://wubin.pro/Upload/ueditor/image/20180115/1515996869102988.png" width="328" height="274">&nbsp;&nbsp;<img src="https://wubin.pro/Upload/ueditor/image/20180115/1515996869324720.png" width="317" height="273"></p><hr><p><br></p><p>下载完成之后可在系统偏好设置中看到</p><p><img src="https://wubin.pro/Upload/ueditor/image/20180115/1515997929188437.png" alt="1515997929188437.png" width="446" height="406"></p>', 458),
(131, '三栏纵向个人博客模板Html(提供多页面下载)', 100, 0, '2019-03-16 15:11:21', '/upload/20190316/f8681f788a36648f94e993a8993c7fac.png', 2, '模板提供多个页面，自适应不同分辨率,博客页面布局格式简单，没有复杂的背景、动态幻灯片展示、栏目、标签、搜索应有尽有，简洁又不失大气，博客模板来自整理...', 'Mrs.默先森', 58, 0, '<p>模板提供多个页面，博客页面布局格式简单，没有复杂的背景、动态幻灯片展示、栏目、标签、搜索应有尽有，简洁又不失大气，模板来自整理，可适应手机端页面</p><p><br></p><p style="text-align: center;"><img src="https://wubin.pro/Upload/ueditor/image/20170824/1503555198930966.png" alt="1503555198930966.png" width="295" height="153"></p><p><br></p><p><img src="https://wubin.pro/Upload/ueditor/image/20170823/1503482781990058.png" alt="1503482781990058.png"></p>', 596),
(132, 'centos6.8配置lamp-php7运行环境', 100, 0, '2019-03-16 15:13:57', '/upload/20190316/2325b8d497516f36f5aaba4990765249.png', 2, 'CentOS（Community Enterprise Operating System，中文意思是：社区企业操作系统）是Linux发行版之一，它是来自于Red Hat Enterprise Linux依照开放源代码规定释出的源代码所编译而成。PHP7是PHP编程语言的一个主要版本，并号称是开发Web应用程序的一次革命，可开发和交付移动企业和云应用。此版本被认为是PHP在2004年发布PHP5后最重要的变化，PHP 7对速度进行大幅度提。  标签： centos、', 'Mrs.默先森', 53, 0, '<p><span>CentOS（Community Enterprise Operating System，中文意思是：社区企业操作系统）是Linux发行版之一，它是来自于Red Hat Enterprise Linux依照开放源代码规定释出的源代码所编译而成。PHP7是PHP编程语言的一个主要版本，并号称是开发Web应用程序的一次革命，可开发和交付移动企业和云应用。此版本被认为是PHP在2004年发布PHP5后最重要的变化，PHP 7对速度进行大幅度提。</span></p><p>查看centos版本</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">cat <span class="token operator">/</span>etc<span class="token operator">/</span>centos<span class="token operator">-</span>release<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>安装apache</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">yum <span class="token operator">-</span>y install httpd httpd<span class="token operator">-</span>devel<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>安装mysql</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">yum <span class="token operator">-</span>y install mysql mysql<span class="token operator">-</span>server\r\n开机启动：chkconfig mysqld on\r\n启动mysql：service mysqld start<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>安装php7</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token number">1.</span>更新软件源\r\nwget https<span class="token punctuation">:</span><span class="token comment">//dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm</span>\r\nwget http<span class="token punctuation">:</span><span class="token comment">//rpms.remirepo.net/enterprise/remi-release-6.rpm</span>\r\nrpm <span class="token operator">-</span>Uvh remi<span class="token operator">-</span>release<span class="token operator">-</span><span class="token number">6.</span>rpm epel<span class="token operator">-</span>release<span class="token operator">-</span>latest<span class="token operator">-</span><span class="token number">6.</span>noarch<span class="token punctuation">.</span>rpm\r\n<span class="token number">2.</span>安装<span class="token constant">PHP</span>以及扩展\r\nyum install php70<span class="token operator">-</span>php php70<span class="token operator">-</span>php<span class="token operator">-</span>pear php70<span class="token operator">-</span>php<span class="token operator">-</span>bcmath php70<span class="token operator">-</span>php<span class="token operator">-</span>pecl<span class="token operator">-</span>jsond<span class="token operator">-</span>devel\r\n\r\nphp70<span class="token operator">-</span>php<span class="token operator">-</span>mysqlnd\r\n php70<span class="token operator">-</span>php<span class="token operator">-</span>gd\r\n php70<span class="token operator">-</span>php<span class="token operator">-</span>common\r\n php70<span class="token operator">-</span>php<span class="token operator">-</span>fpm\r\n php70<span class="token operator">-</span>php<span class="token operator">-</span>intl\r\n php70<span class="token operator">-</span>php<span class="token operator">-</span>cli \r\n\r\nphp70<span class="token operator">-</span>php\r\n php70<span class="token operator">-</span>php<span class="token operator">-</span>xml\r\n php70<span class="token operator">-</span>php<span class="token operator">-</span>opcache\r\n php70<span class="token operator">-</span>php<span class="token operator">-</span>pecl<span class="token operator">-</span>apcu\r\n php70<span class="token operator">-</span>php<span class="token operator">-</span>pecl<span class="token operator">-</span>jsond\r\n php70<span class="token operator">-</span>php<span class="token operator">-</span>pdo\r\n\r\nphp70<span class="token operator">-</span>php<span class="token operator">-</span>gmp\r\n php70<span class="token operator">-</span>php<span class="token operator">-</span>process\r\n php70<span class="token operator">-</span>php<span class="token operator">-</span>pecl<span class="token operator">-</span>imagick\r\n php70<span class="token operator">-</span>php<span class="token operator">-</span>devel\r\n php70<span class="token operator">-</span>php<span class="token operator">-</span>mbstring\r\n php70<span class="token operator">-</span>php<span class="token operator">-</span>mcrypt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>开启mysql远程连接</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token number">1.</span> <span class="token punctuation">(</span>第一个root表示用户名，<span class="token operator">%</span>表示所有的电脑都可以连接，也可以设置某个ip地址运行连接，第二个root表示密码<span class="token punctuation">)</span>\r\n    <span class="token constant">GRANT</span> <span class="token constant">ALL</span> <span class="token constant">PRIVILEGES</span> <span class="token constant">ON</span> <span class="token operator">*</span><span class="token punctuation">.</span><span class="token operator">*</span> <span class="token constant">TO</span> <span class="token single-quoted-string string">''root''</span>@<span class="token single-quoted-string string">''%''</span> <span class="token constant">IDENTIFIED</span> <span class="token constant">BY</span> <span class="token single-quoted-string string">''root''</span> <span class="token constant">WITH</span> <span class="token constant">GRANT</span> <span class="token constant">OPTION</span><span class="token punctuation">;</span>\r\n\r\n<span class="token number">2.</span>刷新授权\r\n    flush privileges<span class="token punctuation">;</span></code></pre></div>', 364);
INSERT INTO `blog_article` (`arc_id`, `arc_title`, `arc_sort`, `sendtime`, `updatetime`, `arc_thumb`, `is_recycle`, `arc_digest`, `arc_author`, `cate_id`, `admin_id`, `arc_content`, `arc_click`) VALUES
(133, 'thinkphp系列之--极验滑动验证码', 100, 0, '2019-03-16 15:15:22', '/upload/20190316/8a34e3a7211ee25600a05b17581c1d80.png', 2, '极验滑动验证码，这绝对一个体验好安全高的方案；极验验证码可以帮助您搭建优雅的验证安全系统官网：http://www.geetest.com；速速来体验一番这个安全智能的验证系统，让我也来引领验证码新时代吧^_^', 'Mrs.默先森', 52, 0, '<p>对于建站的童鞋来说；恶意广告是防不胜防；自己搞个验证码吧，又各种被吐槽；小编发现了这个极验验证码，一定能帮助各位筒子解决这个问题；这绝对一个体验好安全高的方案；极验验证码可以帮助您搭建优雅的验证安全系统官网：<a href="http://www.geetest.com/" target="_black">http://www.geetest.com</a>；速速来体验一番这个安全智能的验证系统，让我也来引领验证码新时代吧^_^</p><p>首先你的模板文件可以这样来<br></p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token operator">&lt;</span>head<span class="token operator">&gt;</span>\r\n    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token double-quoted-string string">"UTF-8"</span><span class="token operator">&gt;</span>\r\n    <span class="token operator">&lt;</span>title<span class="token operator">&gt;</span>极验证码<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">&gt;</span>\r\n    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>载入bootstrap css<span class="token operator">--</span><span class="token operator">&gt;</span>\r\n    <span class="token operator">&lt;</span>link rel<span class="token operator">=</span><span class="token double-quoted-string string">"stylesheet"</span> href<span class="token operator">=</span><span class="token double-quoted-string string">"/static/node_modules/bootstrap3/dist/css/bootstrap.min.css"</span><span class="token operator">&gt;</span>\r\n    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>载入jquery<span class="token operator">--</span><span class="token operator">&gt;</span>\r\n    <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token double-quoted-string string">"/static/node_modules/jquery/dist/jquery.min.js"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>\r\n    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>载入layer js<span class="token operator">--</span><span class="token operator">&gt;</span>\r\n    <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token double-quoted-string string">"/static/layer-v3.0.3/layer/layer.js"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">&gt;</span><span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>\r\n    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"container"</span><span class="token operator">&gt;</span>\r\n        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"row"</span><span class="token operator">&gt;</span>\r\n            <span class="token operator">&lt;</span>form action<span class="token operator">=</span><span class="token double-quoted-string string">""</span> method<span class="token operator">=</span><span class="token double-quoted-string string">"POST"</span> role<span class="token operator">=</span><span class="token double-quoted-string string">"form"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"col-lg-4"</span><span class="token operator">&gt;</span>\r\n            	<span class="token operator">&lt;</span>legend<span class="token operator">&gt;</span>极验证<span class="token operator">&lt;</span><span class="token operator">/</span>legend<span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"form-group"</span><span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span>label <span class="token keyword">for</span><span class="token operator">=</span><span class="token double-quoted-string string">""</span><span class="token operator">&gt;</span>用户名<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token double-quoted-string string">"text"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"form-control"</span> name<span class="token operator">=</span><span class="token double-quoted-string string">"username"</span> value<span class="token operator">=</span><span class="token double-quoted-string string">"wubin"</span> id<span class="token operator">=</span><span class="token double-quoted-string string">""</span> placeholder<span class="token operator">=</span><span class="token double-quoted-string string">""</span><span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"form-group"</span><span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span>label <span class="token keyword">for</span><span class="token operator">=</span><span class="token double-quoted-string string">""</span><span class="token operator">&gt;</span>密码<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token double-quoted-string string">"text"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"form-control"</span> name<span class="token operator">=</span><span class="token double-quoted-string string">"password"</span>  value<span class="token operator">=</span><span class="token double-quoted-string string">"wubin"</span> placeholder<span class="token operator">=</span><span class="token double-quoted-string string">""</span><span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"form-group"</span> id<span class="token operator">=</span><span class="token double-quoted-string string">"embed-captcha"</span><span class="token operator">&gt;</span>\r\n                    <span class="token operator">&lt;</span>label id<span class="token operator">=</span><span class="token single-quoted-string string">''wait''</span> <span class="token keyword">for</span><span class="token operator">=</span><span class="token double-quoted-string string">""</span><span class="token operator">&gt;</span>正在加载验证码<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n                <span class="token operator">&lt;</span>button type<span class="token operator">=</span><span class="token double-quoted-string string">"submit"</span> id<span class="token operator">=</span><span class="token double-quoted-string string">"embed-submit"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token double-quoted-string string">"btn btn-primary"</span><span class="token operator">&gt;</span>Submit<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>\r\n            <span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">&gt;</span>\r\n        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\r\n    <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token double-quoted-string string">"/static/geetest/gt.js"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>\r\n    <span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>\r\n        <span class="token keyword">var</span> handlerEmbed <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>captchaObj<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n            $<span class="token punctuation">(</span><span class="token double-quoted-string string">"#embed-submit"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n                <span class="token keyword">var</span> validate <span class="token operator">=</span> captchaObj<span class="token punctuation">.</span><span class="token function">getValidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>validate<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n                    <span class="token comment">//layer弹出层</span>\r\n                    layer<span class="token punctuation">.</span><span class="token function">msg</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''请先完成验证。。。''</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>icon<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n                    e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n                <span class="token punctuation">}</span>\r\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n            <span class="token comment">// 将验证码加到id为captcha的元素里，同时会有三个input的值：geetest_challenge, geetest_validate, geetest_seccode</span>\r\n            captchaObj<span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"#embed-captcha"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n            captchaObj<span class="token punctuation">.</span><span class="token function">onReady</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n                $<span class="token punctuation">(</span><span class="token double-quoted-string string">"#wait"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n            <span class="token comment">// 更多接口参考：http://www.geetest.com/install/sections/idx-client-sdk.html</span>\r\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\r\n        $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\r\n            <span class="token comment">// 获取id，challenge，success（是否启用failback）</span>\r\n            url<span class="token punctuation">:</span> <span class="token double-quoted-string string">"{:url(''geetest/geetest/StartCaptchaServlet'')}?t="</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 加随机数防止缓存</span>\r\n            type<span class="token punctuation">:</span> <span class="token double-quoted-string string">"get"</span><span class="token punctuation">,</span>\r\n            dataType<span class="token punctuation">:</span> <span class="token double-quoted-string string">"json"</span><span class="token punctuation">,</span>\r\n            success<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n                <span class="token comment">// 使用initGeetest接口</span>\r\n                <span class="token comment">// 参数1：配置参数</span>\r\n                <span class="token comment">// 参数2：回调，回调的第一个参数验证码对象，之后可以使用它做appendTo之类的事件</span>\r\n                <span class="token function">initGeetest</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\r\n                    gt<span class="token punctuation">:</span> data<span class="token punctuation">.</span>gt<span class="token punctuation">,</span>\r\n                    challenge<span class="token punctuation">:</span> data<span class="token punctuation">.</span>challenge<span class="token punctuation">,</span>\r\n                    new_captcha<span class="token punctuation">:</span> data<span class="token punctuation">.</span>new_captcha<span class="token punctuation">,</span>\r\n                    product<span class="token punctuation">:</span> <span class="token double-quoted-string string">"embed"</span><span class="token punctuation">,</span> <span class="token comment">// 产品形式，包括：float，embed，popup。注意只对PC版验证码有效</span>\r\n                    offline<span class="token punctuation">:</span> <span class="token operator">!</span>data<span class="token punctuation">.</span>success <span class="token comment">// 表示用户后台检测极验服务器是否宕机，一般不需要关注</span>\r\n                    <span class="token comment">// 更多配置参数请参见：http://www.geetest.com/install/sections/idx-client-sdk.html#config</span>\r\n                <span class="token punctuation">}</span><span class="token punctuation">,</span> handlerEmbed<span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n            <span class="token punctuation">}</span>\r\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>\r\n<span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>随后需要在$.ajax中url指向的请求地址（StartCaptchaServlet）中：<br></p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">StartCaptchaServlet</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\r\n	<span class="token punctuation">{</span>\r\n		<span class="token variable">$GtSdk</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GeetestLib</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''6fca74f2cb439f6318e83979cc8f642d''</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''f1b617c21c0f513e1f1a9938ffe24e5a''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n		<span class="token variable">$data</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span>\r\n			<span class="token double-quoted-string string">"user_id"</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token double-quoted-string string">"test"</span><span class="token punctuation">,</span> <span class="token shell-comment comment"># 网站用户id</span>\r\n			<span class="token double-quoted-string string">"client_type"</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token double-quoted-string string">"web"</span><span class="token punctuation">,</span> <span class="token shell-comment comment">#web:电脑上的浏览器；h5:手机上的浏览器，包括移动应用内完全内置的web_view；native：通过原生SDK植入APP应用的方式</span>\r\n			<span class="token double-quoted-string string">"ip_address"</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token double-quoted-string string">"127.0.0.1"</span> <span class="token shell-comment comment"># 请在此处传输用户请求验证时所携带的IP</span>\r\n		<span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n		<span class="token variable">$status</span> <span class="token operator">=</span> <span class="token variable">$GtSdk</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">pre_process</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n		<span class="token global">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">''gtserver''</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$status</span><span class="token punctuation">;</span>\r\n		<span class="token global">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">''user_id''</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\r\n		<span class="token keyword">echo</span> <span class="token variable">$GtSdk</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">get_response_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n	<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>这个时候你还需要一个GeetestLib类：</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">captcha_id  <span class="token operator">=</span> <span class="token variable">$captcha_id</span><span class="token punctuation">;</span>\r\n		<span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">private_key</span> <span class="token operator">=</span> <span class="token variable">$private_key</span><span class="token punctuation">;</span>\r\n	<span class="token punctuation">}</span>\r\n\r\n	<span class="token comment">/**\r\n	 * 判断极验服务器是否down机\r\n	 *\r\n	 * @param array $data\r\n	 * @return int\r\n	 */</span>\r\n	<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">pre_process</span><span class="token punctuation">(</span><span class="token variable">$param</span><span class="token punctuation">,</span> <span class="token variable">$new_captcha</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n		<span class="token variable">$data</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''gt''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">captcha_id</span><span class="token punctuation">,</span>\r\n					  <span class="token single-quoted-string string">''new_captcha''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token variable">$new_captcha</span>\r\n		<span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n		<span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">array_merge</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span><span class="token variable">$param</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n		<span class="token variable">$query</span> <span class="token operator">=</span> <span class="token function">http_build_query</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n		<span class="token variable">$url</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"http://api.geetest.com/register.php?"</span> <span class="token punctuation">.</span> <span class="token variable">$query</span><span class="token punctuation">;</span>\r\n		<span class="token variable">$challenge</span> <span class="token operator">=</span> <span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">send_request</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$challenge</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">32</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n			<span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">failback_process</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n			<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\r\n		<span class="token punctuation">}</span>\r\n		<span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">success_process</span><span class="token punctuation">(</span><span class="token variable">$challenge</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n		<span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>\r\n	<span class="token punctuation">}</span>\r\n\r\n	<span class="token comment">/**\r\n	 * @param $challenge\r\n	 */</span>\r\n	<span class="token keyword">private</span> <span class="token keyword">function</span> <span class="token function">success_process</span><span class="token punctuation">(</span><span class="token variable">$challenge</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n		<span class="token variable">$challenge</span>      <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$challenge</span> <span class="token punctuation">.</span> <span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">private_key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n		<span class="token variable">$result</span>         <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span>\r\n			<span class="token single-quoted-string string">''success''</span>   <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">,</span>\r\n			<span class="token single-quoted-string string">''gt''</span>        <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">captcha_id</span><span class="token punctuation">,</span>\r\n			<span class="token single-quoted-string string">''challenge''</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token variable">$challenge</span><span class="token punctuation">,</span>\r\n			<span class="token single-quoted-string string">''new_captcha''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>\r\n		<span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n		<span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">response</span> <span class="token operator">=</span> <span class="token variable">$result</span><span class="token punctuation">;</span>\r\n	<span class="token punctuation">}</span>\r\n\r\n	<span class="token comment">/**\r\n	 *\r\n	 */</span>\r\n	<span class="token keyword">private</span> <span class="token keyword">function</span> <span class="token function">failback_process</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n		<span class="token variable">$rnd1</span>           <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n		<span class="token variable">$rnd2</span>           <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n		<span class="token variable">$challenge</span>      <span class="token operator">=</span> <span class="token variable">$rnd1</span> <span class="token punctuation">.</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$rnd2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n		<span class="token variable">$result</span>         <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span>\r\n			<span class="token single-quoted-string string">''success''</span>   <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">,</span>\r\n			<span class="token single-quoted-string string">''gt''</span>        <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">captcha_id</span><span class="token punctuation">,</span>\r\n			<span class="token single-quoted-string string">''challenge''</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token variable">$challenge</span><span class="token punctuation">,</span>\r\n			<span class="token single-quoted-string string">''new_captcha''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span>\r\n		<span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n		<span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">response</span> <span class="token operator">=</span> <span class="token variable">$result</span><span class="token punctuation">;</span>\r\n	<span class="token punctuation">}</span>\r\n\r\n	<span class="token comment">/**\r\n	 * @return mixed\r\n	 */</span>\r\n	<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">get_response_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n		<span class="token keyword">return</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">response</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n	<span class="token punctuation">}</span>\r\n\r\n	<span class="token comment">/**\r\n	 * 返回数组方便扩展\r\n	 *\r\n	 * @return mixed\r\n	 */</span>\r\n	<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">get_response</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n		<span class="token keyword">return</span> <span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">response</span><span class="token punctuation">;</span>\r\n	<span class="token punctuation">}</span>\r\n\r\n	<span class="token comment">/**\r\n	 * 正常模式获取验证结果\r\n	 *\r\n	 * @param string $challenge\r\n	 * @param string $validate\r\n	 * @param string $seccode\r\n	 * @param array $param\r\n	 * @return int\r\n	 */</span>\r\n	<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">success_validate</span><span class="token punctuation">(</span><span class="token variable">$challenge</span><span class="token punctuation">,</span> <span class="token variable">$validate</span><span class="token punctuation">,</span> <span class="token variable">$seccode</span><span class="token punctuation">,</span><span class="token variable">$param</span><span class="token punctuation">,</span> <span class="token variable">$json_format</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">check_validate</span><span class="token punctuation">(</span><span class="token variable">$challenge</span><span class="token punctuation">,</span> <span class="token variable">$validate</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n			<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\r\n		<span class="token punctuation">}</span>\r\n		<span class="token variable">$query</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span>\r\n			<span class="token double-quoted-string string">"seccode"</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token variable">$seccode</span><span class="token punctuation">,</span>\r\n			<span class="token double-quoted-string string">"timestamp"</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\r\n			<span class="token double-quoted-string string">"challenge"</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token variable">$challenge</span><span class="token punctuation">,</span>\r\n			<span class="token double-quoted-string string">"captchaid"</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">captcha_id</span><span class="token punctuation">,</span>\r\n			<span class="token double-quoted-string string">"json_format"</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token variable">$json_format</span><span class="token punctuation">,</span>\r\n			<span class="token double-quoted-string string">"sdk"</span>     <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token scope"><span class="token keyword">self</span><span class="token punctuation">::</span></span><span class="token constant">GT_SDK_VERSION</span>\r\n		<span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n		<span class="token variable">$query</span> <span class="token operator">=</span> <span class="token function">array_merge</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">,</span><span class="token variable">$param</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n		<span class="token variable">$url</span>          <span class="token operator">=</span> <span class="token double-quoted-string string">"http://api.geetest.com/validate.php"</span><span class="token punctuation">;</span>\r\n		<span class="token variable">$codevalidate</span> <span class="token operator">=</span> <span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">post_request</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">,</span> <span class="token variable">$query</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n		<span class="token variable">$obj</span> <span class="token operator">=</span> <span class="token function">json_decode</span><span class="token punctuation">(</span><span class="token variable">$codevalidate</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$obj</span> <span class="token operator">===</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\r\n			<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\r\n		<span class="token punctuation">}</span>\r\n		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$obj</span><span class="token punctuation">[</span><span class="token single-quoted-string string">''seccode''</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$seccode</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n			<span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>\r\n		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\r\n			<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\r\n		<span class="token punctuation">}</span>\r\n	<span class="token punctuation">}</span>\r\n\r\n	<span class="token comment">/**\r\n	 * 宕机模式获取验证结果\r\n	 *\r\n	 * @param $challenge\r\n	 * @param $validate\r\n	 * @param $seccode\r\n	 * @return int\r\n	 */</span>\r\n	<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">fail_validate</span><span class="token punctuation">(</span><span class="token variable">$challenge</span><span class="token punctuation">,</span> <span class="token variable">$validate</span><span class="token punctuation">,</span> <span class="token variable">$seccode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n		<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$challenge</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token variable">$validate</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\r\n			<span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>\r\n		<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>\r\n			<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\r\n		<span class="token punctuation">}</span>\r\n	<span class="token punctuation">}</span>\r\n\r\n	<span class="token comment">/**\r\n	 * @param $challenge\r\n	 * @param $validate\r\n	 * @return bool\r\n	 */</span>\r\n	<span class="token keyword">private</span> <span class="token keyword">function</span> <span class="token function">check_validate</span><span class="token punctuation">(</span><span class="token variable">$challenge</span><span class="token punctuation">,</span> <span class="token variable">$validate</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$validate</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">32</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n			<span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\r\n		<span class="token punctuation">}</span>\r\n		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">private_key</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">''geetest''</span> <span class="token punctuation">.</span> <span class="token variable">$challenge</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token variable">$validate</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n			<span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\r\n		<span class="token punctuation">}</span>\r\n\r\n		<span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\r\n	<span class="token punctuation">}</span>\r\n\r\n	<span class="token comment">/**\r\n	 * GET 请求\r\n	 *\r\n	 * @param $url\r\n	 * @return mixed|string\r\n	 */</span>\r\n	<span class="token keyword">private</span> <span class="token keyword">function</span> <span class="token function">send_request</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n\r\n		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">function_exists</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''curl_exec''</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n			<span class="token variable">$ch</span> <span class="token operator">=</span> <span class="token function">curl_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n			<span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_URL</span><span class="token punctuation">,</span> <span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n			<span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_CONNECTTIMEOUT</span><span class="token punctuation">,</span> <span class="token scope"><span class="token keyword">self</span><span class="token punctuation">::</span></span><span class="token variable">$connectTimeout</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n			<span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_TIMEOUT</span><span class="token punctuation">,</span> <span class="token scope"><span class="token keyword">self</span><span class="token punctuation">::</span></span><span class="token variable">$socketTimeout</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n			<span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_RETURNTRANSFER</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n			<span class="token variable">$curl_errno</span> <span class="token operator">=</span> <span class="token function">curl_errno</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n			<span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">curl_exec</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n			<span class="token function">curl_close</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$curl_errno</span> <span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n				<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\r\n			<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>\r\n				<span class="token keyword">return</span> <span class="token variable">$data</span><span class="token punctuation">;</span>\r\n			<span class="token punctuation">}</span>\r\n		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\r\n			<span class="token variable">$opts</span>    <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span>\r\n				<span class="token single-quoted-string string">''http''</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token keyword">array</span><span class="token punctuation">(</span>\r\n					<span class="token single-quoted-string string">''method''</span>  <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token double-quoted-string string">"GET"</span><span class="token punctuation">,</span>\r\n					<span class="token single-quoted-string string">''timeout''</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token scope"><span class="token keyword">self</span><span class="token punctuation">::</span></span><span class="token variable">$connectTimeout</span> <span class="token operator">+</span> <span class="token scope"><span class="token keyword">self</span><span class="token punctuation">::</span></span><span class="token variable">$socketTimeout</span><span class="token punctuation">,</span>\r\n				<span class="token punctuation">)</span>\r\n			<span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n			<span class="token variable">$context</span> <span class="token operator">=</span> <span class="token function">stream_context_create</span><span class="token punctuation">(</span><span class="token variable">$opts</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n			<span class="token variable">$data</span>    <span class="token operator">=</span> @<span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token variable">$context</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n			<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\r\n				<span class="token keyword">return</span> <span class="token variable">$data</span><span class="token punctuation">;</span>\r\n			<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>\r\n				<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\r\n			<span class="token punctuation">}</span>\r\n		<span class="token punctuation">}</span>\r\n	<span class="token punctuation">}</span>\r\n\r\n	<span class="token comment">/**\r\n	 *\r\n	 * @param       $url\r\n	 * @param array $postdata\r\n	 * @return mixed|string\r\n	 */</span>\r\n	<span class="token keyword">private</span> <span class="token keyword">function</span> <span class="token function">post_request</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">,</span> <span class="token variable">$postdata</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''''</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$postdata</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n			<span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\r\n		<span class="token punctuation">}</span>\r\n\r\n		<span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">http_build_query</span><span class="token punctuation">(</span><span class="token variable">$postdata</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">function_exists</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''curl_exec''</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n			<span class="token variable">$ch</span> <span class="token operator">=</span> <span class="token function">curl_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n			<span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_URL</span><span class="token punctuation">,</span> <span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n			<span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_RETURNTRANSFER</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n			<span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_CONNECTTIMEOUT</span><span class="token punctuation">,</span> <span class="token scope"><span class="token keyword">self</span><span class="token punctuation">::</span></span><span class="token variable">$connectTimeout</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n			<span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_TIMEOUT</span><span class="token punctuation">,</span> <span class="token scope"><span class="token keyword">self</span><span class="token punctuation">::</span></span><span class="token variable">$socketTimeout</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n\r\n			<span class="token comment">//不可能执行到的代码</span>\r\n			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$postdata</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n				<span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_USERAGENT</span><span class="token punctuation">,</span> <span class="token global">$_SERVER</span><span class="token punctuation">[</span><span class="token single-quoted-string string">''HTTP_USER_AGENT''</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\r\n				<span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_POST</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n				<span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_POSTFIELDS</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n			<span class="token punctuation">}</span>\r\n			<span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">curl_exec</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n\r\n			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">curl_errno</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n				<span class="token variable">$err</span> <span class="token operator">=</span> <span class="token function">sprintf</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"curl[%s] error[%s]"</span><span class="token punctuation">,</span> <span class="token variable">$url</span><span class="token punctuation">,</span> <span class="token function">curl_errno</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'':''</span> <span class="token punctuation">.</span> <span class="token function">curl_error</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n				<span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">triggerError</span><span class="token punctuation">(</span><span class="token variable">$err</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n			<span class="token punctuation">}</span>\r\n\r\n			<span class="token function">curl_close</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\r\n			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$postdata</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n				<span class="token variable">$opts</span>    <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span>\r\n					<span class="token single-quoted-string string">''http''</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token keyword">array</span><span class="token punctuation">(</span>\r\n						<span class="token single-quoted-string string">''method''</span>  <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token single-quoted-string string">''POST''</span><span class="token punctuation">,</span>\r\n						<span class="token single-quoted-string string">''header''</span>  <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token double-quoted-string string">"Content-type: application/x-www-form-urlencoded\\r\\n"</span> <span class="token punctuation">.</span> <span class="token double-quoted-string string">"Content-Length: "</span> <span class="token punctuation">.</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token double-quoted-string string">"\\r\\n"</span><span class="token punctuation">,</span>\r\n						<span class="token single-quoted-string string">''content''</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token variable">$data</span><span class="token punctuation">,</span>\r\n						<span class="token single-quoted-string string">''timeout''</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token scope"><span class="token keyword">self</span><span class="token punctuation">::</span></span><span class="token variable">$connectTimeout</span> <span class="token operator">+</span> <span class="token scope"><span class="token keyword">self</span><span class="token punctuation">::</span></span><span class="token variable">$socketTimeout</span>\r\n					<span class="token punctuation">)</span>\r\n				<span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n				<span class="token variable">$context</span> <span class="token operator">=</span> <span class="token function">stream_context_create</span><span class="token punctuation">(</span><span class="token variable">$opts</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n				<span class="token variable">$data</span>    <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token variable">$context</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n			<span class="token punctuation">}</span>\r\n		<span class="token punctuation">}</span>\r\n\r\n		<span class="token keyword">return</span> <span class="token variable">$data</span><span class="token punctuation">;</span>\r\n	<span class="token punctuation">}</span>\r\n\r\n\r\n\r\n	<span class="token comment">/**\r\n	 * @param $err\r\n	 */</span>\r\n	<span class="token keyword">private</span> <span class="token keyword">function</span> <span class="token function">triggerError</span><span class="token punctuation">(</span><span class="token variable">$err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n		<span class="token function">trigger_error</span><span class="token punctuation">(</span><span class="token variable">$err</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n	<span class="token punctuation">}</span>\r\n<span class="token punctuation">}</span></code></pre></div>', 267);
INSERT INTO `blog_article` (`arc_id`, `arc_title`, `arc_sort`, `sendtime`, `updatetime`, `arc_thumb`, `is_recycle`, `arc_digest`, `arc_author`, `cate_id`, `admin_id`, `arc_content`, `arc_click`) VALUES
(134, 'thinkphp系列之--网站接入QQ登录', 100, 0, '2019-03-16 15:16:44', '/upload/20190316/ce6382d7905b1981cee61f161934790e.png', 2, '在我大天朝，企鹅这东西是人人都有的，对于我们来说方便之极(信息太多),对于登录功能来说，使用QQ登录已经简直不能再方便了，简单省事，最主要的是不用自己去写那些重复再重复的代码，不管你现在用不用qq聊天，它都曾经存在过，并且依然存在着，而且也重要着...', 'Mrs.默先森', 52, 0, '<p>在我大天朝，企鹅这东西是人人都有的，对于我们来说方便之极(信息太多),对于登录功能来说，使用QQ登录已经简直不能再方便了，简单省事，最主要的是不用自己去写那些重复再重复的代码，不管你现在用不用qq连天，它都曾经存在过，并且依然存在着...</p><p>那么首先您需要知道这个网站：<a href="https://connect.qq.com/" target="_blank" title="qq互联">https://connect.qq.com</a>，其次你还需要有一个能正常使用的qq号码。</p><p>点击首页的应用管理，没有登录的就先去登录吧，你会看到下面这个界面，需要做的非常简单，点击你的头像，按照要求填写资料，比较重要的是手持证件照，很多人都因为他不过，像我这样长得帅气点，就非常好通过了，这个审核时间比较短，填完之后抽根烟功夫基本就通过了。<img src="https://wubin.pro/Upload/ueditor/image/20170616/1497542952492201.png" alt="1497542952492201.png"></p><p>ok，资料审核通过之后点击创建应用--选择创建网站应用；按照要求依次填写以下资料，然后，就静静地等待、等待...<img src="https://wubin.pro/Upload/ueditor/image/20170616/1497543394418692.png" alt="1497543394418692.png"></p><p>然后下载SDK，点击qq互联首页【文档资料】，或者直接点击这里<a href="http://wiki.connect.qq.com/sdk%E4%B8%8B%E8%BD%BD" target="_self" title="SDK下载-文档资料-qq互联">http://wiki.connect.qq.com/sdk下载</a>，中间位置，找到【SDK for 网站接入】中php SDK；点击下载--解压--上传至服务器，一气呵成<img src="http://img.baidu.com/hi/jx2/j_0003.gif" width="25" height="25" border="0" vspace="0" title="" alt=""></p><p>应用审核通过之后你会在审核状态下看到【通过】字样，如果不通过，可以点击应用查看什么原因不通过；</p><p>修改之后重新提交，如果还不通过那就继续修改，还不通过那就不用继续往下看了；</p><p>自己信息资料都填写不正确，留留言就撤了吧...</p><p>然后点击查看，就可以看到Appid和Appkey了<img src="https://wubin.pro/Upload/ueditor/image/20170617/1497702239583218.png" alt="1497702239583218.png"><img src="https://wubin.pro/Upload/ueditor/image/20170617/1497702355545696.png" alt="1497702355545696.png"></p><p>部署服务器什么的就不再多说了，如果有不明白，你可以留言或者邮件联系超人来帮助你解决，接下来就来进行qq登录接入</p><ul class="ul1 list-paddingleft-2"><li><p><span class="s1"></span><span class="s2">上传服务器，设置配置项，</span><span class="s1">执行</span><span class="s2">install/</span><span class="s1">文件夹下的</span><span class="s2">index.php</span><span class="s1">设置配置项；</span></p></li><li><p><span class="s1">填写appid、appkey、callback、请求授权列表；<img src="https://wubin.pro/Upload/ueditor/image/20170617/1497703266732867.png" alt="1497703266732867.png"></span></p><p><span class="s1"></span></p></li></ul><p><span class="s1">引入文件：将API文件夹拷贝到您要的目录中，在使用的文件中引入qqConnectAPI.php即可，这里我在框架入口文件引入；</span></p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token keyword">require_once</span> <span class="token double-quoted-string string">"./Connect2.1/API/qqConnectAPI.php"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>注意：由于API需要用到session，请却好session可以使用，并且API会执行session_start(),请确保页面session_start()没有执行，并且qqConnectAPI.php需要引用在header输出之前，这里在thinkphp5中找到配置项文件中session配置，不开启框架session；</p><p>html页面中自己搞一个qq登陆就好；</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token double-quoted-string string">"{:url(''login'')}"</span><span class="token operator">&gt;</span>qq登录<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>然后在login方法中键入以下代码，这里注意qq_login()方法中有一个header("location:$login_url'')，如果不die掉的会会导致无法唤起qq登陆页面，所以这里die一下：</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token comment">/**\r\n * qq登录\r\n */</span>\r\n<span class="token keyword">public</span> <span class="token keyword">function</span> login <span class="token punctuation">(</span><span class="token punctuation">)</span>\r\n<span class="token punctuation">{</span>\r\n   <span class="token variable">$qc</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token punctuation">\\</span>QC</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n   <span class="token variable">$qc</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">qq_login</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n   exit<span class="token punctuation">;</span>\r\n<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>注意：<br></p><p><span class="s1">1.获得</span><span class="s2">access_token</span><span class="s1">，在</span><span class="s2">callback</span><span class="s1">页面中使用</span><span class="s2">$qc-&gt;qq_callback()</span><span class="s1">返回</span><span class="s2">access_token,</span><br></p><p class="p1"><span class="s2">2.$qc-&gt;get_openid()</span><span class="s1">返回</span><span class="s2">openid</span><span class="s1">，之后可以将</span><span class="s2">access_token</span><span class="s1">和</span><span class="s2">openid</span><span class="s1">保存（三个月有效期），</span></p><p class="p2"><span class="s2">3.之后调用接口时不需要重新授权，但需要将</span><span class="s3">access_token</span><span class="s2">和</span><span class="s3">Openid</span><span class="s2">传入</span><span class="s3">QC</span><span class="s2">的参数中，如下：</span></p><p class="p1"><span class="s2">4.$qc = new QC($access_token, $openid);</span></p><p>具体代码如下，登陆之后会跳转到回到地址，具体代码如下：</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token comment">/**\r\n* 网站首页,回调地址\r\n* @return \\think\\response\\View\r\n*/</span>\r\n<span class="token keyword">public</span> <span class="token keyword">function</span> index <span class="token punctuation">(</span><span class="token punctuation">)</span>\r\n<span class="token punctuation">{</span>\r\n   <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token function">isset</span><span class="token punctuation">(</span><span class="token global">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">''state''</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> isset <span class="token punctuation">(</span><span class="token global">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">''code''</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>\r\n   <span class="token punctuation">{</span>\r\n       <span class="token variable">$qc</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token punctuation">\\</span>QC</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n       <span class="token variable">$access_token</span> <span class="token operator">=</span> <span class="token variable">$qc</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">qq_callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取access_token</span>\r\n       <span class="token variable">$openid</span> <span class="token operator">=</span> <span class="token variable">$qc</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">get_openid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取openid</span>\r\n       <span class="token variable">$qc</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token punctuation">\\</span>QC</span><span class="token punctuation">(</span><span class="token variable">$access_token</span><span class="token punctuation">,</span><span class="token variable">$openid</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n       <span class="token variable">$userInfo</span> <span class="token operator">=</span> <span class="token variable">$qc</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">get_user_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取用户信息</span>\r\n       <span class="token function">halt</span><span class="token punctuation">(</span><span class="token variable">$userInfo</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//打印用户信息</span>\r\n    <span class="token punctuation">}</span>\r\n    <span class="token keyword">return</span> <span class="token function">view</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//加载模板</span>\r\n<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>在登录成功之后，我们就可以打印出登陆者信息，如下：</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n   <span class="token punctuation">[</span><span class="token double-quoted-string string">"ret"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">int</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\r\n   <span class="token punctuation">[</span><span class="token double-quoted-string string">"msg"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token double-quoted-string string">""</span>\r\n   <span class="token punctuation">[</span><span class="token double-quoted-string string">"is_lost"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">int</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\r\n   <span class="token punctuation">[</span><span class="token double-quoted-string string">"nickname"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span> <span class="token double-quoted-string string">"███"</span>\r\n   <span class="token punctuation">[</span><span class="token double-quoted-string string">"gender"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token double-quoted-string string">"男"</span>\r\n   <span class="token punctuation">[</span><span class="token double-quoted-string string">"province"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token double-quoted-string string">"北京"</span>\r\n   <span class="token punctuation">[</span><span class="token double-quoted-string string">"city"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token double-quoted-string string">"朝阳"</span>\r\n   <span class="token punctuation">[</span><span class="token double-quoted-string string">"year"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token double-quoted-string string">"2000"</span>\r\n   <span class="token punctuation">[</span><span class="token double-quoted-string string">"figureurl"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token number">73</span><span class="token punctuation">)</span> <span class="token double-quoted-string string">"http://qzapp.qlogo.cn/qzapp/101409756/C47BBBD7F2CE94C2B10ED3DCF3DDEC7A/30"</span>\r\n   <span class="token punctuation">[</span><span class="token double-quoted-string string">"figureurl_1"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token number">73</span><span class="token punctuation">)</span> <span class="token double-quoted-string string">"http://qzapp.qlogo.cn/qzapp/101409756/C47BBBD7F2CE94C2B10ED3DCF3DDEC7A/50"</span>\r\n   <span class="token punctuation">[</span><span class="token double-quoted-string string">"figureurl_2"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token number">74</span><span class="token punctuation">)</span> <span class="token double-quoted-string string">"http://qzapp.qlogo.cn/qzapp/101409756/C47BBBD7F2CE94C2B10ED3DCF3DDEC7A/100"</span>\r\n   <span class="token punctuation">[</span><span class="token double-quoted-string string">"figureurl_qq_1"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token number">69</span><span class="token punctuation">)</span> <span class="token double-quoted-string string">"http://q.qlogo.cn/qqapp/101409756/C47BBBD7F2CE94C2B10ED3DCF3DDEC7A/40"</span>\r\n   <span class="token punctuation">[</span><span class="token double-quoted-string string">"figureurl_qq_2"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token number">70</span><span class="token punctuation">)</span> <span class="token double-quoted-string string">"http://q.qlogo.cn/qqapp/101409756/C47BBBD7F2CE94C2B10ED3DCF3DDEC7A/100"</span>\r\n   <span class="token punctuation">[</span><span class="token double-quoted-string string">"is_yellow_vip"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token double-quoted-string string">"0"</span>\r\n   <span class="token punctuation">[</span><span class="token double-quoted-string string">"vip"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token double-quoted-string string">"0"</span>\r\n   <span class="token punctuation">[</span><span class="token double-quoted-string string">"yellow_vip_level"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token double-quoted-string string">"0"</span>\r\n   <span class="token punctuation">[</span><span class="token double-quoted-string string">"level"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token double-quoted-string string">"0"</span>\r\n   <span class="token punctuation">[</span><span class="token double-quoted-string string">"is_yellow_year_vip"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token double-quoted-string string">"0"</span>\r\n<span class="token punctuation">}</span></code></pre></div>', 252),
(135, 'thinkphp系列之--网站接入微博登录', 100, 0, '2019-03-16 15:18:31', '/upload/20190316/e24a2cdc8108c8718a09e0eae6a95c1e.jpg', 2, '今儿来絮叨絮叨，网站接入微博登录，采用第三方登录简直不能再方便，这年头，每个人手里大把账号，今儿忘记这个，明儿忘记那个的，手机登录微博，滴滴一扫登录成功；密码都不用记，使用微博登录接入也比较容易，看完你必须能搞定...', 'Mrs.默先森', 52, 0, '<p>今儿超人来絮叨絮叨，网站接入微博登录，采用第三方登录简直不能再方便，这年头，每个人手里大把账号，今儿忘记这个，明儿忘记那个的，手机登录微博，滴滴一扫登录成功；密码都不用记，使用微博登录接入也比较容易，看完你必须能搞定...</p><p>微博开放平台：<a href="http://open.weibo.com/" target="_blank" title="http://open.weibo.com/">http://open.weibo.com/</a></p><p>PHP SDK &nbsp; &nbsp; : &nbsp;<a href="http://open.weibo.com/wiki/SDK#PHP_SDK" target="_blank" title="http://open.weibo.com/wiki/SDK#PHP_SDK">http://open.weibo.com/wiki/SDK#PHP_SDK</a></p><p>闲话少说，下面我们直接开干...</p><h3>第一步：</h3><p>登录微博开放平台，选择【网站接入 WEB】，进行应用的创建</p><p>然后按照要求进行资料填写并且提交：申请--开发--审核--上线</p><p>这里呢，需要记下【App Key】和【App Secret】,后面开发时候用</p><p><img src="https://wubin.pro/Upload/ueditor/image/20170627/1498575500444254.png" alt="1498575500444254.png"></p><p><br></p><h3>第二步：</h3><p>点击高级信息进行OAuth2.0授权设置：设置授权回调页和取消授权回调页</p><p>设置应用服务器ip</p><p>界面如下图<img src="https://wubin.pro/Upload/ueditor/image/20170627/1498576135686922.png" alt="1498576135686922.png"></p><h3>第三步：</h3><p>这里注意，如果你审核通过的话，不用再配置了；</p><p>审核不通过需要进行测试信息的配置；</p><p>什么不通过的话，点击上图中【高级信息】下面的那四个大字【测试信息】；</p><p>添加测试账号；</p><p>应用未审核通过，不能大范围推广，可设置测试账号来测试尚在开发中的应用；</p><p>ok，以上信息配置完成之后，接下来就开始部署代码；</p><h3>第四步，部署代码：</h3><p>将下载的PHP SDK放入你部署好的项目中，这里超人就放在了thinkphp的public目录中：文件名称为【libweibo-master】<br></p><p>定义常量和载入文件，在载入SDK文件之前确保session开启并可以使用；</p><p>在运行应用之前加载设置并加载好即可；</p><p>代码如下：</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token function">define</span><span class="token punctuation">(</span> <span class="token double-quoted-string string">"WB_AKEY"</span> <span class="token punctuation">,</span> <span class="token single-quoted-string string">''xxxxxxxxxx''</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//App Key</span>\r\n<span class="token function">define</span><span class="token punctuation">(</span> <span class="token double-quoted-string string">"WB_SKEY"</span> <span class="token punctuation">,</span> <span class="token single-quoted-string string">''xxxxxxxxxxxxxxxxxxxxxxxxx''</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//App Secret</span>\r\n<span class="token function">define</span><span class="token punctuation">(</span> <span class="token double-quoted-string string">"WB_CALLBACK_URL"</span> <span class="token punctuation">,</span> <span class="token single-quoted-string string">''http://xxxxxxxxxxxx/callback.php''</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//回调</span>\r\n<span class="token keyword">require_once</span> <span class="token double-quoted-string string">"./libweibo-master/saetv2.ex.class.php"</span><span class="token punctuation">;</span><span class="token comment">//这个文件按照你自己的路径进行加载即可</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p><br></p><p>先简单来一个登陆页面；<br></p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>这个模板页面是通过下面Login控制器类加载<span class="token operator">--</span><span class="token operator">&gt;</span>\r\n<span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token double-quoted-string string">"<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$code_url</span><span class="token punctuation">}</span></span>"</span><span class="token operator">&gt;</span>微博登录<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>哇！！！真的是够简单；<br></p><p>各位童鞋自己去搞微博的按钮吧，哎，还是给个链接吧：<a href="http://open.weibo.com/widget/loginbutton.php" target="_blank" title="微博登录按钮">微博登录按钮</a></p><p><br></p><p>那么有童鞋会问了，上面这个$code_url来自于哪里呢</p><p>往下看就晓得了，他来自于这里：</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token keyword">class</span> <span class="token class-name">Login</span> <span class="token keyword">extends</span> <span class="token class-name">Controller</span>\r\n<span class="token punctuation">{</span>\r\n   <span class="token comment">/**\r\n    * 微博登录首页\r\n    * @return \\think\\Response\r\n    */</span>\r\n   <span class="token keyword">public</span> <span class="token keyword">function</span> index <span class="token punctuation">(</span><span class="token punctuation">)</span>\r\n   <span class="token punctuation">{</span>\r\n      <span class="token variable">$o</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token punctuation">\\</span>SaeTOAuthV2</span><span class="token punctuation">(</span> <span class="token constant">WB_AKEY</span> <span class="token punctuation">,</span> <span class="token constant">WB_SKEY</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n\r\n      <span class="token variable">$code_url</span> <span class="token operator">=</span> <span class="token variable">$o</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">getAuthorizeURL</span><span class="token punctuation">(</span> <span class="token constant">WB_CALLBACK_URL</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n\r\n      <span class="token keyword">return</span> <span class="token function">view</span><span class="token punctuation">(</span> <span class="token single-quoted-string string">''''</span> <span class="token punctuation">,</span> <span class="token function">compact</span><span class="token punctuation">(</span> <span class="token single-quoted-string string">''code_url''</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n   <span class="token punctuation">}</span>\r\n<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p><br></p><p>当点击登录按钮时候，会请求$code_url；<br></p><p>那么他是个啥呢，可自行打印进行查看；</p><p>这里当点击登录按钮之后，你会看到微博的登录页面：<img src="https://wubin.pro/Upload/ueditor/image/20170628/1498579439987206.png" alt="1498579439987206.png">账号密码登录或者扫码登录之后会回跳到之前我们在<a href="http://open.weibo.com/apps/" target="_blank" title="微博开放平台应用">微博开放平台应用</a>中设置的回调地址</p><p>所以，我们需要在回调地址键入一下代码</p><p>超人这里的回调是Index控制器</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token keyword">class</span> <span class="token class-name">Index</span> <span class="token keyword">extends</span> <span class="token class-name">Controller</span>\r\n<span class="token punctuation">{</span>\r\n\r\n   <span class="token keyword">public</span> <span class="token keyword">function</span> index <span class="token punctuation">(</span><span class="token punctuation">)</span>\r\n   <span class="token punctuation">{</span>\r\n      <span class="token comment">//回调处理</span>\r\n      <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">isset</span><span class="token punctuation">(</span> <span class="token global">$_REQUEST</span><span class="token punctuation">[</span> <span class="token single-quoted-string string">''code''</span> <span class="token punctuation">]</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n         <span class="token variable">$o</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token punctuation">\\</span>SaeTOAuthV2</span><span class="token punctuation">(</span> <span class="token constant">WB_AKEY</span> <span class="token punctuation">,</span> <span class="token constant">WB_SKEY</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n\r\n         <span class="token variable">$keys</span>                   <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n         <span class="token variable">$keys</span><span class="token punctuation">[</span> <span class="token single-quoted-string string">''code''</span> <span class="token punctuation">]</span>         <span class="token operator">=</span> <span class="token global">$_REQUEST</span><span class="token punctuation">[</span> <span class="token single-quoted-string string">''code''</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n         <span class="token variable">$keys</span><span class="token punctuation">[</span> <span class="token single-quoted-string string">''redirect_uri''</span> <span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token constant">WB_CALLBACK_URL</span><span class="token punctuation">;</span>\r\n         <span class="token keyword">try</span> <span class="token punctuation">{</span>\r\n            <span class="token variable">$token</span> <span class="token operator">=</span> <span class="token variable">$o</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">getAccessToken</span><span class="token punctuation">(</span> <span class="token single-quoted-string string">''code''</span> <span class="token punctuation">,</span> <span class="token variable">$keys</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n         <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span> OAuthException <span class="token variable">$e</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n         <span class="token punctuation">}</span>\r\n         <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token variable">$token</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n            <span class="token variable">$c</span>            <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token punctuation">\\</span>SaeTClientV2</span><span class="token punctuation">(</span> <span class="token constant">WB_AKEY</span> <span class="token punctuation">,</span> <span class="token constant">WB_SKEY</span> <span class="token punctuation">,</span> <span class="token variable">$token</span><span class="token punctuation">[</span> <span class="token single-quoted-string string">''access_token''</span> <span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n            <span class="token variable">$ms</span>           <span class="token operator">=</span> <span class="token variable">$c</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">home_timeline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// done</span>\r\n            <span class="token variable">$uid_get</span>      <span class="token operator">=</span> <span class="token variable">$c</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">get_uid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n            <span class="token variable">$uid</span>          <span class="token operator">=</span> <span class="token variable">$uid_get</span><span class="token punctuation">[</span> <span class="token single-quoted-string string">''uid''</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//用户id</span>\r\n            <span class="token variable">$user_message</span> <span class="token operator">=</span> <span class="token variable">$c</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">show_user_by_id</span><span class="token punctuation">(</span> <span class="token variable">$uid</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//根据ID获取用户等基本信息</span>\r\n            <span class="token function">dump</span><span class="token punctuation">(</span> <span class="token variable">$user_message</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n            exit<span class="token punctuation">;</span>\r\n         <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\r\n            <span class="token keyword">echo</span> <span class="token single-quoted-string string">''授权失败''</span><span class="token punctuation">;</span>\r\n            exit<span class="token punctuation">;</span>\r\n         <span class="token punctuation">}</span>\r\n      <span class="token punctuation">}</span>\r\n   <span class="token punctuation">}</span>\r\n<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p><br></p><p>至此，就可以打印出登陆者的讯息</p><p>下面是超人打印出自己部分登录信息</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token number">52</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n  <span class="token punctuation">[</span><span class="token double-quoted-string string">"id"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">int</span><span class="token punctuation">(</span><span class="token number">3102481353</span><span class="token punctuation">)</span>\r\n  <span class="token punctuation">[</span><span class="token double-quoted-string string">"idstr"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token double-quoted-string string">"3102481353"</span>\r\n  <span class="token punctuation">[</span><span class="token double-quoted-string string">"class"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">int</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>\r\n  <span class="token punctuation">[</span><span class="token double-quoted-string string">"screen_name"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token double-quoted-string string">"时间煮雨wo煮茶"</span>\r\n  <span class="token punctuation">[</span><span class="token double-quoted-string string">"name"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token double-quoted-string string">"时间煮雨wo煮茶"</span>\r\n  <span class="token punctuation">[</span><span class="token double-quoted-string string">"province"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token double-quoted-string string">"11"</span>\r\n  <span class="token punctuation">[</span><span class="token double-quoted-string string">"city"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token double-quoted-string string">"1000"</span>\r\n  <span class="token punctuation">[</span><span class="token double-quoted-string string">"location"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token double-quoted-string string">"北京"</span>\r\n  <span class="token punctuation">[</span><span class="token double-quoted-string string">"description"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token double-quoted-string string">""</span>\r\n  <span class="token punctuation">[</span><span class="token double-quoted-string string">"url"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token double-quoted-string string">""</span>\r\n  <span class="token punctuation">[</span><span class="token double-quoted-string string">"profile_image_url"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token number">79</span><span class="token punctuation">)</span> <span class="token double-quoted-string string">"http://tva1.sinaimg.cn/crop.0.0.511.511.50/b8ec1bc9jw8ezkhm4szvjj20e80e7q31.jpg"</span>\r\n  <span class="token punctuation">[</span><span class="token double-quoted-string string">"cover_image_phone"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token number">79</span><span class="token punctuation">)</span> <span class="token double-quoted-string string">"http://ww1.sinaimg.cn/crop.0.0.640.640.640/6cf8d7ebjw1ehfr4xa8psj20hs0hsgpg.jpg"</span>\r\n  <span class="token punctuation">[</span><span class="token double-quoted-string string">"profile_url"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span> <span class="token double-quoted-string string">"u/3102481353"</span>\r\n  <span class="token punctuation">[</span><span class="token double-quoted-string string">"domain"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token double-quoted-string string">""</span>\r\n  <span class="token punctuation">[</span><span class="token double-quoted-string string">"weihao"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token double-quoted-string string">""</span>\r\n  <span class="token punctuation">[</span><span class="token double-quoted-string string">"gender"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token double-quoted-string string">"m"</span>\r\n  <span class="token punctuation">[</span><span class="token double-quoted-string string">"followers_count"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">int</span><span class="token punctuation">(</span><span class="token number">153</span><span class="token punctuation">)</span>\r\n  <span class="token punctuation">[</span><span class="token double-quoted-string string">"friends_count"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">int</span><span class="token punctuation">(</span><span class="token number">57</span><span class="token punctuation">)</span>\r\n  <span class="token punctuation">[</span><span class="token double-quoted-string string">"pagefriends_count"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">int</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\r\n  <span class="token punctuation">[</span><span class="token double-quoted-string string">"statuses_count"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">int</span><span class="token punctuation">(</span><span class="token number">37</span><span class="token punctuation">)</span>\r\n  <span class="token punctuation">[</span><span class="token double-quoted-string string">"favourites_count"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">int</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span>\r\n  <span class="token punctuation">[</span><span class="token double-quoted-string string">"created_at"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token double-quoted-string string">"Thu Nov 08 15:15:28 +0800 2012"</span>\r\n  <span class="token punctuation">[</span><span class="token double-quoted-string string">"following"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">bool</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>\r\n  <span class="token punctuation">[</span><span class="token double-quoted-string string">"allow_all_act_msg"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">bool</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>\r\n  <span class="token punctuation">[</span><span class="token double-quoted-string string">"geo_enabled"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">bool</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>\r\n  <span class="token punctuation">[</span><span class="token double-quoted-string string">"verified"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">bool</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>\r\n  <span class="token punctuation">[</span><span class="token double-quoted-string string">"verified_type"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">int</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>\r\n  <span class="token punctuation">[</span><span class="token double-quoted-string string">"remark"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token double-quoted-string string">""</span>\r\n  <span class="token punctuation">[</span><span class="token double-quoted-string string">"insecurity"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n    <span class="token punctuation">[</span><span class="token double-quoted-string string">"sexual_content"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">bool</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>\r\n  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>后续处理，各位大佬根据自己的业务逻辑自行处理即可</p><p>你可能还需要：<a href="http://www.wubin.pro/c/5.html" target="_blank" title="thinkphp系列之--网站接入微博登录">thinkphp系列之--网站接入微博登录</a></p>', 364);
INSERT INTO `blog_article` (`arc_id`, `arc_title`, `arc_sort`, `sendtime`, `updatetime`, `arc_thumb`, `is_recycle`, `arc_digest`, `arc_author`, `cate_id`, `admin_id`, `arc_content`, `arc_click`) VALUES
(136, 'thinkphp5系列之数据库迁移工具(轻松的修改跟共享数据库结构)', 100, 0, '2019-03-16 15:19:31', '/upload/20190316/5b99ecfb16299b33cc9e2e56dbbc013c.png', 2, 'migration：一种数据库的版本控制，让团队在修改数据库结构的同时，保持彼此的进度一致。帮你更简单的管理数据库。基于原生 thinkPHP 5.0 命令行工具，融入了 Phinx 的数据库迁移;查看 Phinx文档 获取更多帮助...', 'Mrs.默先森', 52, 0, '<p>migration：一种数据库的版本控制，让团队在修改数据库结构的同时，保持彼此的进度一致。帮你更简单的管理数据库。基于原生 thinkPHP 5.0 命令行工具，融入了 Phinx 的数据库迁移;查看 &nbsp;<a href="http://docs.phinx.org/en/latest/" target="_blank" title="Phinx文档">Phinx文档</a>获取更多帮助...</p><p><br></p><p><span microsoft="" helvetica="" font-size:="" background-color:="">首先通过 composer 安装</span></p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">composer <span class="token keyword">require</span> topthink<span class="token operator">/</span>think<span class="token operator">-</span>migration<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p><span microsoft="" helvetica="" font-size:="" background-color:="">在命令行下运行查看帮助，可以看到新增的命令</span><span microsoft="" helvetica="" font-size:="" background-color:=""></span><br></p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">php think<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"> migrate\r\n  migrate<span class="token punctuation">:</span>breakpoint  Manage breakpoints\r\n  migrate<span class="token punctuation">:</span>create      Create a <span class="token keyword">new</span> <span class="token class-name">migration</span>\r\n  migrate<span class="token punctuation">:</span>rollback    Rollback the last <span class="token keyword">or</span> to a specific migration\r\n  migrate<span class="token punctuation">:</span>run         Migrate the database\r\n  migrate<span class="token punctuation">:</span>status      Show migration status\r\n seed\r\n  seed<span class="token punctuation">:</span>create         Create a <span class="token keyword">new</span> <span class="token class-name">database</span> seeder\r\n  seed<span class="token punctuation">:</span>run            Run database seeders<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><h3><span microsoft="" helvetica="" font-size:="" background-color:=""></span>常用命令</h3><p>查看可用命令</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">php think list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>创建数据库迁移文件</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">php think migrate<span class="token punctuation">:</span>create CreateUserTable<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>执行数据库迁移文件</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">php think migrate<span class="token punctuation">:</span>run<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>返回到最近一次的migrate操作<br></p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">php think migrate<span class="token punctuation">:</span>rollback<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><h3>thinkphp5数据迁移<br></h3><ul class=" list-paddingleft-2"><li><p>创建数据库迁移文件【<span microsoft="" helvetica="" font-size:="" background-color:="">创建迁移类，首字母必须为大写</span>】</p><p><br></p></li></ul><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">php think migrate<span class="token punctuation">:</span>create CreateUserTable<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p><img src="https://wubin.pro/Upload/ueditor/image/20170711/1499787174218058.png" alt="1499787174218058.png"></p><p>第一次执行的时候会确认是否创建迁移目录；</p><p>确认之后；</p><p>这时会在项目根目录下执行的该命令；</p><p>那么在项目跟目录下会看到database/migrations/20170711153001_create_user_table.php;</p><p>默认有一个change方法</p><p><br></p><p>如果你的迁移脚本只会有一下操作</p><ul class=" list-paddingleft-2"><li><p>createTable（创建表）</p></li><li><p>renameTable（重命名表）</p></li><li><p>addColumn（添加字段）</p></li><li><p>renameColumn（重命名字段）</p></li><li><p>addIndex（添加索引）</p></li><li><p>addForeignKey（添加外键）</p></li></ul><p>那么你只需要change方法就可以了，回滚的时候可以自动根据change里的操作来逆向操作，否则需要定义up和down两个方法，来标识迁移和回滚两个具体操作</p><p>定义了up和down方法后就不要再定义change方法了；</p><p>在change方法里操作数据表的时候，只能用create()或者是update()来完成；</p><p>而不能用save();</p><h3>创建数据表</h3><p>创建数据表使用create方法，并调用addColumn方法进行数据字段定义</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">change</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\r\n<span class="token punctuation">{</span>\r\n   <span class="token variable">$table</span> <span class="token operator">=</span> <span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''user''</span><span class="token punctuation">,</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''engine''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token single-quoted-string string">''MyISAM''</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n   <span class="token variable">$table</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">addColumn</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''username''</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">''string''</span><span class="token punctuation">,</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''limit''</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token number">15</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''default''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token single-quoted-string string">''''</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''comment''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token single-quoted-string string">''用户名''</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\r\n      <span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">addColumn</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''password''</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">''string''</span><span class="token punctuation">,</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''limit''</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token number">32</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''default''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''123456''</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''comment''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token single-quoted-string string">''用户密码''</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\r\n      <span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">addColumn</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''login_status''</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">''boolean''</span><span class="token punctuation">,</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''limit''</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''default''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''comment''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token single-quoted-string string">''登陆状态''</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\r\n      <span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">addColumn</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''login_code''</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">''string''</span><span class="token punctuation">,</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''limit''</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token number">32</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''default''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''comment''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token single-quoted-string string">''排他性登陆标识''</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\r\n      <span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">addColumn</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''last_login_ip''</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">''integer''</span><span class="token punctuation">,</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''limit''</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token number">11</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''default''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''comment''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token single-quoted-string string">''最后登录IP''</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\r\n      <span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">addColumn</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''last_login_time''</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">''datetime''</span><span class="token punctuation">,</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''default''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''comment''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token single-quoted-string string">''最后登录时间''</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\r\n      <span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">addColumn</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''is_delete''</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">''boolean''</span><span class="token punctuation">,</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''limit''</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''default''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''comment''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token single-quoted-string string">''删除状态，1已删除''</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\r\n      <span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">addTimestamps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//默认生成create_time和update_time两个字段</span>\r\n      <span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">addIndex</span><span class="token punctuation">(</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''username''</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''unique''</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\r\n      <span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>生成的数据表结构如下：<img src="https://wubin.pro/Upload/ueditor/image/20170712/1499789728205003.png" alt="1499789728205003.png"></p><p>默认会自动添加一个id自增主键</p><p>如果需要自定义设置主键自增，可如下修改：<br></p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">change</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\r\n<span class="token punctuation">{</span>\r\n    <span class="token variable">$table</span> <span class="token operator">=</span> <span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''user''</span><span class="token punctuation">,</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''engine''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token single-quoted-string string">''MyISAM''</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n    <span class="token variable">$table</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''user_id''</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">setPrimaryKey</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''user_id''</span><span class="token punctuation">)</span> \r\n       <span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">addColumn</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''username''</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">''string''</span><span class="token punctuation">,</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''limit''</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token number">15</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''default''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token single-quoted-string string">''''</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''comment''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token single-quoted-string string">''用户名''</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\r\n       <span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>如果不需要主键自增，可以如下：</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">change</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\r\n<span class="token punctuation">{</span>\r\n    <span class="token variable">$table</span> <span class="token operator">=</span> <span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''user''</span><span class="token punctuation">,</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''engine''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token single-quoted-string string">''MyISAM''</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n    <span class="token variable">$table</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">setPrimaryKey</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''user_id''</span><span class="token punctuation">)</span>\r\n       <span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">addColumn</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''username''</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">''string''</span><span class="token punctuation">,</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''limit''</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token number">15</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''default''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token single-quoted-string string">''''</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''comment''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token single-quoted-string string">''用户名''</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\r\n       <span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>或者使用up和down</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> up <span class="token punctuation">(</span><span class="token punctuation">)</span>\r\n<span class="token punctuation">{</span>\r\n   <span class="token variable">$table</span> <span class="token operator">=</span> <span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''user''</span><span class="token punctuation">,</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''engine''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token single-quoted-string string">''MyISAM''</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n   <span class="token variable">$table</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''user_id''</span><span class="token punctuation">)</span> <span class="token comment">//关闭自动设置主键</span>\r\n      <span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">setPrimaryKey</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''user_id''</span><span class="token punctuation">)</span> <span class="token comment">//设置主键</span>\r\n      <span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">addColumn</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''username''</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">''string''</span><span class="token punctuation">,</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''limit''</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token number">15</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''default''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token single-quoted-string string">''''</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''comment''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token single-quoted-string string">''用户名''</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\r\n      <span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n<span class="token punctuation">}</span>\r\n\r\n<span class="token keyword">public</span> <span class="token keyword">function</span> down <span class="token punctuation">(</span><span class="token punctuation">)</span>\r\n<span class="token punctuation">{</span>\r\n   <span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">dropTable</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''user''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><h3>执行迁移<br></h3><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">php think migrate<span class="token punctuation">:</span>run<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><h3>执行回滚<br></h3><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">php think migrate<span class="token punctuation">:</span>rollback\r\n<span class="token shell-comment comment">#回滚所有</span>\r\nphp think migrate<span class="token punctuation">:</span>rollback <span class="token operator">-</span>t <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><h3>重命名和删除数据表</h3><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''user''</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">rename</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''user_rename''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token shell-comment comment">#重命名</span>\r\n<span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''user''</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">drop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">/</span><span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">dropTable</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''user''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token shell-comment comment">#删除</span></code></pre></div>', 295),
(137, 'thinkphp5系列之URL伪静态（生成优雅的URL）', 100, 0, '2019-03-16 15:20:28', '/upload/20190316/34add5df015ed83131266099474066c3.png', 2, '伪静态是相对真实静态来讲的，通常我们为了增强搜索引擎的友好面，都将文章内容生成静态页面，但是有的朋友为了实时的显示一些信息。或者还想运用动态脚本解决一些问题。不能用静态的方式来展示网站内容。但是这就损失了对搜索引擎的友好面。怎么样在两者之间找个中间方法呢，这就产生了伪静态技术...', 'Mrs.默先森', 52, 0, '<p>伪静态是相对真实静态来讲的，通常我们为了增强搜索引擎的友好面，都将文章内容生成静态页面，但是有的朋友为了实时的显示一些信息。或者还想运用动态脚本解决一些问题。不能用静态的方式来展示网站内容。但是这就损失了对搜索引擎的友好面。怎么样在两者之间找个中间方法呢，这就产生了伪静态技术...</p><h3>URL重写</h3><p>可以通过URl重写隐藏应用的入口文件index.php</p><p>Apache服务器配置：<br></p><ol class="custom_num list-paddingleft-1"><li class="list-num-1-1 list-num-paddingleft-1"><p>httpd.conf配置文件中加载了mod_rewrite.so模块</p></li><li class="list-num-1-2 list-num-paddingleft-1"><p>AllowOverride None 将None改为 All</p></li><li class="list-num-1-3 list-num-paddingleft-1"><p>把下面的内容保存为.htaccess文件放到应用入口文件的同级目录下</p></li></ol><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token operator">&lt;</span>IfModule mod_rewrite<span class="token punctuation">.</span>c<span class="token operator">&gt;</span>\r\nOptions <span class="token operator">+</span>FollowSymlinks <span class="token operator">-</span>Multiviews\r\nRewriteEngine on\r\n\r\nRewriteCond <span class="token operator">%</span><span class="token punctuation">{</span><span class="token constant">REQUEST_FILENAME</span><span class="token punctuation">}</span> <span class="token operator">!</span><span class="token operator">-</span>d\r\nRewriteCond <span class="token operator">%</span><span class="token punctuation">{</span><span class="token constant">REQUEST_FILENAME</span><span class="token punctuation">}</span> <span class="token operator">!</span><span class="token operator">-</span>f\r\nRewriteRule <span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">)</span>$ index<span class="token punctuation">.</span>php<span class="token operator">?</span><span class="token operator">/</span><span class="token variable">$1</span> <span class="token punctuation">[</span><span class="token constant">QSA</span><span class="token punctuation">,</span><span class="token constant">PT</span><span class="token punctuation">,</span>L<span class="token punctuation">]</span>\r\n<span class="token operator">&lt;</span><span class="token operator">/</span>IfModule<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><h3>注册路由规则<br></h3><p><span microsoft="" helvetica="" font-size:="" background-color:="">路由定义采用</span><code liberation="" font-size:="" margin:="" padding:="" 0px="" display:="" border-radius:="" word-break:="" white-space:="" line-height:="" background-color:="" color:="">\\think\\Route</code><span microsoft="" helvetica="" font-size:="" background-color:="">类的</span><code liberation="" font-size:="" margin:="" padding:="" 0px="" display:="" border-radius:="" word-break:="" white-space:="" line-height:="" background-color:="" color:="">rule</code><span microsoft="" helvetica="" font-size:="" background-color:="">方法注册，通常是在应用的路由配置文件</span><code liberation="" font-size:="" margin:="" padding:="" 0px="" display:="" border-radius:="" word-break:="" white-space:="" line-height:="" background-color:="" color:="">application/route.php</code><span microsoft="" helvetica="" font-size:="" background-color:="">进行注册，格式是</span></p><blockquote><p><span microsoft="" helvetica="" font-size:="" background-color:=""></span></p><h4>Route::rule(‘路由表达式’,‘路由地址’,‘请求类型’,‘路由参数（数组）’,‘变量规则（数组）’);</h4><p><span microsoft="" helvetica="" font-size:="" background-color:=""></span><br></p></blockquote><p>在router.php中默认有以下代码：<br></p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token keyword">return</span> <span class="token punctuation">[</span>\r\n    <span class="token single-quoted-string string">''__pattern__''</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span>\r\n        <span class="token single-quoted-string string">''name''</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token single-quoted-string string">''\\w+''</span><span class="token punctuation">,</span>\r\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n    <span class="token single-quoted-string string">''[hello]''</span>     <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span>\r\n        <span class="token single-quoted-string string">'':id''</span>   <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token single-quoted-string string">''index/hello''</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token single-quoted-string string">''method''</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token single-quoted-string string">''get''</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token single-quoted-string string">''id''</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token single-quoted-string string">''\\d+''</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n        <span class="token single-quoted-string string">'':name''</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token single-quoted-string string">''index/hello''</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token single-quoted-string string">''method''</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token single-quoted-string string">''post''</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n<span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>当请求：<span>&lt;a href=''{:url(''qqlogin/index/index'')}''&gt;qq登录&lt;/a&gt;</span></p><p>会访问到：http://blog.ishilf.com/qqlogin/index/index.html</p><p><span><span>那么我们可以这样配置路由</span></span></p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token keyword">return</span> <span class="token punctuation">[</span>\r\n    <span class="token single-quoted-string string">''__pattern__''</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span>\r\n        <span class="token single-quoted-string string">''name''</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token single-quoted-string string">''\\w+''</span><span class="token punctuation">,</span>\r\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n   <span class="token single-quoted-string string">''[qq]''</span>     <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span>\r\n      <span class="token single-quoted-string string">''''</span>   <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token single-quoted-string string">''qqlogin/index/index''</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token single-quoted-string string">''method''</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token single-quoted-string string">''get''</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n   <span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n<span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p><span microsoft="" helvetica="" font-size:="" background-color:=""></span>那么当请求：<span>&lt;a href=''{:url(''qqlogin/index/index'')}''&gt;qq登录&lt;/a&gt;</span></p><p>会看到地址栏生成地址：http://blog.ishilf.com/qq.html</p><p><br></p><p>如果携带参数的情况；</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token keyword">return</span> <span class="token punctuation">[</span>\r\n    <span class="token single-quoted-string string">''__pattern__''</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span>\r\n        <span class="token single-quoted-string string">''name''</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token single-quoted-string string">''\\w+''</span><span class="token punctuation">,</span>\r\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n    <span class="token single-quoted-string string">''[hello]''</span>     <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span>\r\n        <span class="token single-quoted-string string">'':id''</span>   <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token single-quoted-string string">''qqlogin/index/index''</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token single-quoted-string string">''method''</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token single-quoted-string string">''get''</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token single-quoted-string string">''id''</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token single-quoted-string string">''\\d+''</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n<span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>那么当请求：<span>&lt;a href=''{:url(''qqlogin/index/index'')}''&gt;qq登录&lt;/a&gt;</span></p><p>会看到请求地址：http://blog.ishilf.com/qq/10.html</p><p><br></p><p><br></p><p>或者是你可以这样注册路由：</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token scope">Route<span class="token punctuation">::</span></span><span class="token function">rule</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''qq''</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''qqlogin/index/index''</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''GET''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n<span class="token scope">Route<span class="token punctuation">::</span></span><span class="token function">rule</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''qq/:id''</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''qqlogin/index/index''</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''GET''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token shell-comment comment">#带参数</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>请求类型包括：GET(GET请求)、<span microsoft="" helvetica="" font-size:="" background-color:="">POST</span>(POST请求)、PUT(PUT请求)、DELETE(DELETE请求)、*(任何请求)</p><p>这里需要注意：请求类型参数必须大写</p><p><span microsoft="" helvetica="" font-size:="" background-color:="">系统提供了为不同的请求类型定义路由规则的简化方法，例如：</span></p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token scope">Route<span class="token punctuation">::</span></span><span class="token function">get</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''new/:id''</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''News/read''</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 定义GET请求路由规则</span>\r\n<span class="token scope">Route<span class="token punctuation">::</span></span><span class="token function">post</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''new/:id''</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''News/update''</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 定义POST请求路由规则</span>\r\n<span class="token scope">Route<span class="token punctuation">::</span></span><span class="token function">put</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''new/:id''</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''News/update''</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 定义PUT请求路由规则</span>\r\n<span class="token scope">Route<span class="token punctuation">::</span></span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''new/:id''</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''News/delete''</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 定义DELETE请求路由规则</span>\r\n<span class="token scope">Route<span class="token punctuation">::</span></span><span class="token function">any</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''new/:id''</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''News/read''</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 所有请求都支持的路由规则</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><h3>伪静态</h3><p><span microsoft="" helvetica="" font-size:="" background-color:="">T<span microsoft="" helvetica="" font-size:="" background-color:="">hinkPHP支持伪静态URL设置；</span></span><span microsoft="" helvetica="">可以通过设置application/config中<span microsoft="" helvetica="" font-size:="" background-color:="">url_html_suffix</span></span><span liberation="" white-space:="" background-color:="">参数随意在URL的最后增加你想要的静态后缀，而不会影响当前操作的正常执行</span></p><p><span>默认情况下，伪静态的设置为html &nbsp;</span></p><h4><span>你可能会感兴趣</span></h4><p><span><span microsoft="" helvetica="" background-color:="" color:="" font-size:=""><a href="http://www.wubin.pro/c/18.html" target="_blank" title="thinkphp5系列之数据库迁移工具(轻松的修改跟共享数据库结构)">thinkphp5系列之数据库迁移工具(轻松的修改跟共享数据库结构)</a></span></span></p>', 386);
INSERT INTO `blog_article` (`arc_id`, `arc_title`, `arc_sort`, `sendtime`, `updatetime`, `arc_thumb`, `is_recycle`, `arc_digest`, `arc_author`, `cate_id`, `admin_id`, `arc_content`, `arc_click`) VALUES
(138, 'thinkphp5系列之整合小米登录', 100, 0, '2019-03-16 15:21:52', '/upload/20190316/2a3b6e145337d4b89ed17763382e5532.jpg', 2, '前几天看到有童鞋做小米登录,遇到不少问题，抽了个小时间也体验一把【为发烧而生】，这一烧，一直没去过小米官网的超人，顺便把小米官网逛了个够，这一顿逛啊，发现东西还真不少，╮(╯▽╰)╭哎，我也就是去逛逛而已...', 'Mrs.默先森', 52, 0, '<p>前几天看到有童鞋做小米登录,遇到不少问题，抽了个小时间也体验一把【为发烧而生】，这一烧，一直没去过小米官网的超人，顺便把小米官网逛了个够，这一顿逛啊，发现东西还真不少，╮(╯▽╰)╭哎，我也就是去逛逛而已...</p><p><br></p><p>废话不多说，先上链接</p><p>小米开放平台：<a href="https://dev.mi.com/console/" target="_blank" title="https://dev.mi.com/console/">https://dev.mi.com/console/</a></p><p>管理控制台：<a href="https://dev.mi.com/console/man/" target="_blank" title="https://dev.mi.com/console/man/">https://dev.mi.com/console/man/</a></p><p>小米开放平台OAuth PHP SDK：<a href="https://github.com/xiaomi-passport/oauth-php-sdk" target="_blank" title="https://github.com/xiaomi-passport/oauth-php-sdk">https://github.com/xiaomi-passport/oauth-php-sdk</a></p><p>文档中心：<a href="https://dev.mi.com/console/doc/" target="_blank" title="https://dev.mi.com/console/doc/">https://dev.mi.com/console/doc/</a></p><p>小米Logo下载：<a href="https://dev.mi.com/docs/passport/file/mi_icon.zip" target="_blank" title="https://dev.mi.com/docs/passport/file/mi_icon.zip">https://dev.mi.com/docs/passport/file/mi_icon.zip</a></p><p>开放数据接口权限列表：<a href="https://dev.mi.com/console/doc/detail?pId=762" target="_blank" title="https://dev.mi.com/console/doc/detail?pId=762">https://dev.mi.com/console/doc/detail?pId=762</a></p><p>相关错误码定义：<a href="https://dev.mi.com/console/doc/detail?pId=765" target="_blank" title="https://dev.mi.com/console/doc/detail?pId=765">https://dev.mi.com/console/doc/detail?pId=765</a></p><p><br></p><h3>①小米开放平台注册填写开发者资料</h3><p>点击右上角【资料修改】--【个人开发者】</p><p>如果你是企业开发者那么点击【企业开发者即可】</p><p>这里以个人开发者进行说明</p><p><img src="https://wubin.pro/Upload/ueditor/image/20170804/1501856023262844.png" alt="1501856023262844.png" width="611" height="372"></p><p>然后就是合同条款，点同意下一步即可</p><p>next就是【开通开发者个人账号】</p><p>按要求填写开发者资料，完事之后点击注册等待审核即可</p><p>这个审核还是比较快的</p><p>也有可能是超人比较帅的缘故</p><p>完成之后可获得<span>AppID和<span>AppSecret</span></span></p><p><span>AppID和</span></p><h3>②创建网页应用</h3><p>点击导航栏上的【管理控制台：<a href="https://dev.mi.com/console/man/" target="_blank" title="https://dev.mi.com/console/man/">https://dev.mi.com/console/man/</a>】<br></p><p>找到【网页应用】，点进去</p><p><br></p><p><img src="https://wubin.pro/Upload/ueditor/image/20170804/1501857798370529.png" alt="1501857798370529.png" width="647" height="151"></p><p>点击创建网页用用，按照要求进行填写即可</p><h3>③启用应用并且填写回调地址</h3><p>点击导航栏上的【管理控制台：<a href="https://dev.mi.com/console/man/" target="_blank" title="https://dev.mi.com/console/man/">https://dev.mi.com/console/man/</a>】</p><p>找到【账号服务】，点进去</p><p>会看到小米账号未接入服务中自己刚创建好的应用</p><p>点进去之后，点击立即启用就好了</p><p><img src="https://wubin.pro/Upload/ueditor/image/20170804/1501858318957237.png" alt="1501858318957237.png" width="378" height="298"></p><p><img src="https://wubin.pro/Upload/ueditor/image/20170804/1501858318908778.png" alt="1501858318908778.png" width="665" height="188"></p><p>点击立即启用之后</p><p>会弹出【启用账号服务】弹出框</p><p>这里需要输入回调地址</p><p><img src="https://wubin.pro/Upload/ueditor/image/20170805/1501870685571936.png" alt="1501870685571936.png" width="706" height="367"></p><p>点击启用即可</p><p>至此小米后台的配置工作就ok~\\(≧▽≦)/~啦啦啦</p><h3>④下载SDK上传至服务器</h3><p>下载好SDK【小米开放平台OAuth PHP SDK：<a href="https://github.com/xiaomi-passport/oauth-php-sdk" target="_blank" title="https://github.com/xiaomi-passport/oauth-php-sdk">https://github.com/xiaomi-passport/oauth-php-sdk</a>】</p><p>里面有两个文件包</p><p><img src="https://wubin.pro/Upload/ueditor/image/20170804/1501855328888736.png" alt="1501855328888736.png" width="435" height="201"></p><p>把php-sdk-demo放到服务器上，访问就可以先行体验一把小米登录(上小米官网登录也算是体验把...)，我们需要的是另外一个【php-sdk】，将该文件放到自己开发项目中，上传至服务器</p><h3>⑤载入SDK</h3><p>按照自己路径加载以下文件</p><p>小米sdk文件夹的名称我自己修改了</p><p>默认是php-sdk</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token keyword">require_once</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''./xiaomi-php-sdk/utils/XMUtil.php''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n<span class="token keyword">require_once</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''./xiaomi-php-sdk/utils/AccessToken.php''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n<span class="token keyword">require_once</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''./xiaomi-php-sdk/httpclient/XMHttpClient.php''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n<span class="token keyword">require_once</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''./xiaomi-php-sdk/httpclient/XMOAuthClient.php''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n<span class="token keyword">require_once</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''./xiaomi-php-sdk/httpclient/XMApiClient.php''</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><h3>⑥引导用户到小米授权登录页面</h3><p>这里当点击小米登录之后</p><p>跳转至以下代码所在方法</p><p>这里超人的登录请求地址为：http://blog.ishilf.com/mi/login/login.html</p><p>这个时候当请求http://blog.ishilf.com/mi/login/login.html时候会唤起小米登录页面</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token keyword">class</span> <span class="token class-name">Login</span> <span class="token keyword">extends</span> <span class="token class-name">Controller</span>\r\n<span class="token punctuation">{</span>\r\n\r\n   <span class="token comment">/**\r\n    * 网站登录首页\r\n    * @return \\think\\response\\View\r\n    */</span>\r\n   <span class="token keyword">public</span> <span class="token keyword">function</span> index <span class="token punctuation">(</span><span class="token punctuation">)</span>\r\n   <span class="token punctuation">{</span>\r\n      <span class="token keyword">return</span> view <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n   <span class="token punctuation">}</span>\r\n\r\n   <span class="token comment">/**\r\n    *登录请求地址\r\n    */</span>\r\n   <span class="token keyword">public</span> <span class="token keyword">function</span> login <span class="token punctuation">(</span><span class="token punctuation">)</span>\r\n   <span class="token punctuation">{</span>\r\n      <span class="token variable">$clientId</span>     <span class="token operator">=</span><span class="token single-quoted-string string">''这里输入你自己的AppID''</span><span class="token punctuation">;</span>\r\n      <span class="token variable">$clientSecret</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''这里输入你自己的AppSecret''</span><span class="token punctuation">;</span>\r\n      <span class="token variable">$redirectUri</span>  <span class="token operator">=</span> <span class="token single-quoted-string string">''这里输入你在启用应用时填写的回调地址''</span><span class="token punctuation">;</span><span class="token comment">//这里超人设置的回调地址：http://blog.ishilf.com/mi/entry/index.html</span>\r\n\r\n      <span class="token comment">//引导用户到小米登录页面</span>\r\n      <span class="token variable">$oauthClient</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token punctuation">\\</span>XMOAuthClient</span><span class="token punctuation">(</span> <span class="token variable">$clientId</span> <span class="token punctuation">,</span> <span class="token variable">$clientSecret</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n      <span class="token variable">$oauthClient</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">setRedirectUri</span> <span class="token punctuation">(</span> <span class="token variable">$redirectUri</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n      <span class="token variable">$responseType</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''code''</span><span class="token punctuation">;</span>\r\n      <span class="token variable">$state</span>        <span class="token operator">=</span> <span class="token single-quoted-string string">''state''</span><span class="token punctuation">;</span>\r\n      <span class="token variable">$url</span>          <span class="token operator">=</span> <span class="token variable">$oauthClient</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">getAuthorizeUrl</span> <span class="token punctuation">(</span> <span class="token variable">$responseType</span> <span class="token punctuation">,</span> <span class="token variable">$state</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n      Header <span class="token punctuation">(</span> <span class="token double-quoted-string string">"HTTP/1.1 302 Found"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n      Header <span class="token punctuation">(</span> <span class="token double-quoted-string string">"Location: <span class="token interpolation"><span class="token variable">$url</span></span>"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n      exit<span class="token punctuation">;</span>\r\n   <span class="token punctuation">}</span>\r\n<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><h3>⑦回调地址处理</h3><p>回调地址获取用户信息代码：</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token keyword">class</span> <span class="token class-name">Entry</span> <span class="token keyword">extends</span> <span class="token class-name">Controller</span>\r\n<span class="token punctuation">{</span>\r\n   <span class="token comment">//网站首页</span>\r\n   <span class="token keyword">public</span> <span class="token keyword">function</span> index <span class="token punctuation">(</span><span class="token punctuation">)</span>\r\n   <span class="token punctuation">{</span>\r\n      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token global">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">''code''</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isset</span><span class="token punctuation">(</span><span class="token global">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">''state''</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\r\n         <span class="token variable">$clientId</span>     <span class="token operator">=</span><span class="token single-quoted-string string">''这里输入你自己的AppID''</span><span class="token punctuation">;</span>\r\n         <span class="token variable">$clientSecret</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''这里输入你自己的AppSecret''</span><span class="token punctuation">;</span>\r\n         <span class="token variable">$redirectUri</span>  <span class="token operator">=</span> <span class="token single-quoted-string string">''这里输入你在启用应用时填写的回调地址''</span><span class="token punctuation">;</span><span class="token comment">//这里超人设置的回调地址：http://blog.ishilf.com/mi/entry/index.html</span>\r\n         <span class="token variable">$userProfilePath</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''/user/profile''</span><span class="token punctuation">;</span>\r\n         <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">isset</span><span class="token punctuation">(</span> <span class="token global">$_GET</span><span class="token punctuation">[</span> <span class="token single-quoted-string string">''code''</span> <span class="token punctuation">]</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n            <span class="token variable">$code</span>        <span class="token operator">=</span> <span class="token global">$_GET</span><span class="token punctuation">[</span> <span class="token single-quoted-string string">''code''</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n            <span class="token variable">$oauthClient</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token punctuation">\\</span>XMOAuthClient</span><span class="token punctuation">(</span> <span class="token variable">$clientId</span> <span class="token punctuation">,</span> <span class="token variable">$clientSecret</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n            <span class="token variable">$oauthClient</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">setRedirectUri</span> <span class="token punctuation">(</span> <span class="token variable">$redirectUri</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n            <span class="token variable">$token</span> <span class="token operator">=</span> <span class="token variable">$oauthClient</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">getAccessTokenByAuthorizationCode</span> <span class="token punctuation">(</span> <span class="token variable">$code</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n            <span class="token comment">//  token有较长的有效期，可以存储下来，不必每次去获取token</span>\r\n            <span class="token comment">//halt($token);</span>\r\n            <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token variable">$token</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n               <span class="token comment">// 如果有错误，可以获取错误号码和错误描述</span>\r\n               <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token variable">$token</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">isError</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n                  <span class="token variable">$errorNo</span>  <span class="token operator">=</span> <span class="token variable">$token</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">getError</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n                  <span class="token variable">$errordes</span> <span class="token operator">=</span> <span class="token variable">$token</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">getErrorDescription</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n                  <span class="token keyword">print</span> <span class="token double-quoted-string string">"error no : "</span> <span class="token punctuation">.</span> <span class="token variable">$errorNo</span> <span class="token punctuation">.</span> <span class="token double-quoted-string string">"   error description : "</span> <span class="token punctuation">.</span> <span class="token variable">$errordes</span> <span class="token punctuation">.</span> <span class="token double-quoted-string string">"\r\n"</span><span class="token punctuation">;</span>\r\n               <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\r\n                  <span class="token comment">// 拿到token id</span>\r\n                  <span class="token variable">$tokenId</span> <span class="token operator">=</span> <span class="token variable">$token</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">getAccessTokenId</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//halt ( $tokenId );</span>\r\n                  <span class="token comment">// 创建api client</span>\r\n                  <span class="token variable">$xmApiClient</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token punctuation">\\</span>XMApiClient</span><span class="token punctuation">(</span><span class="token variable">$clientId</span><span class="token punctuation">,</span> <span class="token variable">$tokenId</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n                  <span class="token comment">// 获取nonce  随机数:分钟</span>\r\n                  <span class="token variable">$nonce</span> <span class="token operator">=</span> \\<span class="token scope">XMUtil<span class="token punctuation">::</span></span><span class="token function">getNonce</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n                  <span class="token variable">$path</span> <span class="token operator">=</span> <span class="token variable">$userProfilePath</span><span class="token punctuation">;</span>\r\n                  <span class="token variable">$method</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"GET"</span><span class="token punctuation">;</span>\r\n                  <span class="token variable">$params</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">''token''</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token variable">$tokenId</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"clientId"</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token variable">$clientId</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n                  <span class="token comment">// 计算签名</span>\r\n                  <span class="token variable">$sign</span> <span class="token operator">=</span> \\<span class="token scope">XMUtil<span class="token punctuation">::</span></span><span class="token function">buildSignature</span><span class="token punctuation">(</span><span class="token variable">$nonce</span><span class="token punctuation">,</span> <span class="token variable">$method</span><span class="token punctuation">,</span>  <span class="token variable">$xmApiClient</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">getApiHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$path</span><span class="token punctuation">,</span> <span class="token variable">$params</span><span class="token punctuation">,</span> <span class="token variable">$token</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">getMacKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n                  <span class="token comment">// 构建header</span>\r\n                  <span class="token variable">$head</span> <span class="token operator">=</span>\\<span class="token scope">XMUtil<span class="token punctuation">::</span></span><span class="token function">buildMacRequestHead</span><span class="token punctuation">(</span><span class="token variable">$tokenId</span><span class="token punctuation">,</span> <span class="token variable">$nonce</span><span class="token punctuation">,</span> <span class="token variable">$sign</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n                  <span class="token comment">// 访问api</span>\r\n                  <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$xmApiClient</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">callApi</span><span class="token punctuation">(</span><span class="token variable">$userProfilePath</span><span class="token punctuation">,</span> <span class="token variable">$params</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token variable">$head</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n                  <span class="token comment">//halt($result);</span>\r\n                  <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$xmApiClient</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">callApiSelfSign</span><span class="token punctuation">(</span><span class="token variable">$userProfilePath</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$token</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">getMacKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n                  <span class="token function">halt</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//打印用户信息</span>\r\n               <span class="token punctuation">}</span>\r\n            <span class="token punctuation">}</span>\r\n         <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\r\n            <span class="token keyword">print</span> <span class="token double-quoted-string string">"Get token Error"</span><span class="token punctuation">;</span>\r\n         <span class="token punctuation">}</span>\r\n      <span class="token punctuation">}</span>\r\n   <span class="token punctuation">}</span>\r\n<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>跳转到回调地址时</p><p>$_GET[''code'']，get中的code参数只有一次有效</p><p>当再次刷新页面时会打印出错误码以及错误消息：<span pingfang="" font-size:="">error no : 96013 error description : invalid authorization code</span></p><p><span pingfang="" font-size:="">对照错误码表：<span microsoft="" hiragino="" sans="" font-size:="" background-color:="">授权码无效或已经过期, 授权码只能用一次, 而且 10 分钟有效</span></span></p><p>当登录成功之后<br></p><p>打印的用户信息如下</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n  <span class="token punctuation">[</span><span class="token double-quoted-string string">"code"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">int</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\r\n  <span class="token punctuation">[</span><span class="token double-quoted-string string">"data"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n    <span class="token punctuation">[</span><span class="token double-quoted-string string">"miliaoIcon"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token number">83</span><span class="token punctuation">)</span> <span class="token double-quoted-string string">"https://account.xiaomi.com/static/res/7c3e9b0/passport/acc-2014/img/n-avator-bg.png"</span>\r\n    <span class="token punctuation">[</span><span class="token double-quoted-string string">"miliaoIcon_120"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token number">83</span><span class="token punctuation">)</span> <span class="token double-quoted-string string">"https://account.xiaomi.com/static/res/7c3e9b0/passport/acc-2014/img/n-avator-bg.png"</span>\r\n    <span class="token punctuation">[</span><span class="token double-quoted-string string">"miliaoIcon_320"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token number">83</span><span class="token punctuation">)</span> <span class="token double-quoted-string string">"https://account.xiaomi.com/static/res/7c3e9b0/passport/acc-2014/img/n-avator-bg.png"</span>\r\n    <span class="token punctuation">[</span><span class="token double-quoted-string string">"miliaoIcon_75"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token number">83</span><span class="token punctuation">)</span> <span class="token double-quoted-string string">"https://account.xiaomi.com/static/res/7c3e9b0/passport/acc-2014/img/n-avator-bg.png"</span>\r\n    <span class="token punctuation">[</span><span class="token double-quoted-string string">"miliaoIcon_90"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token number">83</span><span class="token punctuation">)</span> <span class="token double-quoted-string string">"https://account.xiaomi.com/static/res/7c3e9b0/passport/acc-2014/img/n-avator-bg.png"</span>\r\n    <span class="token punctuation">[</span><span class="token double-quoted-string string">"miliaoIcon_orig"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token number">83</span><span class="token punctuation">)</span> <span class="token double-quoted-string string">"https://account.xiaomi.com/static/res/7c3e9b0/passport/acc-2014/img/n-avator-bg.png"</span>\r\n    <span class="token punctuation">[</span><span class="token double-quoted-string string">"miliaoNick"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token double-quoted-string string">"超人"</span>\r\n    <span class="token punctuation">[</span><span class="token double-quoted-string string">"userId"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">int</span><span class="token punctuation">(</span><span class="token number">1040864045</span><span class="token punctuation">)</span>\r\n  <span class="token punctuation">}</span>\r\n  <span class="token punctuation">[</span><span class="token double-quoted-string string">"description"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token double-quoted-string string">"no error"</span>\r\n  <span class="token punctuation">[</span><span class="token double-quoted-string string">"result"</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token double-quoted-string string">"ok"</span>\r\n<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p><br></p><p>需要注意</p><p>第⑥步和第⑦步中$clientId、$clientSecret、$redirectUri、$user</p><p>可以定义为常量或者放到配置项中</p><p>就不需要再两个分别两次书写了</p><p>以上即为接入小米登录详细操作</p><p>在实际操作过程中遇到问题</p><p>可在下方留言或者联系超人来协助解决</p>', 307);
INSERT INTO `blog_article` (`arc_id`, `arc_title`, `arc_sort`, `sendtime`, `updatetime`, `arc_thumb`, `is_recycle`, `arc_digest`, `arc_author`, `cate_id`, `admin_id`, `arc_content`, `arc_click`) VALUES
(139, 'thinkphp5系列之模型验证', 100, 0, '2019-03-16 15:22:52', '/upload/20190316/9d52857282eb4174616eb8f3380765a0.png', 2, '数据验证，是保证数据安全的有效方式，在thinkphp5中有着非常方便的模型验证数据，处理方式跟tp3有些不一样的地方，这里超人给出详细的解释和说明，以提供大家在说些的时候少走弯路...', 'Mrs.默先森', 52, 0, '<p>数据验证，是保证数据安全的有效方式，在thinkphp5中有着非常方便的模型验证数据，处理方式跟tp3有些不一样的地方，这里超人给出详细的解释和说明，以提供大家在说些的时候少走弯路...</p><p>thinkphp5模型验证手册地址：<a href="https://www.kancloud.cn/manual/thinkphp5/129355" target="_blank" title="https://www.kancloud.cn/manual/thinkphp5/129355">https://www.kancloud.cn/manual/thinkphp5/129355</a><br></p><p>模型验证我们可以有两种方式</p><p>使用验证器进行验证（tp5推荐使用的验证方式）</p><p>模型中直接验证</p><p><br></p><p>这里以栏目作为说明</p><p>以下截图是创建category控制器和模型</p><p>和模板页面</p><p><img src="https://wubin.pro/Upload/ueditor/image/20170815/1502803029759291.png" alt="1502803029759291.png" width="239" height="223"><img src="https://wubin.pro/Upload/ueditor/image/20170815/1502803180367836.png" alt="1502803180367836.png" width="419" height="219"></p><h3>验证器验证<br></h3><p>thinkphp5验证器手册地址：<a href="https://www.kancloud.cn/manual/thinkphp5/129352" target="_blank" title="https://www.kancloud.cn/manual/thinkphp5/129352">https://www.kancloud.cn/manual/thinkphp5/129352</a></p><p>首先需要在application/admin下创建validate目录</p><p>该目录中创建Category.php</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token keyword">namespace</span> <span class="token package">app<span class="token punctuation">\\</span>admin<span class="token punctuation">\\</span>validate</span><span class="token punctuation">;</span>\r\n\r\n<span class="token keyword">use</span> <span class="token package">think<span class="token punctuation">\\</span>Validate</span><span class="token punctuation">;</span>\r\n\r\n<span class="token keyword">class</span> <span class="token class-name">Category</span> <span class="token keyword">extends</span> <span class="token class-name">Validate</span>\r\n<span class="token punctuation">{</span>\r\n   \r\n<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p><br></p><p><span>控制器代码：</span></p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token keyword">namespace</span> <span class="token package">app<span class="token punctuation">\\</span>admin<span class="token punctuation">\\</span>controller</span><span class="token punctuation">;</span>\r\n\r\n<span class="token keyword">use</span> <span class="token package">think<span class="token punctuation">\\</span>Controller</span><span class="token punctuation">;</span>\r\n\r\n<span class="token keyword">class</span> <span class="token class-name">Category</span> <span class="token keyword">extends</span> <span class="token class-name">Controller</span>\r\n<span class="token punctuation">{</span>\r\n   <span class="token keyword">public</span> <span class="token keyword">function</span> index <span class="token punctuation">(</span><span class="token punctuation">)</span>\r\n   <span class="token punctuation">{</span>\r\n      <span class="token comment">//判断post请求</span>\r\n      <span class="token keyword">if</span> <span class="token punctuation">(</span> request <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">isPost</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n         <span class="token comment">//实例化Category模型</span>\r\n         <span class="token comment">//模型返回的数据[''code''=&gt;1,''msg''=&gt;''操作成功'']</span>\r\n         <span class="token comment">//input (''post.'')接受post提交数据</span>\r\n         <span class="token variable">$model</span> <span class="token operator">=</span> <span class="token punctuation">(</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token punctuation">\\</span>app<span class="token punctuation">\\</span>common<span class="token punctuation">\\</span>model<span class="token punctuation">\\</span>Category</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">store</span> <span class="token punctuation">(</span>input <span class="token punctuation">(</span><span class="token single-quoted-string string">''post.''</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n         <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token variable">$model</span><span class="token punctuation">[</span> <span class="token single-quoted-string string">''code''</span> <span class="token punctuation">]</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>\r\n            <span class="token keyword">return</span> <span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">success</span> <span class="token punctuation">(</span> <span class="token variable">$model</span><span class="token punctuation">[</span> <span class="token single-quoted-string string">''msg''</span> <span class="token punctuation">]</span> <span class="token punctuation">,</span> <span class="token single-quoted-string string">''index''</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n         <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\r\n            <span class="token keyword">return</span> <span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">error</span> <span class="token punctuation">(</span> <span class="token variable">$model</span><span class="token punctuation">[</span> <span class="token single-quoted-string string">''msg''</span> <span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n         <span class="token punctuation">}</span>\r\n      <span class="token punctuation">}</span>\r\n\r\n      <span class="token comment">//渲染模板</span>\r\n      <span class="token keyword">return</span> view <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n   <span class="token punctuation">}</span>\r\n<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p><span>模型代码：</span></p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token keyword">namespace</span> <span class="token package">app<span class="token punctuation">\\</span>common<span class="token punctuation">\\</span>model</span><span class="token punctuation">;</span>\r\n\r\n<span class="token keyword">use</span> <span class="token package">think<span class="token punctuation">\\</span>Model</span><span class="token punctuation">;</span>\r\n\r\n<span class="token keyword">class</span> <span class="token class-name">Category</span> <span class="token keyword">extends</span> <span class="token class-name">Model</span>\r\n<span class="token punctuation">{</span>\r\n   <span class="token comment">//主键</span>\r\n   <span class="token keyword">protected</span> <span class="token variable">$pk</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''id''</span><span class="token punctuation">;</span>\r\n   <span class="token comment">//数据表，需要写表全名，如表前缀wb,那么这里需要写wb_category</span>\r\n    <span class="token keyword">protected</span> <span class="token variable">$table</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''category''</span><span class="token punctuation">;</span>\r\n\r\n    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">store</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span>\r\n   <span class="token punctuation">{</span>\r\n      <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">validate</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">save</span> <span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token operator">===</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\r\n         <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token single-quoted-string string">''code''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''msg''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">getError</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n      <span class="token punctuation">}</span>\r\n      <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token single-quoted-string string">''code''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''msg''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token single-quoted-string string">''栏目添加成功''</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n   <span class="token punctuation">}</span>\r\n<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p><span>这里需要注意：</span></p><p><span>默认情况下验证器需要跟验证器名称一致</span></p><p><span>也就是模型为：Category.php，那么验证器名称：Category.php</span></p><p><span>验证器代码：</span></p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token keyword">namespace</span> <span class="token package">app<span class="token punctuation">\\</span>admin<span class="token punctuation">\\</span>validate</span><span class="token punctuation">;</span>\r\n\r\n<span class="token keyword">use</span> <span class="token package">think<span class="token punctuation">\\</span>Validate</span><span class="token punctuation">;</span>\r\n\r\n<span class="token keyword">class</span> <span class="token class-name">Category</span> <span class="token keyword">extends</span> <span class="token class-name">Validate</span>\r\n<span class="token punctuation">{</span>\r\n   <span class="token comment">//定义验证规则</span>\r\n   <span class="token keyword">protected</span> <span class="token variable">$rule</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\r\n      <span class="token single-quoted-string string">''cname''</span>  <span class="token operator">=</span><span class="token operator">&gt;</span>  <span class="token single-quoted-string string">''require|length:4,25''</span><span class="token punctuation">,</span>\r\n      <span class="token single-quoted-string string">''description''</span> <span class="token operator">=</span><span class="token operator">&gt;</span>  <span class="token single-quoted-string string">''email''</span><span class="token punctuation">,</span>\r\n   <span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n   <span class="token comment">//定义提示消息</span>\r\n   <span class="token keyword">protected</span> <span class="token variable">$message</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\r\n      <span class="token single-quoted-string string">''cname.require''</span>  <span class="token operator">=</span><span class="token operator">&gt;</span>  <span class="token single-quoted-string string">''栏目名必须输入''</span><span class="token punctuation">,</span>\r\n      <span class="token single-quoted-string string">''cname.length''</span>  <span class="token operator">=</span><span class="token operator">&gt;</span>  <span class="token single-quoted-string string">''栏目名称需在4-25字符''</span><span class="token punctuation">,</span>\r\n      <span class="token single-quoted-string string">''description.require''</span> <span class="token operator">=</span><span class="token operator">&gt;</span>  <span class="token single-quoted-string string">''栏目描述必须输入''</span><span class="token punctuation">,</span>\r\n   <span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>验证器中$rule来定义验证规则</p><p>一个字段如如需多个规则验证使用管道符分割</p><p>thinkphp5内置规则：<a href="https://www.kancloud.cn/manual/thinkphp5/129356" target="_blank" title="https://www.kancloud.cn/manual/thinkphp5/129356">https://www.kancloud.cn/manual/thinkphp5/129356</a></p><p>提示消息【$message】可以不定义，这时候会有默认提示消息</p><p><img src="https://wubin.pro/Upload/ueditor/image/20170815/1502804597551196.png" width="324" height="217"><img src="https://wubin.pro/Upload/ueditor/image/20170815/1502804597170214.png" width="330" height="211"></p><p>$message可自定义提示信息内容</p><p><br></p><p><span microsoft="" helvetica="" font-size:="" background-color:="">如果需要调用的验证器类【Cate.php】和当前的模型名称不一致;</span></p><p><span microsoft="" helvetica="" font-size:="" background-color:="">建议模型与对应的验证器名一致；</span></p><p><span><span>那么模型代码可以这样：</span></span></p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token keyword">namespace</span> <span class="token package">app<span class="token punctuation">\\</span>common<span class="token punctuation">\\</span>model</span><span class="token punctuation">;</span>\r\n\r\n<span class="token keyword">use</span> <span class="token package">think<span class="token punctuation">\\</span>Model</span><span class="token punctuation">;</span>\r\n\r\n<span class="token keyword">class</span> <span class="token class-name">Category</span> <span class="token keyword">extends</span> <span class="token class-name">Model</span>\r\n<span class="token punctuation">{</span>\r\n   <span class="token comment">//主键</span>\r\n   <span class="token keyword">protected</span> <span class="token variable">$pk</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''id''</span><span class="token punctuation">;</span>\r\n   <span class="token comment">//数据表，需要写表全名，如表前缀wb,那么这里需要写wb_category</span>\r\n    <span class="token keyword">protected</span> <span class="token variable">$table</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''category''</span><span class="token punctuation">;</span>\r\n\r\n    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">store</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span>\r\n    <span class="token punctuation">{</span>\r\n      <span class="token comment">//调用Cate验证器类进行数据验证</span>\r\n      <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">validate</span> <span class="token punctuation">(</span><span class="token single-quoted-string string">''Cate''</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">save</span> <span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token operator">===</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\r\n         <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token single-quoted-string string">''code''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''msg''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">getError</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n      <span class="token punctuation">}</span>\r\n      <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token single-quoted-string string">''code''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''msg''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token single-quoted-string string">''栏目添加成功''</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n    <span class="token punctuation">}</span>\r\n<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p><span><span></span></span><br></p><p>验证时候<span microsoft="" helvetica="" font-size:="" background-color:="">同样也可以支持场景验证；</span></p><p><span microsoft="" helvetica="" font-size:="" background-color:="">这时候验证器需要增加$scene在验证器中：</span></p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token keyword">namespace</span> <span class="token package">app<span class="token punctuation">\\</span>admin<span class="token punctuation">\\</span>validate</span><span class="token punctuation">;</span>\r\n\r\n<span class="token keyword">use</span> <span class="token package">think<span class="token punctuation">\\</span>Validate</span><span class="token punctuation">;</span>\r\n\r\n<span class="token keyword">class</span> <span class="token class-name">Category</span> <span class="token keyword">extends</span> <span class="token class-name">Validate</span>\r\n<span class="token punctuation">{</span>\r\n   <span class="token comment">//定义验证规则</span>\r\n   <span class="token keyword">protected</span> <span class="token variable">$rule</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\r\n      <span class="token single-quoted-string string">''cname''</span>  <span class="token operator">=</span><span class="token operator">&gt;</span>  <span class="token single-quoted-string string">''require|length:4,25''</span><span class="token punctuation">,</span>\r\n      <span class="token single-quoted-string string">''description''</span> <span class="token operator">=</span><span class="token operator">&gt;</span>  <span class="token single-quoted-string string">''email''</span><span class="token punctuation">,</span>\r\n   <span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n   <span class="token comment">//定义提示消息</span>\r\n   <span class="token keyword">protected</span> <span class="token variable">$message</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\r\n      <span class="token single-quoted-string string">''cname.require''</span>  <span class="token operator">=</span><span class="token operator">&gt;</span>  <span class="token single-quoted-string string">''栏目名必须输入''</span><span class="token punctuation">,</span>\r\n      <span class="token single-quoted-string string">''cname.length''</span>  <span class="token operator">=</span><span class="token operator">&gt;</span>  <span class="token single-quoted-string string">''栏目名称需在4-25字符''</span><span class="token punctuation">,</span>\r\n      <span class="token single-quoted-string string">''description.require''</span> <span class="token operator">=</span><span class="token operator">&gt;</span>  <span class="token single-quoted-string string">''栏目描述必须输入''</span><span class="token punctuation">,</span>\r\n   <span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n   <span class="token comment">//定义场景</span>\r\n   <span class="token keyword">protected</span> <span class="token variable">$scene</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\r\n      <span class="token single-quoted-string string">''store''</span>   <span class="token operator">=</span><span class="token operator">&gt;</span>  <span class="token punctuation">[</span><span class="token single-quoted-string string">''cname''</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''description''</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n      <span class="token single-quoted-string string">''edit''</span>  <span class="token operator">=</span><span class="token operator">&gt;</span>  <span class="token punctuation">[</span><span class="token single-quoted-string string">''description''</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n   <span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>此时模型验证时<br></p><p>可以这样使用</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token keyword">namespace</span> <span class="token package">app<span class="token punctuation">\\</span>common<span class="token punctuation">\\</span>model</span><span class="token punctuation">;</span>\r\n\r\n<span class="token keyword">use</span> <span class="token package">think<span class="token punctuation">\\</span>Model</span><span class="token punctuation">;</span>\r\n\r\n<span class="token keyword">class</span> <span class="token class-name">Category</span> <span class="token keyword">extends</span> <span class="token class-name">Model</span>\r\n<span class="token punctuation">{</span>\r\n   <span class="token comment">//主键</span>\r\n   <span class="token keyword">protected</span> <span class="token variable">$pk</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''id''</span><span class="token punctuation">;</span>\r\n   <span class="token comment">//数据表，需要写表全名，如表前缀wb,那么这里需要写wb_category</span>\r\n    <span class="token keyword">protected</span> <span class="token variable">$table</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''category''</span><span class="token punctuation">;</span>\r\n\r\n    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">store</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span>\r\n   <span class="token punctuation">{</span>\r\n      <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">validate</span> <span class="token punctuation">(</span><span class="token single-quoted-string string">''Category.store''</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">save</span> <span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token operator">===</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\r\n         <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token single-quoted-string string">''code''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''msg''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">getError</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n      <span class="token punctuation">}</span>\r\n      <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token single-quoted-string string">''code''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''msg''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token single-quoted-string string">''栏目添加成功''</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n   <span class="token punctuation">}</span>\r\n<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>这样就可以在添加验证cname和description</p><p>而在编辑时候可以调用Category.edit只验证description</p><h3>直接在模型中验证</h3><p>这个时候不需要验证器了；</p><p>不需要创建validate/Category.php了</p><p>而将代码直接写在模型中即可</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php"><span class="token keyword">namespace</span> <span class="token package">app<span class="token punctuation">\\</span>common<span class="token punctuation">\\</span>model</span><span class="token punctuation">;</span>\r\n\r\n<span class="token keyword">use</span> <span class="token package">think<span class="token punctuation">\\</span>Model</span><span class="token punctuation">;</span>\r\n\r\n<span class="token keyword">class</span> <span class="token class-name">Category</span> <span class="token keyword">extends</span> <span class="token class-name">Model</span>\r\n<span class="token punctuation">{</span>\r\n   <span class="token keyword">protected</span> <span class="token variable">$pk</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''id''</span><span class="token punctuation">;</span><span class="token comment">//主键</span>\r\n   <span class="token comment">//数据表，需要写表全名，如表前缀wb,那么这里需要写wb_category</span>\r\n    <span class="token keyword">protected</span> <span class="token variable">$table</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''category''</span><span class="token punctuation">;</span>\r\n\r\n    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">store</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span>\r\n   <span class="token punctuation">{</span>\r\n      <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">validate</span><span class="token punctuation">(</span>\r\n         <span class="token punctuation">[</span>\r\n            <span class="token single-quoted-string string">''cname''</span>  <span class="token operator">=</span><span class="token operator">&gt;</span>  <span class="token single-quoted-string string">''require|length:4,25''</span><span class="token punctuation">,</span>\r\n            <span class="token single-quoted-string string">''description''</span> <span class="token operator">=</span><span class="token operator">&gt;</span>  <span class="token single-quoted-string string">''email''</span><span class="token punctuation">,</span>\r\n         <span class="token punctuation">]</span><span class="token punctuation">,</span>\r\n         <span class="token punctuation">[</span>\r\n            <span class="token single-quoted-string string">''cname.require''</span>  <span class="token operator">=</span><span class="token operator">&gt;</span>  <span class="token single-quoted-string string">''栏目名必须输入''</span><span class="token punctuation">,</span>\r\n            <span class="token single-quoted-string string">''cname.length''</span>  <span class="token operator">=</span><span class="token operator">&gt;</span>  <span class="token single-quoted-string string">''栏目名称需在4-25字符''</span><span class="token punctuation">,</span>\r\n            <span class="token single-quoted-string string">''description.require''</span> <span class="token operator">=</span><span class="token operator">&gt;</span>  <span class="token single-quoted-string string">''栏目描述必须输入''</span><span class="token punctuation">,</span>\r\n         <span class="token punctuation">]</span>\r\n      <span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token operator">===</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\r\n         <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token single-quoted-string string">''code''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''msg''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token this">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">getError</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n      <span class="token punctuation">}</span>\r\n      <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token single-quoted-string string">''code''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''msg''</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token single-quoted-string string">''栏目添加成功''</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\r\n   <span class="token punctuation">}</span>\r\n<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>这里跟验证器其实一样的</p><p>$this-&gt;validate()中</p><p>参数1定义验证规则</p><p>参数2定义提示信息</p><p><br></p><p>个人建议使用验证器进行验证</p><p>结构比较清晰</p><p>简化模型代码</p><p>有必要情况下可以使用场景验证更为方便</p>', 459),
(140, 'thinkphp5博客项目实战视频', 100, 0, '2019-03-16 15:24:21', '/upload/20190316/5034f26bdf4967494647c305e0c8ca9e.jpg', 2, '最近有很多小伙伴在找tp5相关视频以及源码，这里将视频连接以及代码地址奉上提供大家快速入手，本视频使用think5+bootstrap+phpstorm+mamp+hdjs开发的一套完整的博客视频，其中非常详细讲解了当中知识点，有需要的拿走即可...', 'Mrs.默先森', 52, 0, '<p>最近有很多小伙伴在找tp5相关视频以及源码，这里将视频连接以及代码地址奉上提供大家快速入手，本视频使用think5+bootstrap+phpstorm+mamp+hdjs开发的一套完整的博客视频，其中非常详细讲解了当中知识点，有需要的拿走即可...</p><p><br></p><p>视频观看地址：<a href="http://www.houdunren.com/houdunren18_101_0.html" target="_blank" title="http://www.houdunren.com/houdunren18_101_0.html">http://www.houdunren.com/houdunren18_101_0.html</a></p><p>代码github地址：<a href="https://github.com/chaorenwubin/video/tree/master/thinkphp5_blog" target="_blank" title="https://github.com/chaorenwubin/video/tree/master/thinkphp5_blog">https://github.com/chaorenwubin/video/tree/master/thinkphp5_blog</a></p><p><br></p><p>完整代码中提供了前台模板和后台模板文件以及讲解时候使用的数据库文件，同一都放在doc目录中，有需要的小伙伴可以去下载使用，另外该博客系统中使用到hdjs、npm、composer等，这里一并给出参考</p><p><br></p><p>hdjs官网链接：<a href="http://hdjs.hdphp.com/261340" target="_blank" title="http://hdjs.hdphp.com/261340">http://hdjs.hdphp.com/261340</a></p><p>下载使用：</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">npm install hdjs<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>在下载过程中如果过慢可以更换淘宝镜像；</p><p>参考：<a href="http://www.wubin.pro/c/33.html" target="_blank" title="YARN,一款更优秀的javascript包管理(快速、可靠、安全的依赖管理">YARN,一款更优秀的javascript包管理(快速、可靠、安全的依赖管理)</a>中【国内镜像】<br></p><p><br></p><p>composer下载使用参考：<a href="http://www.wubin.pro/c/23.html" target="_blank" title="windows &amp; mac 下安装conposer">windows &amp; mac 下安装conposer</a></p><p>npm使用安装nodejs即可</p><div><br></div>', 367),
(141, 'thinkphp5系列之apache环境访问出现', 100, 0, '2019-03-16 15:25:44', '/upload/20190316/54a58832ab9eace2f831075a34e00a98.png', 2, '在Linux环境下使用apache，新下载的thinkphp框架，访问欢迎页面没有问题，在访问其他页面的时候会出现：No input file specified.这个其实是没有得到有效的文件路径造成的，环境中确定已经开启rewrite，这个是因为伪静态的规则造成的......', 'Mrs.默先森', 52, 0, '<p>.htaccess文件中</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">RewriteRule <span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">)</span>$ index<span class="token punctuation">.</span>php<span class="token operator">/</span><span class="token variable">$1</span> <span class="token punctuation">[</span><span class="token constant">QSA</span><span class="token punctuation">,</span><span class="token constant">PT</span><span class="token punctuation">,</span>L<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>将其修改为：</p><div class="code-toolbar"><pre class="line-numbers language-php"><code class=" language-php">RewriteRule <span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">)</span>$ index<span class="token punctuation">.</span>php<span class="token operator">?</span><span class="token operator">/</span><span class="token variable">$1</span> <span class="token punctuation">[</span><span class="token constant">QSA</span><span class="token punctuation">,</span><span class="token constant">PT</span><span class="token punctuation">,</span>L<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="toolbar"><div class="toolbar-item"><a>Copy</a></div></div></div><p>在index.php后面增加一个问号</p><p>问题即可得到解决</p>', 284),
(142, '解决laravel框架运行时报错', 100, 0, '2019-03-16 15:27:23', '/upload/20190316/c28f8ab0c5f8fb5d0ac696fc34bd732c.png', 2, '在使用laravel5.4写项目时候偶然遇到：Please provide a valid cache path这个报错问题，一个比较小的问题，分享出来有遇到的朋友可以参考进行解决，对你没用或者自己处理碰到过的朋友你直接绕过就好了...', 'Mrs.默先森', 50, 0, '<p>在使用laravel5.4写项目时候偶然遇到：Please provide a valid cache path这个报错问题，一个比较小的问题，分享出来有遇到的朋友可以参考进行解决，对你没用或者自己处理碰到过的朋友你直接绕过就好了...</p><p><br></p><p>Please provide a valid cache path</p><p>--&gt;请提供一个有效的缓存路径<img src="https://wubin.pro/Upload/ueditor/image/20170720/1500544415426056.png" alt="1500544415426056.png"></p><p><br></p><p>错误如上图；</p><p>运行框架的时候生成编译文件；</p><p>缺少了目录就会出现这个报错问题；</p><p>解决方法：确保storage/framework/views目录存在</p><p>storage目录完成结构应该如下：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;|--app<br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|--public<br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;|--framework</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|--cache<br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|--session<br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|--views<br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;|--logs</p>', 292),
(143, 'LavaLite —— 一款基于laravel 的CMS框架', 100, 0, '2019-03-16 15:30:38', '/upload/20190316/1eab5ff25c616614b9582ab7ffb373a7.png', 2, '文档地址：https://lavalite.org/docs/master/installation\r\ngithub地址：https://github.com/LavaLite/cms', 'Mrs.默先森', 50, 0, '<p><span>基本要求：</span><br><span>– PHP &gt;= 7.1</span><br><span>– OpenSSL PHP Extension</span><br><span>– PDO PHP Extension</span><br><span>– Mbstring PHP Extension</span><br><span>– Tokenizer PHP Extension</span><br><span>– Fileinfo PHP Extension</span><br><span>– GD Library</span><br><span>– Imagick PHP Extension</span></p><p></p><p>安装：<br>composer create-project LavaLite/cms –prefer-dist website<br>运行命令：<br>php artisan lavalite:install</p><p>php artisan key:generate // run this command if key not generated while installing.</p><p>后台地址：http://path-to-route-folder/public/admin<br>用户界面：<br>http://path-to-route-folder/public/user<br>User: user@lavalite.org<br>Password: user@lavalite</p><p>web页面：<br>http://path-to-route-folder/public/client<br>User: client@lavalite.org<br>Password: client@lavalite</p>', 255);
INSERT INTO `blog_article` (`arc_id`, `arc_title`, `arc_sort`, `sendtime`, `updatetime`, `arc_thumb`, `is_recycle`, `arc_digest`, `arc_author`, `cate_id`, `admin_id`, `arc_content`, `arc_click`) VALUES
(146, 'Linux系统启动过程', 100, 0, '2019-03-28 11:40:19', '/upload/20190328/aa8aa6ef4d8db66793bbc39b83dcfb2a.png', 2, 'inux启动时我们会看到许多启动信息。\r\n\r\nLinux系统的启动过程并不是大家想象中的那么复杂，其过程可以分为5个阶段：\r\n\r\n内核的引导。\r\n运行 init。\r\n系统初始化。\r\n建立终端 。\r\n用户登录系统。', 'Mrs.默先生', 53, 0, '<h1><span class="color_h1">Linux&nbsp;</span>系统启动过程</h1><p>linux启动时我们会看到许多启动信息。</p><p>Linux系统的启动过程并不是大家想象中的那么复杂，其过程可以分为5个阶段：</p><ul><li>内核的引导。</li><li>运行 init。</li><li>系统初始化。</li><li>建立终端 。</li><li>用户登录系统。</li></ul><blockquote><p>init程序的类型：</p><ul><li><strong>SysV:</strong>&nbsp;init, CentOS 5之前, 配置文件： /etc/inittab。</li><li><strong>Upstart:</strong>&nbsp;init,CentOS 6, 配置文件： /etc/inittab, /etc/init/*.conf。</li><li><strong>Systemd：</strong>&nbsp;systemd, CentOS 7,配置文件： /usr/lib/systemd/system、 /etc/systemd/system。</li></ul></blockquote><hr><h2>内核引导</h2><p>当计算机打开电源后，首先是BIOS开机自检，按照BIOS中设置的启动设备（通常是硬盘）来启动。</p><p>操作系统接管硬件以后，首先读入 /boot 目录下的内核文件。</p><p><img src="http://www.runoob.com/wp-content/uploads/2014/06/bg2013081702.png"></p><hr><h2>运行init</h2><p>init 进程是系统所有进程的起点，你可以把它比拟成系统所有进程的老祖宗，没有这个进程，系统中任何进程都不会启动。</p><p>init 程序首先是需要读取配置文件 /etc/inittab。</p><p><img src="http://www.runoob.com/wp-content/uploads/2014/06/bg2013081703.png"></p><p></p><h3>运行级别</h3><p>许多程序需要开机启动。它们在Windows叫做"服务"（service），在Linux就叫做"守护进程"（daemon）。</p><p>init进程的一大任务，就是去运行这些开机启动的程序。</p><p>但是，不同的场合需要启动不同的程序，比如用作服务器时，需要启动Apache，用作桌面就不需要。</p><p>Linux允许为不同的场合，分配不同的开机启动程序，这就叫做"运行级别"（runlevel）。也就是说，启动时根据"运行级别"，确定要运行哪些程序。</p><p><img src="http://www.runoob.com/wp-content/uploads/2014/06/bg2013081704.png"></p><p>Linux系统有7个运行级别(runlevel)：</p><ul><li>运行级别0：系统停机状态，系统默认运行级别不能设为0，否则不能正常启动</li><li>运行级别1：单用户工作状态，root权限，用于系统维护，禁止远程登陆</li><li>运行级别2：多用户状态(没有NFS)</li><li>运行级别3：完全的多用户状态(有NFS)，登陆后进入控制台命令行模式</li><li>运行级别4：系统未使用，保留</li><li>运行级别5：X11控制台，登陆后进入图形GUI模式</li><li>运行级别6：系统正常关闭并重启，默认运行级别不能设为6，否则不能正常启动</li></ul><hr><h2>系统初始化</h2><p>在init的配置文件中有这么一行： si::sysinit:/etc/rc.d/rc.sysinit　它调用执行了/etc/rc.d/rc.sysinit，而rc.sysinit是一个bash shell的脚本，它主要是完成一些系统初始化的工作，rc.sysinit是每一个运行级别都要首先运行的重要脚本。</p><p>它主要完成的工作有：激活交换分区，检查磁盘，加载硬件模块以及其它一些需要优先执行任务。</p><pre class="prettyprint prettyprinted"><span class="pln">l5</span><span class="pun">:</span><span class="lit">5</span><span class="pun">:</span><span class="pln">wait</span><span class="pun">:</span><span class="str">/etc/</span><span class="pln">rc</span><span class="pun">.</span><span class="pln">d</span><span class="pun">/</span><span class="pln">rc </span><span class="lit">5</span></pre><p>这一行表示以5为参数运行/etc/rc.d/rc，/etc/rc.d/rc是一个Shell脚本，它接受5作为参数，去执行/etc/rc.d/rc5.d/目录下的所有的rc启动脚本，/etc/rc.d/rc5.d/目录中的这些启动脚本实际上都是一些连接文件，而不是真正的rc启动脚本，真正的rc启动脚本实际上都是放在/etc/rc.d/init.d/目录下。</p><p>而这些rc启动脚本有着类似的用法，它们一般能接受start、stop、restart、status等参数。</p><p>/etc/rc.d/rc5.d/中的rc启动脚本通常是K或S开头的连接文件，对于以 S 开头的启动脚本，将以start参数来运行。</p><p>而如果发现存在相应的脚本也存在K打头的连接，而且已经处于运行态了(以/var/lock/subsys/下的文件作为标志)，则将首先以stop为参数停止这些已经启动了的守护进程，然后再重新运行。</p><p>这样做是为了保证是当init改变运行级别时，所有相关的守护进程都将重启。</p><p>至于在每个运行级中将运行哪些守护进程，用户可以通过chkconfig或setup中的"System Services"来自行设定。</p><p><img src="http://www.runoob.com/wp-content/uploads/2014/06/bg2013081705.png"></p><hr><h2>建立终端</h2><p>rc执行完毕后，返回init。这时基本系统环境已经设置好了，各种守护进程也已经启动了。</p><p>init接下来会打开6个终端，以便用户登录系统。在inittab中的以下6行就是定义了6个终端：</p><pre class="prettyprint prettyprinted"><span class="lit">1</span><span class="pun">:</span><span class="lit">2345</span><span class="pun">:</span><span class="pln">respawn</span><span class="pun">:</span><span class="str">/sbin/</span><span class="pln">mingetty tty1\r\n</span><span class="lit">2</span><span class="pun">:</span><span class="lit">2345</span><span class="pun">:</span><span class="pln">respawn</span><span class="pun">:</span><span class="str">/sbin/</span><span class="pln">mingetty tty2\r\n</span><span class="lit">3</span><span class="pun">:</span><span class="lit">2345</span><span class="pun">:</span><span class="pln">respawn</span><span class="pun">:</span><span class="str">/sbin/</span><span class="pln">mingetty tty3\r\n</span><span class="lit">4</span><span class="pun">:</span><span class="lit">2345</span><span class="pun">:</span><span class="pln">respawn</span><span class="pun">:</span><span class="str">/sbin/</span><span class="pln">mingetty tty4\r\n</span><span class="lit">5</span><span class="pun">:</span><span class="lit">2345</span><span class="pun">:</span><span class="pln">respawn</span><span class="pun">:</span><span class="str">/sbin/</span><span class="pln">mingetty tty5\r\n</span><span class="lit">6</span><span class="pun">:</span><span class="lit">2345</span><span class="pun">:</span><span class="pln">respawn</span><span class="pun">:</span><span class="str">/sbin/</span><span class="pln">mingetty tty6</span></pre><p>从上面可以看出在2、3、4、5的运行级别中都将以respawn方式运行mingetty程序，mingetty程序能打开终端、设置模式。</p><p>同时它会显示一个文本登录界面，这个界面就是我们经常看到的登录界面，在这个登录界面中会提示用户输入用户名，而用户输入的用户将作为参数传给login程序来验证用户的身份。</p><hr><h2>用户登录系统</h2><p>一般来说，用户的登录方式有三种：</p><ul><li>（1）命令行登录</li><li>（2）ssh登录</li><li>（3）图形界面登录</li></ul><p><img src="http://www.runoob.com/wp-content/uploads/2014/06/bg2013081706.png"></p><p>对于运行级别为5的图形方式用户来说，他们的登录是通过一个图形化的登录界面。登录成功后可以直接进入 KDE、Gnome 等窗口管理器。</p><p>而本文主要讲的还是文本方式登录的情况：当我们看到mingetty的登录界面时，我们就可以输入用户名和密码来登录系统了。</p><p>Linux 的账号验证程序是 login，login 会接收 mingetty 传来的用户名作为用户名参数。</p><p>然后 login 会对用户名进行分析：如果用户名不是 root，且存在 /etc/nologin 文件，login 将输出 nologin 文件的内容，然后退出。</p><p>这通常用来系统维护时防止非root用户登录。只有/etc/securetty中登记了的终端才允许 root 用户登录，如果不存在这个文件，则 root 用户可以在任何终端上登录。</p><p>/etc/usertty文件用于对用户作出附加访问限制，如果不存在这个文件，则没有其他限制。</p><hr><h2>图形模式与文字模式的切换方式</h2><p>Linux预设提供了六个命令窗口终端机让我们来登录。</p><p>默认我们登录的就是第一个窗口，也就是tty1，这个六个窗口分别为tty1,tty2 … tty6，你可以按下Ctrl + Alt + F1 ~ F6 来切换它们。</p><p>如果你安装了图形界面，默认情况下是进入图形界面的，此时你就可以按Ctrl + Alt + F1 ~ F6来进入其中一个命令窗口界面。</p><p>当你进入命令窗口界面后再返回图形界面只要按下Ctrl + Alt + F7 就回来了。</p><p>如果你用的vmware 虚拟机，命令窗口切换的快捷键为 Alt + Space + F1~F6. 如果你在图形界面下请按Alt + Shift + Ctrl + F1~F6 切换至命令窗口。</p><p><img src="http://www.runoob.com/wp-content/uploads/2014/06/bg2013081707.png"></p><hr><h2>Linux 关机</h2><p>在linux领域内大多用在服务器上，很少遇到关机的操作。毕竟服务器上跑一个服务是永无止境的，除非特殊情况下，不得已才会关机。</p><p>正确的关机流程为：sync &gt; shutdown &gt; reboot &gt; halt</p><p>关机指令为：shutdown ，你可以man shutdown 来看一下帮助文档。</p><p>例如你可以运行如下命令关机：</p><pre class="prettyprint prettyprinted"><span class="pln">sync </span><span class="pun">将数据由内存同步到硬盘中。</span><span class="pln">\r\n\r\nshutdown </span><span class="pun">关机指令，你可以</span><span class="pln">man shutdown </span><span class="pun">来看一下帮助文档。例如你可以运行如下命令关机：</span><span class="pln">\r\n\r\nshutdown </span><span class="pun">–</span><span class="pln">h </span><span class="lit">10</span><span class="pln"> </span><span class="pun">‘</span><span class="typ">This</span><span class="pln"> server will shutdown after </span><span class="lit">10</span><span class="pln"> mins</span><span class="pun">’</span><span class="pln"> </span><span class="pun">这个命令告诉大家，计算机将在</span><span class="lit">10</span><span class="pun">分钟后关机，并且会显示在登陆用户的当前屏幕中。</span><span class="pln">\r\n\r\nshutdown </span><span class="pun">–</span><span class="pln">h now </span><span class="pun">立马关机</span><span class="pln">\r\n\r\nshutdown </span><span class="pun">–</span><span class="pln">h </span><span class="lit">20</span><span class="pun">:</span><span class="lit">25</span><span class="pln"> </span><span class="pun">系统会在今天</span><span class="lit">20</span><span class="pun">:</span><span class="lit">25</span><span class="pun">关机</span><span class="pln">\r\n\r\nshutdown </span><span class="pun">–</span><span class="pln">h </span><span class="pun">+</span><span class="lit">10</span><span class="pln"> </span><span class="pun">十分钟后关机</span><span class="pln">\r\n\r\nshutdown </span><span class="pun">–</span><span class="pln">r now </span><span class="pun">系统立马重启</span><span class="pln">\r\n\r\nshutdown </span><span class="pun">–</span><span class="pln">r </span><span class="pun">+</span><span class="lit">10</span><span class="pln"> </span><span class="pun">系统十分钟后重启</span><span class="pln">\r\n\r\nreboot </span><span class="pun">就是重启，等同于</span><span class="pln"> shutdown </span><span class="pun">–</span><span class="pln">r now\r\n\r\nhalt </span><span class="pun">关闭系统，等同于</span><span class="pln">shutdown </span><span class="pun">–</span><span class="pln">h now </span><span class="pun">和</span><span class="pln"> poweroff</span></pre><p>最后总结一下，不管是重启系统还是关闭系统，首先要运行&nbsp;<strong>sync</strong>&nbsp;命令，把内存中的数据写到磁盘中。</p><p><p在分析完用户名后，login 将搜索="" etc="" passwd="" 以及="" shadow="" 来验证密码以及设置账户的其它信息，比如：主目录是什么、使用何种="" shell。如果没有指定主目录，将默认为根目录；如果没有指定="" shell，将默认为="" bin="" bash。<="" p=""></p在分析完用户名后，login></p><p>关机的命令有<span>&nbsp;</span><strong>shutdown –h now halt poweroff</strong><span>&nbsp;</span>和<strong><span>&nbsp;</span>init 0</strong><span>&nbsp;</span>, 重启系统的命令有<span>&nbsp;</span><strong>shutdown –r now reboot init 6</strong>。</p>', 201),
(147, 'Nginx', 100, 0, '2019-04-03 02:26:32', '/upload/20190403/9bfa96bf29041218e297b337f8bbf790.png', 2, 'NGINX开发的目标是实现10倍以上的性能，优化服务器资源的使用，同时也能够扩展和支持网站的动态增长。 因此，NGINX成为最知名的模块化，事件驱动，异步，单线程Web服务器和Web代理之一。', 'Mrs.默先森', 53, 0, '<p>Nginx是一个高性能的Web和反向代理服务器，它具有非常优越的特性：</p><p><strong>作为 Web 服务器</strong>：&nbsp;相比Apache,Nginx使用更少的资源，支持更多的并发链接，体现更高的效率这点使 Nginx 尤其受到虚拟主机提供商的欢迎。能够支持高达 50,000 个并发连接数的响应，感谢 Nginx 为我们选择了 epoll and kqueue 作为开发模型.</p><div><p><strong>作为负载均衡服务器</strong>：Nginx 既可以在内部直接支持 Rails 和 PHP，也可以支持作为 HTTP代理服务器 对外进行服务。Nginx 用 C 编写, 不论是系统资源开销还是 CPU 使用效率都比 Perlbal 要好的多。</p>\r\n<p><strong>作为邮件代理服务器</strong>: Nginx 同时也是一个非常优秀的邮件代理服务器(最早开发这个产品的目的之一也是作为邮件代理服务器)，Last.fm 描述了成功并且美妙的使用经验。</p>\r\n<p>Nginx 安装非常的简单，配置文件 非常简洁(还能够支持perl语法)，Bugs非常少的服务器: Nginx 启动特别容易，并且几乎可以做到7*24不间断运行，即使运行数个月也不需要重新启动。你还能够在 不间断服务的情况下进行软件版本的升级。</p><div><p>当前信息时代，哪里都是应用程序。这些应用程序们不仅仅是运行人们工作场所的工具 - 它们现在正在经营人们的生活。 对即时响应的需求，完美的行为和更多的功能是前所未有的。 而且，当然，人们期望应用程序在不同类型的设备上运行平稳，特别是在移动设备上。 应用程序执行的速度与它所做的一样重要。</p>\r\n<p>NGINX的核心功能，例如其具有高性能HTTP和反向代理服务器的大规模可扩展事件驱动架构，访问和带宽控制以及与各种应用程序高效集成的能力，有助于使其成为任何网站或服务需要性能，可扩展性和可靠性。</p>\r\n<p>比如说，使用其它传统服务器软件，每个客户端连接作为一个单独的进程或线程处理，随着网站的流行度增加，并发连接数量的增加，Web服务器减慢，延迟了对用户的响应，到了最后实在撑不下去了，服务器软件响应不过来或死掉了，网站或应用程序也挂了。</p>\r\n<p>所以说像NGINX这样一个可扩展性和可靠性的服务器软件，<strong>简单耐操</strong>，实在没有什么好的理由拒绝使用它。</p><p><span>nginx架构</span></p><div><h2 id="h2-u4EE3u7801u7ED3u6784">代码结构</h2><p>nginx工作(<code>worker</code>)码包括核心和功能模块。 nginx的核心是负责维护严格的运行循环，并在请求处理的每个阶段执行模块代码的适当部分。 模块构成了大部分的演示和应用层功能。 模块读取和写入网络和存储，转换内容，执行出站过滤，应用服务器端包含操作，并在代理启动时将请求传递给上游服务器。</p>\r\n<p>nginx的模块化架构通常允许开发人员扩展一组Web服务器功能，而无需修改nginx内核。 nginx模块略有不同，即核心模块，事件模块，阶段处理程序，协议，可变处理程序，过滤器，上游和负载平衡器。nginx不支持动态加载的模块; 即在构建阶段将模块与核心一起编译。</p>\r\n<p>在处理与接受，处理和管理网络连接和内容检索相关的各种操作时，nginx在基于Linux，Solaris和BSD的操作系统中使用事件通知机制和一些磁盘I/O性能增强，如：kqueue，epoll， 和事件端口。 目标是为操作系统提供尽可能多的提示，以便及时获取入站和出站流量，磁盘操作，读取或写入套接字，超时等异步反馈。 对于每个基于Unix的nginx运行的操作系统，大量优化了复用和高级I/O操作的不同方法的使用。</p>\r\n<p>nginx架构的高级概述如下图所示 -</p>\r\n<p><img src="http://www.yiibai.com/uploads/images/201703/3103/779160327_11209.png" alt=""></p>\r\n<h2 id="h2-u5DE5u4F5Cu6A21u5F0F"><a name="工作模式" class="reference-link"></a><span class="header-link octicon octicon-link"></span>工作模式</h2><p>如前所述，nginx不会为每个连接生成一个进程或线程。 相反，工作(<code>worker</code>)进程接受来自共享“listen”套接字的新请求，并在每个工作(<code>worker</code>)内执行高效的运行循环，以处理每个工作(<code>worker</code>)中的数千个连接。 没有专门的仲裁或分配与nginx工作(<code>worker</code>)的联系; 这个工作(<code>worker</code>)是由操作系统内核机制完成的。 启动后，将创建一组初始侦听套接字。 然后，工作(<code>worker</code>)在处理HTTP请求和响应时不断接受，读取和写入套接字。</p>\r\n<p>运行循环是nginx工作(<code>worker</code>)代码中最复杂的部分。 它包括全面的内部调用，并且在很大程度上依赖异步任务处理的想法。 异步操作通过模块化，事件通知，广泛使用回调函数和微调定时器来实现。 总体而言，关键原则是尽可能不阻塞。 nginx仍然可以阻塞的唯一情况是工作(<code>worker</code>)进程没有足够的磁盘存储。</p>\r\n<p>由于nginx不会连接一个进程或线程，所以在绝大多数情况下，内存使用非常保守，非常有效。 nginx也节省CPU周期，因为进程或线程没有持续的创建 - 销毁模式。 nginx的作用是检查网络和存储的状态，初始化新连接，将其添加到运行循环中，并异步处理直到完成，此时连接被重新分配并从运行循环中删除。 结合仔细使用系统调用(<code>syscall</code>)和精确实现支持接口(如<code>pool</code>和<code>slab</code>内存分配器)，nginx通常可以在极端工作负载下实现中到低的CPU使用。</p>\r\n<p>在一些磁盘使用和CPU负载模式，应调整nginx工作(<code>worker</code>)的数量。 在这里说一点基础规则：系统管理员应该为其工作负载尝试几个配置。 一般建议可能如下：如果负载模式是CPU密集型的，例如，处理大量TCP/IP，执行SSL或压缩，则nginx工作(<code>worker</code>)的数量应与CPU内核数量相匹配; 如果负载大多是磁盘I/O绑定，例如，从存储或重代理服务不同的内容集合 - 工作(<code>worker</code>)的数量可能是核心数量的一到两倍。有些工程师会根据个人存储单元的数量选择工作(<code>worker</code>)的数量，但这种方法的效率取决于磁盘存储的类型和配置。</p>\r\n<p>nginx的开发人员将在即将推出的版本中解决的一个主要问题是如何避免磁盘I/O上的大多数阻塞。 目前，如果没有足够的存储性能来提供特定工作(<code>worker</code>)生成的磁盘操作，该工作(<code>worker</code>)可能仍然阻止从磁盘读取/写入。 存在许多机制和配置文件指令来减轻此类磁盘I/O阻塞情况。要注意的是，诸如：sendfile和AIO之类的选项的组合通常会为磁盘性能带来很大的余量。 应该根据数据集，可用于nginx的内存量和底层存储架构来规划安装一个nginx服务器。</p>\r\n<p>现有工作(<code>worker</code>)模式的另一个问题是与嵌入式脚本的有限支持有关。 一个使用标准的nginx分发，只支持嵌入Perl脚本。一个简单的解释：关键问题是嵌入式脚本阻止任何操作或意外退出的可能性。 这两种类型的行为将立即导致工作(<code>worker</code>)挂起的情况，同时影响到数千个连接。 更多的工作(<code>worker</code>)计划是使nginx的嵌入式脚本更简单，更可靠，适用于更广泛的应用。</p>\r\n<h2 id="h2-nginx-"><a name="nginx进程角色" class="reference-link"></a><span class="header-link octicon octicon-link"></span>nginx进程角色</h2><p>nginx在内存中运行多个进程; 有一个主进程和几个工作(<code>worker</code>)进程。 还有一些特殊用途的过程，特别是缓存加载器和缓存管理器。 所有进程都是单线程版本为<code>1.x</code>的nginx。 所有进程主要使用共享内存机制进行进程间通信。主进程作为<code>root</code>用户运行。 缓存加载器，缓存管理器和工作(<code>worker</code>)则以无权限用户运行。</p>\r\n<p><strong>主程序负责以下任务：</strong></p>\r\n<ul>\r\n<li>读取和验证配置</li><li>创建，绑定和关闭套接字</li><li>启动，终止和维护配置的工作(<code>worker</code>)进程数</li><li>重新配置，无需中断服务</li><li>控制不间断的二进制升级(如果需要，启动新的二进制并回滚)</li><li>重新打开日志文件</li><li>编译嵌入式Perl脚本</li></ul>\r\n<p>工作(<code>worker</code>)进程接受，处理和处理来自客户端的连接，提供反向代理和过滤功能，并执行几乎所有其他的nginx能力。 关于监视nginx实例的行为，系统管理员应该关注工作(<code>worker</code>)进程，因为它们是反映Web服务器实际日常操作的过程。</p>\r\n<p>缓存加载器进程负责检查磁盘缓存项目，并使用缓存元数据填充nginx的内存数据库。 本质上，缓存加载器准备nginx实例来处理已经存储在磁盘上的特定分配的目录结构中的文件。 它遍历目录，检查缓存内容元数据，更新共享内存中的相关条目，然后在所有内容清洁并准备使用时退出。<br>缓存管理器主要负责缓存到期和无效。 在正常的nginx操作期间它保持在内存中，并且在失败的情况下由主进程重新启动。</p>\r\n<h2 id="h2-nginx-"><a name="nginx缓存简介" class="reference-link"></a><span class="header-link octicon octicon-link"></span>nginx缓存简介</h2><p>在nginx中的缓存以文件系统上的分层数据存储的形式实现。 缓存密钥是可配置的，并且可以使用不同的请求特定参数来控制进入缓存的内容。 缓存密钥和缓存元数据存储在共享存储器段中，高速缓存加载器，缓存管理器和工作(<code>worker</code>)可以访问它们。 目前，除了操作系统的虚拟文件系统机制暗示的优化之外，没有任何内存中的文件缓存。 每个缓存的响应都放在文件系统上的不同文件中。 层次结构(级别和命名细节)通过nginx配置指令进行控制。 当响应写入缓存目录结构时，文件的路径和名称将从代理URL的MD5哈希导出。</p>\r\n<p>将内容放置在缓存中的过程如下：当nginx从上游服务器读取响应时，内容首先写入缓存目录结构之外的临时文件。 当nginx完成处理请求时，它重命名临时文件并将其移动到缓存目录。 如果用于代理的临时文件目录位于另一个文件系统上，则该文件将被复制，因此建议将临时文件目录和缓存目录保存在同一文件系统上。 当需要显式清除缓存目录结构时，从文件中删除文件也是非常安全的。 nginx有第三方扩展，可以远程控制缓存的内容，还有更多的工作计划将此功能集成到主分发中。</p><br><br></div><br></div><br></div><div><br></div>', 13),
(148, 'Nginx主要应用场景', 100, 0, '2019-04-03 05:49:20', '/upload/20190403/f6f5806dd8022a0dc8498e4413c23bc8.png', 2, '本文只针对Nginx在不加载第三方模块的情况能处理哪些事情，由于第三方模块太多所以也介绍不完，当然本文本身也可能介绍的不完整，这里是根据个人使用过和了解到过总结出来的。所以还请见谅，同时欢迎留言交流。', 'Mrs.默先森', 61, 0, '<div><h2 id="h2-nginx-">Nginx能做什么？</h2><ol>\r\n<li>1.反向代理</li><li>2.负载均衡</li><li>3.HTTP服务器(包含动静分离)</li><li>4.正向代理</li></ol>\r\n<p>以上就是我了解到的Nginx在不依赖第三方模块能处理的事情，下面详细说明每种功能怎么做</p>\r\n<h2 id="h2-1-"><a name="1. 反向代理" class="reference-link"></a><span class="header-link octicon octicon-link"></span>1. 反向代理</h2><p>反向代理应该是Nginx做的最多的一件事了，什么是反向代理呢，以下是百度百科的说法：反向代理(Reverse Proxy)方式是指以代理服务器来接受internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给internet上请求连接的客户端，此时代理服务器对外就表现为一个反向代理服务器。简单来说就是真实的服务器不能直接被外部网络访问，所以需要一台代理服务器，而代理服务器能被外部网络访问的同时又跟真实服务器在同一个网络环境，当然也可能是同一台服务器，端口不同而已。 </p>\r\n<p>下面贴上一段简单的实现反向代理的代码 - </p>\r\n<pre class="language-shell code-toolbar"><code class=" language-shell">server {  \r\n        listen       80;                                                        \r\n        server_name  localhost;                                              \r\n        client_max_body_size 1024M;\r\n\r\n        location / {\r\n            proxy_pass http://localhost:8080;\r\n            proxy_set_header Host $host:$server_port;\r\n        }\r\n}\r\n</code><div class="toolbar"><div class="toolbar-item">Shell</div></div></pre>\r\n<p>保存配置文件后启动Nginx，这样当我们访问localhost的时候，就相当于访问 localhost:8080 了。</p>\r\n<h2 id="h2-2-"><a name="2. 负载均衡" class="reference-link"></a><span class="header-link octicon octicon-link"></span>2. 负载均衡</h2><p>负载均衡也是Nginx常用的一个功能，负载均衡其意思就是分摊到多个操作单元上进行执行，例如Web服务器、FTP服务器、企业关键应用服务器和其它关键任务服务器等，从而共同完成工作任务。简单而言就是当有2台或以上服务器时，根据规则随机的将请求分发到指定的服务器上处理，负载均衡配置一般都需要同时配置反向代理，通过反向代理跳转到负载均衡。而Nginx目前支持自带3种负载均衡策略，还有2种常用的第三方策略。</p>\r\n<p><strong>1、RR(默认)</strong></p>\r\n<p>每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器<code>down</code>掉，能自动剔除。</p>\r\n<pre class="language-shell code-toolbar"><code class=" language-shell">    upstream test {\r\n        server localhost:8080;\r\n        server localhost:8081;\r\n    }\r\n    server {\r\n        listen       81;                                                        \r\n        server_name  localhost;                                              \r\n        client_max_body_size 1024M;\r\n\r\n        location / {\r\n            proxy_pass http://test;\r\n            proxy_set_header Host $host:$server_port;\r\n        }\r\n    }\r\n</code><div class="toolbar"><div class="toolbar-item">Shell</div></div></pre>\r\n<p>负载均衡的核心代码为 - </p>\r\n<pre class="language-shell code-toolbar"><code class=" language-shell">    upstream test {\r\n        server localhost:8080;\r\n        server localhost:8081;\r\n    }\r\n</code><div class="toolbar"><div class="toolbar-item">Shell</div></div></pre>\r\n<p>这里配置了2台服务器，当然实际上是一台，只是端口不一样而已，而8081的服务器是不存在的,也就是说访问不到，但是我们访问 <a href="http://localhost">http://localhost</a> 的时候,也不会有问题，会默认跳转到 <a href="http://localhost:8080">http://localhost:8080</a> 具体是因为Nginx会自动判断服务器的状态，如果服务器处于不能访问(服务器挂了)，就不会跳转到这台服务器，所以也避免了一台服务器挂了影响使用的情况，由于Nginx默认是RR策略，所以我们不需要其他更多的设置。</p>\r\n<p><strong>2、权重</strong></p>\r\n<p>指定轮询几率，weight和访问比率成正比，用于后端服务器性能不均的情况。 例如</p>\r\n<pre class="language-shell code-toolbar"><code class=" language-shell">    upstream test {\r\n        server localhost:8080 weight=9;\r\n        server localhost:8081 weight=1;\r\n    }\r\n</code><div class="toolbar"><div class="toolbar-item">Shell</div></div></pre>\r\n<p>那么<code>10</code>次一般只会有<code>1</code>次会访问到<code>8081</code>，而有<code>9</code>次会访问到<code>8080</code> -</p>\r\n<p><strong>3、ip_hash</strong></p>\r\n<p>上面的<code>2</code>种方式都有一个问题，那就是下一个请求来的时候请求可能分发到另外一个服务器，当我们的程序不是无状态的时候(采用了session保存数据)，这时候就有一个很大的很问题了，比如把登录信息保存到了session中，那么跳转到另外一台服务器的时候就需要重新登录了，所以很多时候我们需要一个客户只访问一个服务器，那么就需要用iphash了，iphash的每个请求按访问ip的hash结果分配，这样每个访客固定访问一个后端服务器，可以解决session的问题。</p>\r\n<pre class="language-shell code-toolbar"><code class=" language-shell">    upstream test {\r\n        ip_hash;\r\n        server localhost:8080;\r\n        server localhost:8081;\r\n    }\r\n</code><div class="toolbar"><div class="toolbar-item">Shell</div></div></pre>\r\n<p><strong>4、fair(第三方)</strong></p>\r\n<p>按后端服务器的响应时间来分配请求，响应时间短的优先分配。</p>\r\n<pre class="language-shell code-toolbar"><code class=" language-shell"> upstream backend {\r\n        fair;\r\n        server localhost:8080;\r\n        server localhost:8081;\r\n    }\r\n</code><div class="toolbar"><div class="toolbar-item">Shell</div></div></pre>\r\n<p><strong>5、url_hash(第三方)</strong></p>\r\n<p>按访问url的hash结果来分配请求，使每个url定向到同一个后端服务器，后端服务器为缓存时比较有效。 在upstream中加入hash语句，server语句中不能写入weight等其他的参数，hash_method是使用的hash算法</p>\r\n<pre class="language-shell code-toolbar"><code class=" language-shell">    upstream backend {\r\n        hash $request_uri;\r\n        hash_method crc32;\r\n        server localhost:8080;\r\n        server localhost:8081;\r\n    }\r\n</code><div class="toolbar"><div class="toolbar-item">Shell</div></div></pre>\r\n<p>以上5种负载均衡各自适用不同情况下使用，所以可以根据实际情况选择使用哪种策略模式,不过fair和url_hash需要安装第三方模块才能使用，由于本文主要介绍Nginx能做的事情，所以Nginx安装第三方模块不会再本文介绍</p>\r\n<h2 id="h2-3-http-"><a name="3. HTTP服务器" class="reference-link"></a><span class="header-link octicon octicon-link"></span>3. HTTP服务器</h2><p>Nginx本身也是一个静态资源的服务器，当只有静态资源的时候，就可以使用Nginx来做服务器，同时现在也很流行动静分离，就可以通过Nginx来实现，首先看看Nginx做静态资源服务器</p>\r\n<pre class="language-shell code-toolbar"><code class=" language-shell">    server {\r\n        listen       80;                                                        \r\n        server_name  localhost;                                              \r\n        client_max_body_size 1024M;\r\n\r\n\r\n        location / {\r\n               root   E:/wwwroot;\r\n               index  index.html;\r\n           }\r\n    }\r\n</code><div class="toolbar"><div class="toolbar-item">Shell</div></div></pre>\r\n<p>这样如果访问 <a href="http://localhost">http://localhost</a> 就会默认访问到<code>E</code>盘<code>wwwroot</code>目录下面的<code>index.html</code>，如果一个网站只是静态页面的话，那么就可以通过这种方式来实现部署。</p>\r\n<h2 id="h2-4-"><a name="4. 动静分离" class="reference-link"></a><span class="header-link octicon octicon-link"></span>4. 动静分离</h2><p>动静分离是让动态网站里的动态网页根据一定规则把不变的资源和经常变的资源区分开来，动静资源做好了拆分以后，我们就可以根据静态资源的特点将其做缓存操作，这就是网站静态化处理的核心思路。</p>\r\n<pre class="language-shell code-toolbar"><code class=" language-shell">upstream test{  \r\n       server localhost:8080;  \r\n       server localhost:8081;  \r\n    }  \r\n\r\n    server {  \r\n        listen       80;  \r\n        server_name  localhost;  \r\n\r\n        location / {  \r\n            root   e:/wwwroot;  \r\n            index  index.html;  \r\n        }  \r\n\r\n        # 所有静态请求都由nginx处理，存放目录为html  \r\n        location ~ .(gif|jpg|jpeg|png|bmp|swf|css|js)$ {  \r\n            root    e:/wwwroot;  \r\n        }  \r\n\r\n        # 所有动态请求都转发给tomcat处理  \r\n        location ~ .(jsp|do)$ {  \r\n            proxy_pass  http://test;  \r\n        }  \r\n\r\n        error_page   500 502 503 504  /50x.html;  \r\n        location = /50x.html {  \r\n            root   e:/wwwroot;  \r\n        }  \r\n    }\r\n</code><div class="toolbar"><div class="toolbar-item">Shell</div></div></pre>\r\n<p>这样我们就可以吧HTML以及图片和css以及js放到wwwroot目录下，而tomcat只负责处理jsp和请求，例如当我们后缀为gif的时候，Nginx默认会从wwwroot获取到当前请求的动态图文件返回，当然这里的静态文件跟Nginx是同一台服务器，我们也可以在另外一台服务器，然后通过反向代理和负载均衡配置过去就好了，只要搞清楚了最基本的流程，很多配置就很简单了，另外localtion后面其实是一个正则表达式，所以非常灵活</p>\r\n<h2 id="h2-5-"><a name="5. 正向代理" class="reference-link"></a><span class="header-link octicon octicon-link"></span>5. 正向代理</h2><p>正向代理，意思是一个位于客户端和原始服务器(origin server)之间的服务器，为了从原始服务器取得内容，客户端向代理发送一个请求并指定目标(原始服务器)，然后代理向原始服务器转交请求并将获得的内容返回给客户端。客户端才能使用正向代理。当你需要把你的服务器作为代理服务器的时候，可以用Nginx来实现正向代理，但是目前Nginx有一个问题，那么就是不支持HTTPS，虽然我百度到过配置HTTPS的正向代理，但是到最后发现还是代理不了，当然可能是我配置的不对，所以也希望有知道正确方法的同志们留言说明一下。</p>\r\n<pre class="language-shell code-toolbar"><code class=" language-shell">\r\n    resolver 114.114.114.114 8.8.8.8;\r\n    server {\r\n\r\n        resolver_timeout 5s;\r\n\r\n        listen 81;\r\n\r\n        access_log  e:/wwwrootproxy.access.log;\r\n        error_log   e:/wwwrootproxy.error.log;\r\n\r\n        location / {\r\n            proxy_pass http://$host$request_uri;\r\n        }\r\n    }\r\n</code><div class="toolbar"><div class="toolbar-item">Shell</div></div></pre>\r\n<p>resolver是配置正向代理的DNS服务器，listen 是正向代理的端口，配置好了就可以在ie上面或者其他代理插件上面使用服务器ip+端口号进行代理了。</p>\r\n<p>Nginx是支持热启动的，也就是说当我们修改配置文件后，不用关闭Nginx，就可以实现让配置生效，当然我并不知道多少人知道这个，反正我一开始并不知道，导致经常杀死了Nginx线程再来启动。。。Nginx从新读取配置的命令是 - </p>\r\n<pre class="language-shell code-toolbar"><code class=" language-shell">nginx -s reload\r\n</code><div class="toolbar"><div class="toolbar-item">Shell</div></div></pre>\r\n<p>windows下面就是</p>\r\n<pre class="language-shell code-toolbar"><code class=" language-shell">nginx.exe -s reload</code></pre></div>', 9),
(149, 'PHP中常见的状态码', 100, 0, '2019-04-04 06:07:34', '/upload/20190404/45ae1e02c7b973d79e6637ff7935e1b4.jpg', 2, 'php 中常见的状态码统一罗列一下，省的以后查询百度，有需要可以保存着。', 'Mrs.默先森', 44, 0, '<h1 class="postTitle"><a id="cb_post_title_url" class="postTitle2" href="https://www.cnblogs.com/xiaohua1/p/7011019.html">php 状态码</a></h1><div class="clear"></div><div class="postBody"><div id="cnblogs_post_body" class="blogpost-body"><div class="articalContent   "><p>200&nbsp;<span>–&nbsp;服务器成功返回网页</span></p><p>301&nbsp;<span>（永久移动）&nbsp;请求的网页已永久移动到新位置。&nbsp;服务器返回此响应（对&nbsp;</span><span>GET&nbsp;</span><span>或&nbsp;</span><span>HEAD&nbsp;</span><span>请求的响应）时，会自动将请求者转到新位置。</span></p><p>403&nbsp;<span>（禁止）&nbsp;服务器拒绝请求</span></p><p>404&nbsp;<span>–&nbsp;请求的网页不存在</span></p><p>503&nbsp;<span>–&nbsp;服务不可用</span></p><p>常见<span>HTTP</span><span>状态码大全</span></p><p>1xx<span>（临时响应）</span></p><p>表示临时响应并需要请求者继续执行操作的状态代码。</p><p>代码&nbsp;说明</p><p>http<span>状态码&nbsp;</span><span>100&nbsp;</span><span>（继续）&nbsp;请求者应当继续提出请求。&nbsp;服务器返回此代码表示已收到请求的第一部分，正在等待其余部分。</span></p><p>http<span>状态码&nbsp;</span><span>101&nbsp;</span><span>（切换协议）&nbsp;请求者已要求服务器切换协议，服务器已确认并准备切换。</span></p><p>2xx&nbsp;<span>（成功）</span></p><p>表示成功处理了请求的状态代码。</p><p>代码&nbsp;说明</p><p>http<span>状态码&nbsp;</span><span>200&nbsp;</span><span>（成功）&nbsp;服务器已成功处理了请求。&nbsp;通常，这表示服务器提供了请求的网页。</span></p><p>http<span>状态码&nbsp;</span><span>201&nbsp;</span><span>（已创建）&nbsp;请求成功并且服务器创建了新的资源。</span></p><p>http<span>状态码&nbsp;</span><span>202&nbsp;</span><span>（已接受）&nbsp;服务器已接受请求，但尚未处理。</span></p><p>http<span>状态码&nbsp;</span><span>203&nbsp;</span><span>（非授权信息）&nbsp;服务器已成功处理了请求，但返回的信息可能来自另一来源。</span></p><p>http<span>状态码&nbsp;</span><span>204&nbsp;</span><span>（无内容）&nbsp;服务器成功处理了请求，但没有返回任何内容。</span></p><p>http<span>状态码&nbsp;</span><span>205&nbsp;</span><span>（重置内容）&nbsp;服务器成功处理了请求，但没有返回任何内容。</span></p><p>http<span>状态码&nbsp;</span><span>206&nbsp;</span><span>（部分内容）&nbsp;服务器成功处理了部分&nbsp;</span><span>GET&nbsp;</span><span>请求。</span></p><p>3xx&nbsp;<span>（重定向）</span></p><p>表示要完成请求，需要进一步操作。&nbsp;通常，这些状态代码用来重定向。</p><p>代码&nbsp;说明</p><p>http<span>状态码&nbsp;</span><span>300&nbsp;</span><span>（多种选择）&nbsp;针对请求，服务器可执行多种操作。&nbsp;服务器可根据请求者&nbsp;</span><span>(user&nbsp;agent)&nbsp;</span><span>选择一项操作，或提供操作列表供请求者选择。</span></p><p>http<span>状态码&nbsp;</span><span>301&nbsp;</span><span>（永久移动）&nbsp;请求的网页已永久移动到新位置。&nbsp;服务器返回此响应（对&nbsp;</span><span>GET&nbsp;</span><span>或&nbsp;</span><span>HEAD&nbsp;</span><span>请求的响应）时，会自动将请求者转到新位置。</span></p><p>http<span>状态码&nbsp;</span><span>302&nbsp;</span><span>（临时移动）&nbsp;服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。</span></p><p>http<span>状态码&nbsp;</span><span>303&nbsp;</span><span>（查看其他位置）&nbsp;请求者应当对不同的位置使用单独的&nbsp;</span><span>GET&nbsp;</span><span>请求来检索响应时，服务器返回此代码。</span></p><p>http<span>状态码&nbsp;</span><span>304&nbsp;</span><span>（未修改）&nbsp;自从上次请求后，请求的网页未修改过。&nbsp;服务器返回此响应时，不会返回网页内容。</span></p><p>http<span>状态码&nbsp;</span><span>305&nbsp;</span><span>（使用代理）&nbsp;请求者只能使用代理访问请求的网页。&nbsp;如果服务器返回此响应，还表示请求者应使用代理。</span></p><p>http<span>状态码&nbsp;</span><span>307&nbsp;</span><span>（临时重定向）&nbsp;服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。</span></p><p>4xx<span>（请求错误）</span></p><p>这些状态代码表示请求可能出错，妨碍了服务器的处理。</p><p>代码&nbsp;说明</p><p>http<span>状态码&nbsp;</span><span>400&nbsp;</span><span>（错误请求）&nbsp;服务器不理解请求的语法。</span></p><p>http<span>状态码&nbsp;</span><span>401&nbsp;</span><span>（未授权）&nbsp;请求要求身份验证。&nbsp;对于需要登录的网页，服务器可能返回此响应。</span></p><p>http<span>状态码&nbsp;</span><span>403&nbsp;</span><span>（禁止）&nbsp;服务器拒绝请求。</span></p><p>http<span>状态码&nbsp;</span><span>404&nbsp;</span><span>（未找到）&nbsp;服务器找不到请求的网页。</span></p><p>http<span>状态码&nbsp;</span><span>405&nbsp;</span><span>（方法禁用）&nbsp;禁用请求中指定的方法。</span></p><p>http<span>状态码&nbsp;</span><span>406&nbsp;</span><span>（不接受）&nbsp;无法使用请求的内容特性响应请求的网页。</span></p><p>http<span>状态码&nbsp;</span><span>407&nbsp;</span><span>（需要代理授权）&nbsp;此状态代码与&nbsp;</span><span>401</span><span>（未授权）类似，但指定请求者应当授权使用代理。</span></p><p>http<span>状态码&nbsp;</span><span>408&nbsp;</span><span>（请求超时）&nbsp;服务器等候请求时发生超时。</span></p><p>http<span>状态码&nbsp;</span><span>409&nbsp;</span><span>（冲突）&nbsp;服务器在完成请求时发生冲突。&nbsp;服务器必须在响应中包含有关冲突的信息。</span></p><p>http<span>状态码&nbsp;</span><span>410&nbsp;</span><span>（已删除）&nbsp;如果请求的资源已永久删除，服务器就会返回此响应。</span></p><p>http<span>状态码&nbsp;</span><span>411&nbsp;</span><span>（需要有效长度）&nbsp;服务器不接受不含有效内容长度标头字段的请求。</span></p><p>http<span>状态码&nbsp;</span><span>412&nbsp;</span><span>（未满足前提条件）&nbsp;服务器未满足请求者在请求中设置的其中一个前提条件。</span></p><p>http<span>状态码&nbsp;</span><span>413&nbsp;</span><span>（请求实体过大）&nbsp;服务器无法处理请求，因为请求实体过大，超出服务器的处理能力。</span></p><p>http<span>状态码&nbsp;</span><span>414&nbsp;</span><span>（请求的&nbsp;</span><span>URI&nbsp;</span><span>过长）&nbsp;请求的&nbsp;</span><span>URI</span><span>（通常为网址）过长，服务器无法处理。</span></p><p>http<span>状态码&nbsp;</span><span>415&nbsp;</span><span>（不支持的媒体类型）&nbsp;请求的格式不受请求页面的支持。</span></p><p>http<span>状态码&nbsp;</span><span>416&nbsp;</span><span>（请求范围不符合要求）&nbsp;如果页面无法提供请求的范围，则服务器会返回此状态代码。</span></p><p>http<span>状态码&nbsp;</span><span>417&nbsp;</span><span>（未满足期望值）&nbsp;服务器未满足”期望”请求标头字段的要求。</span></p><p>5xx<span>（服务器错误）</span></p><p>这些状态代码表示服务器在尝试处理请求时发生内部错误。&nbsp;这些错误可能是服务器本身的错误，而不是请求出错。</p><p>代码&nbsp;说明</p><p>http<span>状态码&nbsp;</span><span>500&nbsp;</span><span>（服务器内部错误）&nbsp;服务器遇到错误，无法完成请求。</span></p><p>http<span>状态码&nbsp;</span><span>501&nbsp;</span><span>（尚未实施）&nbsp;服务器不具备完成请求的功能。&nbsp;例如，服务器无法识别请求方法时可能会返回此代码。</span></p><p>http<span>状态码&nbsp;</span><span>502&nbsp;</span><span>（错误网关）&nbsp;服务器作为网关或代理，从上游服务器收到无效响应。</span></p><p>http<span>状态码&nbsp;</span><span>503&nbsp;</span><span>（服务不可用）&nbsp;服务器目前无法使用（由于超载或停机维护）。&nbsp;通常，这只是暂时状态。</span></p><p>http<span>状态码&nbsp;</span><span>504&nbsp;</span><span>（网关超时）&nbsp;服务器作为网关或代理，但是没有及时从上游服务器收到请求。</span></p><p>http<span>状态码&nbsp;</span><span>505&nbsp;</span><span>（</span><span>HTTP&nbsp;</span><span>版本不受支持）&nbsp;服务器不支持请求中所用的&nbsp;</span><span>HTTP&nbsp;</span><span>协议版本。</span></p></div></div></div>', 9),
(150, 'HTTP 协议中的 Transfer-Encoding', 100, 0, '2019-04-04 06:57:55', '/upload/20190404/2fa9cd679e087a6b72b19052496e55d0.png', 2, '本文作为我的博客「HTTP 相关」专题新的一篇，主要讨论 HTTP 协议中的 Transfer-Encoding。这个专题我会根据自己的理解，以尽量通俗的讲述，结合代码示例和实际场景来说明问题，欢迎大家关注和留言交流。', 'Mrs.默先森', 57, 0, '<h1 id="http-协议中的-transfer-encoding">HTTP 协议中的 Transfer-Encoding</h1><p><br></p><p>Transfer-Encoding，是一个 HTTP 头部字段，字面意思是「传输编码」。实际上，HTTP 协议中还有另外一个头部与编码有关：Content-Encoding（内容编码）。Content-Encoding 通常用于对实体内容进行压缩编码，目的是优化传输，例如用 gzip 压缩文本文件，能大幅减小体积。内容编码通常是选择性的，例如 jpg / png 这类文件一般不开启，因为图片格式已经是高度压缩过的，再压一遍没什么效果不说还浪费 CPU。</p><p>而 Transfer-Encoding 则是用来改变报文格式，它不但不会减少实体内容传输大小，甚至还会使传输变大，那它的作用是什么呢？本文接下来主要就是讲这个。我们先记住一点，Content-Encoding 和 Transfer-Encoding 二者是相辅相成的，对于一个 HTTP 报文，很可能同时进行了内容编码和传输编码。</p><h3 id="persistent-connection"><a name="t1"></a>Persistent Connection</h3><p>暂时把 Transfer-Encoding 放一边，我们来看 HTTP 协议中另外一个重要概念：Persistent Connection（持久连接，通俗说法长连接）。我们知道 HTTP 运行在 TCP 连接之上，自然也有着跟 TCP 一样的三次握手、慢启动等特性，为了尽可能的提高 HTTP 性能，使用持久连接就显得尤为重要了。为此，HTTP 协议引入了相应的机制。</p><p>HTTP/1.0 的持久连接机制是后来才引入的，通过&nbsp;<code>Connection: keep-alive</code>&nbsp;这个头部来实现，服务端和客户端都可以使用它告诉对方在发送完数据之后不需要断开 TCP 连接，以备后用。HTTP/1.1 则规定所有连接都必须是持久的，除非显式地在头部加上&nbsp;<code>Connection: close</code>。所以实际上，HTTP/1.1 中 Connection 这个头部字段已经没有 keep-alive 这个取值了，但由于历史原因，很多 Web Server 和浏览器，还是保留着给 HTTP/1.1 长连接发送&nbsp;<code>Connection: keep-alive</code>&nbsp;的习惯。</p><p>浏览器重用已经打开的空闲持久连接，可以避开缓慢的三次握手，还可以避免遇上 TCP 慢启动的拥塞适应阶段，听起来十分美妙。为了深入研究持久连接的特性，我决定用 Node 写一个最简单的 Web Server 用于测试，Node 提供了&nbsp;<code>http</code>&nbsp;模块用于快速创建 HTTP Web Server，但我需要更多的控制，所以用&nbsp;<code>net</code>&nbsp;模块创建了一个 TCP Server：</p><pre class="prettyprint" name="code"><code class="language-js hljs  has-numbering"><span class="hljs-built_in">require</span>(<span class="hljs-string">''net''</span>).createServer(<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(sock)</span> {</span>\r\n    sock.on(<span class="hljs-string">''data''</span>, <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(data)</span> {</span>\r\n        sock.write(<span class="hljs-string">''HTTP/1.1 200 OK\\r\\n''</span>);\r\n        sock.write(<span class="hljs-string">''\\r\\n''</span>);\r\n        sock.write(<span class="hljs-string">''hello world!''</span>);\r\n        sock.destroy();\r\n    });\r\n}).listen(<span class="hljs-number">9090</span>, <span class="hljs-string">''127.0.0.1''</span>);</code><ul class="pre-numbering" style="text-align: right;"><li>1</li><li>2</li><li>3</li><li>4</li><li>5</li><li>6</li><li>7</li><li>8</li></ul></pre><p>启动服务后，在浏览器里访问 127.0.0.1:9090，正确输出了指定内容，一切正常。去掉&nbsp;<code>sock.destroy()</code>&nbsp;这一行，让它变成持久连接，重启服务后再访问一下。这次的结果就有点奇怪了：迟迟看不到输出，通过 Network 查看请求状态，一直是 pending。</p><p>这是因为，对于非持久连接，浏览器可以通过连接是否关闭来界定请求或响应实体的边界；而对于持久连接，这种方法显然不奏效。上例中，尽管我已经发送完所有数据，但浏览器并不知道这一点，它无法得知这个打开的连接上是否还会有新数据进来，只能傻傻地等了。</p><h3 id="content-length"><a name="t2"></a>Content-Length</h3><p>要解决上面这个问题，最容易想到的办法就是计算实体长度，并通过头部告诉对方。这就要用到&nbsp;<code>Content-Length</code>&nbsp;了，改造一下上面的例子：</p><pre class="prettyprint" name="code"><code class="language-js hljs  has-numbering"><span class="hljs-built_in">require</span>(<span class="hljs-string">''net''</span>).createServer(<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(sock)</span> {</span>\r\n    sock.on(<span class="hljs-string">''data''</span>, <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(data)</span> {</span>\r\n        sock.write(<span class="hljs-string">''HTTP/1.1 200 OK\\r\\n''</span>);\r\n        sock.write(<span class="hljs-string">''Content-Length: 12\\r\\n''</span>);\r\n        sock.write(<span class="hljs-string">''\\r\\n''</span>);\r\n        sock.write(<span class="hljs-string">''hello world!''</span>);\r\n    });\r\n}).listen(<span class="hljs-number">9090</span>, <span class="hljs-string">''127.0.0.1''</span>);</code><ul class="pre-numbering" style="text-align: right;"><li>1</li><li>2</li><li>3</li><li>4</li><li>5</li><li>6</li><li>7</li><li>8</li></ul></pre><p>可以看到，这次发送完数据并没有关闭 TCP 连接，但浏览器能正常输出内容并结束请求，因为浏览器可以通过&nbsp;<code>Content-Length</code>&nbsp;的长度信息，判断出响应实体已结束。那如果 Content-Length 和实体实际长度不一致会怎样？有兴趣的同学可以自己试试，通常如果&nbsp;<code>Content-Length</code>&nbsp;比实际长度短，会造成内容被截断；如果比实体内容长，会造成 pending。</p><p>由于&nbsp;<code>Content-Length</code>&nbsp;字段必须真实反映实体长度，但实际应用中，有些时候实体长度并没那么好获得，例如实体来自于网络文件，或者由动态语言生成。这时候要想准确获取长度，只能开一个足够大的 buffer，等内容全部生成好再计算。但这样做一方面需要更大的内存开销，另一方面也会让客户端等更久。</p><p>我们在做 WEB 性能优化时，有一个重要的指标叫 TTFB（Time To First Byte），它代表的是从客户端发出请求到收到响应的第一个字节所花费的时间。大部分浏览器自带的 Network 面板都可以看到这个指标，越短的 TTFB 意味着用户可以越早看到页面内容，体验越好。可想而知，服务端为了计算响应实体长度而缓存所有内容，跟更短的 TTFB 理念背道而驰。但在 HTTP 报文中，实体一定要在头部之后，顺序不能颠倒，为此我们需要一个新的机制：不依赖头部的长度信息，也能知道实体的边界。</p><h3 id="transfer-encoding-chunked"><a name="t3"></a>Transfer-Encoding: chunked</h3><p>本文主角终于再次出现了，<code>Transfer-Encoding</code>&nbsp;正是用来解决上面这个问题的。历史上&nbsp;<code>Transfer-Encoding</code>&nbsp;可以有多种取值，为此还引入了一个名为&nbsp;<code>TE</code>&nbsp;的头部用来协商采用何种传输编码。但是最新的 HTTP 规范里，只定义了一种传输编码：分块编码（chunked）。</p><p>分块编码相当简单，在头部加入&nbsp;<code>Transfer-Encoding: chunked</code>&nbsp;之后，就代表这个报文采用了分块编码。这时，报文中的实体需要改为用一系列分块来传输。每个分块包含十六进制的长度值和数据，长度值独占一行，长度不包括它结尾的 CRLF（\\r\\n），也不包括分块数据结尾的 CRLF。最后一个分块长度值必须为 0，对应的分块数据没有内容，表示实体结束。按照这个格式改造下之前的代码：</p><pre class="prettyprint" name="code"><code class="language-js hljs  has-numbering"><span class="hljs-built_in">require</span>(<span class="hljs-string">''net''</span>).createServer(<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(sock)</span> {</span>\r\n    sock.on(<span class="hljs-string">''data''</span>, <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(data)</span> {</span>\r\n        sock.write(<span class="hljs-string">''HTTP/1.1 200 OK\\r\\n''</span>);\r\n        sock.write(<span class="hljs-string">''Transfer-Encoding: chunked\\r\\n''</span>);\r\n        sock.write(<span class="hljs-string">''\\r\\n''</span>);\r\n\r\n        sock.write(<span class="hljs-string">''b\\r\\n''</span>);\r\n        sock.write(<span class="hljs-string">''01234567890\\r\\n''</span>);\r\n\r\n        sock.write(<span class="hljs-string">''5\\r\\n''</span>);\r\n        sock.write(<span class="hljs-string">''12345\\r\\n''</span>);\r\n\r\n        sock.write(<span class="hljs-string">''0\\r\\n''</span>);\r\n        sock.write(<span class="hljs-string">''\\r\\n''</span>);\r\n    });\r\n}).listen(<span class="hljs-number">9090</span>, <span class="hljs-string">''127.0.0.1''</span>);</code><ul class="pre-numbering" style="text-align: right;"><li>1</li><li>2</li><li>3</li><li>4</li><li>5</li><li>6</li><li>7</li><li>8</li><li>9</li><li>10</li><li>11</li><li>12</li><li>13</li><li>14</li><li>15</li><li>16</li></ul></pre><p>上面这个例子中，我在响应头中表明接下来的实体会采用分块编码，然后输出了 11 字节的分块，接着又输出了 5 字节的分块，最后用一个 0 长度的分块表明数据已经传完了。用浏览器访问这个服务，可以得到正确结果。可以看到，通过这种简单的分块策略，很好的解决了前面提出的问题。</p><p>前面说过 Content-Encoding 和 Transfer-Encoding 二者经常会结合来用，其实就是针对进行了内容编码（压缩）的内容再进行传输编码（分块）。下面是我用 telnet 请求测试页面得到的响应，可以看到对 gzip 内容进行的分块：</p><pre class="prettyprint" name="code"><code class="language-shell hljs avrasm has-numbering">&gt; telnet <span class="hljs-number">106.187</span><span class="hljs-number">.88</span><span class="hljs-number">.156</span> <span class="hljs-number">80</span>\r\n\r\nGET /test<span class="hljs-preprocessor">.php</span> HTTP/<span class="hljs-number">1.1</span>\r\n<span class="hljs-label">Host:</span> qgy18<span class="hljs-preprocessor">.qgy</span>18<span class="hljs-preprocessor">.com</span>\r\nAccept-Encoding: gzip\r\n\r\nHTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK\r\n<span class="hljs-label">Server:</span> nginx\r\n<span class="hljs-label">Date:</span> Sun, <span class="hljs-number">03</span> May <span class="hljs-number">2015</span> <span class="hljs-number">17</span>:<span class="hljs-number">25</span>:<span class="hljs-number">23</span> GMT\r\nContent-Type: text/html\r\nTransfer-Encoding: chunked\r\n<span class="hljs-label">Connection:</span> keep-alive\r\nContent-Encoding: gzip\r\n</code><div><br></div></pre>', 9);
INSERT INTO `blog_article` (`arc_id`, `arc_title`, `arc_sort`, `sendtime`, `updatetime`, `arc_thumb`, `is_recycle`, `arc_digest`, `arc_author`, `cate_id`, `admin_id`, `arc_content`, `arc_click`) VALUES
(151, '对 nginx 服务器的 https 配置', 100, 0, '2019-04-05 06:28:57', '/upload/20190405/e3776932fa111924e205f0abbaf63930.jpg', 2, '首先是看with了ssl模块没有（可用/data/nginx/sbin/nginx -V 看一下）。现在看了一下with了，而且证书也生成了，那就配置吧，配置文件如下', 'Mrs.默先森', 61, 0, '<p><font size="4">HTTPS server<br>server {<br>listen 1500 ssl; #端口号<br>server_name localhost; #主机地址</font></p><pre class="prettyprint linenums prettyprinted"><ol class="linenums"><li class="L0"><code><span class="pln"> ssl_certificate </span><span class="pun">./</span><span class="pln">conf</span><span class="pun">/</span><span class="pln">server1</span><span class="pun">.</span><span class="pln">crt</span><span class="pun">;</span><span class="pln"> </span><span class="com">#ssl 证书</span></code></li><li class="L1"><code><span class="pln"> ssl_certificate_key </span><span class="pun">./</span><span class="pln">conf</span><span class="pun">/</span><span class="pln">server1</span><span class="pun">.</span><span class="pln">key</span><span class="pun">;</span><span class="pln"> </span><span class="com">#私钥</span></code></li><li class="L2"><code></code></li><li class="L3"><code><span class="pln"> ssl_session_cache shared</span><span class="pun">:</span><span class="pln">SSL</span><span class="pun">:</span><span class="lit">1m</span><span class="pun">;</span><span class="pln"> </span><span class="com">#设置会话缓存为 1M ,可存放约 4000 个会话</span></code></li><li class="L4"><code><span class="pln"> ssl_session_timeout </span><span class="lit">5m</span><span class="pun">;</span><span class="pln">                 </span><span class="com">#缓存超时时间为 5 分钟</span></code></li><li class="L5"><code></code></li><li class="L6"><code><span class="pln"> ssl_ciphers HIGH</span><span class="pun">:!</span><span class="pln">aNULL</span><span class="pun">:!</span><span class="pln">MD5</span><span class="pun">;</span><span class="pln"> </span><span class="com">#用来强制用户连接只能引入 SSL/TLS 那些强壮的协议版本和强大的      ssl_prefer_server_ciphers on;      加密算法                                                 </span></code></li><li class="L7"><code></code></li><li class="L8"><code><span class="pln"> location </span><span class="pun">/</span><span class="pln"> </span><span class="pun">{</span><span class="pln">                                   </span><span class="com">#返回默认页面</span></code></li><li class="L9"><code><span class="pln">     root html</span><span class="pun">;</span><span class="pln"> </span></code></li><li class="L0"><code><span class="pln">     index index</span><span class="pun">.</span><span class="pln">html index</span><span class="pun">.</span><span class="pln">htm</span><span class="pun">;</span><span class="pln"> </span></code></li><li class="L1"><code><span class="pln"> </span><span class="pun">}</span><span class="pln"> </span></code></li><li class="L2"><code><span class="pln"> location </span><span class="pun">=</span><span class="pln"> </span><span class="str">/lua {                          #返回/</span><span class="pln">data</span><span class="pun">/</span><span class="pln">nginx</span><span class="pun">/</span><span class="pln">conf</span><span class="pun">/</span><span class="pln">luafile</span><span class="pun">.</span><span class="pln">lua </span><span class="pun">文件执行后的结果</span></code></li><li class="L3"><code><span class="pln"> content_by_lua_file </span><span class="pun">/</span><span class="pln">data</span><span class="pun">/</span><span class="pln">nginx</span><span class="pun">/</span><span class="pln">conf</span><span class="pun">/</span><span class="pln">luafile</span><span class="pun">.</span><span class="pln">lua</span><span class="pun">;</span></code></li></ol></pre><p>}`<br>以上 ssl 证书和私钥是自己生成的。</p><p><font size="4">对用到的几个配置项进行一个简短的说明：</font></p><p><font size="4">ssl_certificate 和 ssl_certificate_key是一块来使用的。ssl_certificate是ssl的证书，ssl_certificate_key是 ssl证书的密钥。服务器证书是公开的，会被传送到每一个连接到服务器的客户端。而私钥不是公开的，需要存放在访问受限的文件中，当然，nginx主进程 必须有读取密钥的权限。私钥和证书可以存放在同一个文件中，这种情况下，证书文件同样得设置访问限制。当然，虽然证书和密钥存放在同一个文件，只有证书会 发送给客户端，密钥不会发送。</font></p><p><font size="4">ssl_protocols和ssl_ciphers指令可以用来强制用户连接只能引入SSL/TLS那些强壮的协议版本和强大的加密算法。</font></p><p><font size="4">CBC模式的加密算法容易受到一些攻击，尤其是BEAST攻击（参见CVE-2011-3389）。可以通过下面配置调整为优先使用RC4-SHA加密算法：<br>ssl_ciphers RC4:HIGH:!aNULL:!MD5;<br>ssl_prefer_server_ciphers on; 依赖SSLv3和TLSv1协议的服务器密码将优先于客户端密码。</font></p><p><font size="4">SSL 操作需要消耗CPU资源，所以在多处理器的系统，需要启动多个工作进程，而且数量需要不少于可用CPU的个数。最消耗CPU资源的SSL操作是SSL握 手，有两种方法可以将每个客户端的握手操作数量降到最低：第一种是保持客户端长连接，在一个SSL连接发送多个请求，第二种是在并发的连接或者后续的连接 中重用SSL会话参数，这样可以避免SSL握手的操作。会话缓存用于保存SSL会话，这些缓存在工作进程间共享，可以使用 ssl_session_cache指令进行配置。1M缓存可以存放大约4000个会话。默认的缓存超时是5分钟，可以使用 ssl_session_timeout加大它。</font></p><p><font size="4">测试：</font></p><p><font size="4">通过浏览器以 https 的方式来访问 nginx,默认页面：在地址栏输入:<a href="https://192.168.11.93:1500/" target="_blank">https://192.168.11.93:1500</a></font></p><p><font size="4">用程序以 https 的方式来访问 nginx的默认页面:</font></p><p><font size="4">测试 https 访问程序 https_test.lua</font></p><p><font size="4"># do</font></p><p><font size="4">#local common_path = ‘../open/lib/?.lua;’</font></p><p><font size="4">#local cpath = ‘../open/lib/?.so;’</font></p><p><font size="4">#package.path = common_path .. package.path</font></p><p><font size="4">#package.cpath = cpath .. package.cpath</font></p><p><font size="4">#local libhttps = require(“libhttps”)</font></p><p><font size="4">#local function send_data()</font></p><p><font size="4">#local request = “GET /lua HTTP/1.0\\r\\n\\r\\n” ..</font></p><p><font size="4"># ‘User-Agent:(X11; Linux x86_64)’..</font></p><p><font size="4"># ‘Content-Type:application/x-www-form-urlencoded’..</font></p><p><font size="4"># ‘Accept-Language: zh-cn,zh;q=0.5’..</font></p><p><font size="4"># ‘Host: 127.0.0.1:1500’..</font></p><p><font size="4"># ‘Accept:<span class="Apple-converted-space">&nbsp;</span><em>/</em>\\r\\n’</font></p><p><font size="4">#local ret = libhttps.https(“127.0.0.1”,1500, request, string.len(request))</font></p><p><font size="4">#print(ret)</font></p><p><font size="4">#end</font></p><p><font size="4">#send_data()</font></p><p><font size="4">#end</font></p><p><font size="4">TLS:</font></p><p><font size="4">最新版本的TLS（Transport Layer Security，传输层安全协议）是IETF（Internet Engineering Task Force，Internet工程任务组）制定的一种新的协议，它建立在SSL 3.0协议规范之上，是SSL 3.0的后续版本。在TLS与SSL3.0之间存在着显著的差别，主要是它们所支持的加密算法不同，所以TLS与SSL3.0不能互操作。</font></p><p><font size="4">　　1．TLS与SSL的差异</font></p><p><font size="4">　　1）版本号：TLS记录格式与SSL记录格式相同，但版本号的值不同，TLS的版本1.0使用的版本号为SSLv3.1。</font></p><p><font size="4">　 　2）报文鉴别码：SSLv3.0和TLS的MAC算法及MAC计算的范围不同。TLS使用了RFC-2104定义的HMAC算法。SSLv3.0使用了 相似的算法，两者差别在于SSLv3.0中，填充字节与密钥之间采用的是连接运算，而HMAC算法采用的是异或运算。但是两者的安全程度是相同的。</font></p><p><font size="4">　　3）伪随机函数：TLS使用了称为PRF的伪随机函数来将密钥扩展成数据块，是更安全的方式。</font></p><p><font size="4">　 　4）报警代码：TLS支持几乎所有的SSLv3.0报警代码，而且TLS还补充定义了很多报警代码，如解密失败 （decryption_failed）、记录溢出（record_overflow）、未知CA（unknown_ca）、拒绝访问 （access_denied）等。</font></p><p><font size="4">　　5）密文族和客户证书：SSLv3.0和TLS存在少量差别，即TLS不支持Fortezza密钥交换、加密算法和客户证书。</font></p><p><font size="4">　　6）certificate_verify和finished消息：SSLv3.0和TLS在用certificate_verify和finished消息计算MD5和SHA-1散列码时，计算的输入有少许差别，但安全性相当。</font></p><p><font size="4">　　7）加密计算：TLS与SSLv3.0在计算主密值（master secret）时采用的方式不同。</font></p><p><font size="4">　　8）填充：用户数据加密之前需要增加的填充字节。在SSL中，填充后的数据长度要达到密文块长度的最小整数倍。而在TLS中，填充后的数据长度可以是密文块长度的任意整数倍（但填充的最大长度为255字节），这种方式可以防止基于对报文长度进行分析的攻击。</font></p><p><font size="4">　　2．TLS的主要增强内容</font></p><p><font size="4">　　TLS的主要目标是使SSL更安全，并使协议的规范更精确和完善。TLS 在SSL v3.0 的基础上，提供了以下增强内容：</font></p><p><font size="4">　　1）更安全的MAC算法</font></p><p><font size="4">　　2）更严密的警报</font></p><p><font size="4">　　3）“灰色区域”规范的更明确的定义</font></p><p><font size="4">　　3．TLS对于安全性的改进</font></p><p><font size="4">　 　1）对于消息认证使用密钥散列法：TLS 使用“消息认证代码的密钥散列法”（HMAC），当记录在开放的网络（如因特网）上传送时，该代码确保记录不会被变更。SSLv3.0还提供键控消息认 证，但HMAC比SSLv3.0使用的（消息认证代码）MAC 功能更安全。</font></p><p><font size="4">　　2）增强的伪随机功能（PRF）：PRF生成密钥数据。在TLS中，HMAC定义PRF。PRF使用两种散列算法保证其安全性。如果任一算法暴露了，只要第二种算法未暴露，则数据仍然是安全的。</font></p><p><font size="4">　　3）改进的已完成消息验证：TLS和SSLv3.0都对两个端点提供已完成的消息，该消息认证交换的消息没有被变更。然而，TLS将此已完成消息基于PRF和HMAC值之上，这也比SSLv3.0更安全。</font></p><p><font size="4">　　4）一致证书处理：与SSLv3.0不同，TLS试图指定必须在TLS之间实现交换的证书类型。</font></p><p><font size="4">　　5）特定警报消息：TLS提供更多的特定和附加警报，以指示任一会话端点检测到的问题。TLS还对何时应该发送某些警报进行记录。</font></p><p><font size="4">数字证书：</font></p><p><font size="4">数字证书是一个经证书授权中心数字签名的包含公开密钥拥有者信息以及公开密钥的权威性电子文档，由权威公正的第三方机构，即CA（例如中国各地方的CA公司）中心签发。数字证书分为：服务器证书，电子邮件证书，个人证书3类。数字证书的出现是为了解决为你的公钥找一个公正人，就是说确定这个公钥就是你的，你的数字证书由谁颁发呢，CA（证书授权机构），但是要注意的是这里CA只是个泛称，不是特指某个机构，目前国内的比较出名的CA为GlobalSign。证书的内容包括：电子签证机关的信息、公钥用户信息、公钥、权威机构的签字和有效期等等。目前，证书的格式和验证方法普遍遵循X.509 国际标准。现在就是呢，你的证书是由CA用它的私钥加密后形成的，客户端拥有CA的公钥，收到证书后，你用CA的公钥解密然后取出服务器的公钥。这样就能确定是你请求的服务器的公钥。但是现在有一个问题，CA的公钥从那儿获得呢？答案在根证书内，根证书是一份特殊的证书，是CA认证中心给自己颁发的证书,是信任链的起始点。下载安装根证书意味着对这个CA认证中心的信任，就表明您对该根证书以下所签发的证书都表示信任。</font></p><p><font size="4">注：因为任何人都可以生成自己的（公钥，私钥）对，所以为了防止有人散布伪造的公钥骗取信任，就需要一个可靠的第三方机构来生成经过认证的（公钥，私钥）对。目前，世界上最主要的数字服务认证商是位于美国加州的Verisign公司，它的主要业务就是分发RSA数字证书。</font></p><p><font size="4">顺便介绍一下与数字证书相关的两个术语：.pfx与CRL</font></p><p><font size="4">.pfx文件</font></p><p><font size="4">pfx（个人信息交换，Personal Information Exchange）的文件。.pfx 文件包含一个证书和与之对应的私钥（PKCS #12 标准对该格式有所说明）。这类文件是高度敏感的，通常用于导入服务器上的密钥对或用于备份目的。在导出密钥对时，Windows 提供用密码加密 .pfx 文件；而在导入密钥对时，您必须再次提供此密码方可导入。</font></p><p><font size="4">公钥加密技术12号标准（Public Key Cryptography Standards #12，PKCS#12）为存储和传输用户或服务器私钥、公钥和证书指定了一个可移植的格式。它是一种二进制格式，这些文件也称为PFX文件。开发人员通常需要将PFX文件转换为某些不同的格式，如PEM或JKS，以便可以为使用SSL通信的独立Java客户端或WebLogic Server使用。</font></p><p><font size="4">RL:证书撤销</font></p><p><font size="4">当订户个人身份信息发生变化，或者订户私钥丢失、泄露或者疑似泄露时，证书订户应及时地向CA提出证书的撤销请求，CA也应及时地把此证书放入公开发布的证书撤销列表。证书的撤销也表示了证书生命的终结。CA一般采用证书撤销列表的方式将被撤销的证书告知其他订户，CRL中列举着所有在有效期内但被撤销的数字证书。</font></p><p><font size="4">ssl证书：</font></p><p><font size="4">SSL证书是数字证书的一种，即为上面的服务器证书，类似于驾驶证、护照和营业执照的电子副本。SSL证书通过在客户端浏览器和Web服务器之间建立一条SSL安全通道，Secure socket layer(SSL)安全协议是由Netscape Communication公司设计开发。该安全协议主要用来提供对用户和服务器的认证；对传送的数据进行加密和隐藏；确保数据在传送中不被改变，即数据的完整性，现已成为该领域中全球化的标准。由于SSL技术已建立到所有主要的浏览器和WEB服务器程序中，因此，仅需安装服务器证书就可以激活该功能了，即这样就可以激活SSL协议，实现数据信息在客户端和服务器之间的加密传输，可以防止数据信息的泄露。保证了双方传递信息的安全性，而且用户可以通过服务器证书验证他所访问的网站是否是真实可靠。</font></p><p><font size="4">ssl证书的颁发：</font></p><p><font size="4">ssl证书可以自己颁发，也可以向ssl提供商请求颁发（这里只谈技术问题，先不谈收费问题）。自己颁发是不受浏览器信任的，你每次访问的时候会提示你有危险信息。需要你自己选择是否继续。如果是ssl提供商颁发的证书的话就可以直接访问了。 下面说一下证书的生成过程（包括自己颁发和ssl提供商颁发）。</font></p><p><font size="4">1.进入你想创建证书和私钥的目录，例如：</font></p><p><font size="4">$ cd ./conf</font></p><p><font size="4">2.创建服务器私钥，命令会让你输入一个口令,你自定义输入一个就行了：</font></p><p><font size="4">$ openssl genrsa -des3 -out server.key 1024</font></p><p><font size="4">3.生成一个证书请求（CSR）会提示输入省份 城市 域名信息等，重要的是email，email一定要是你的域名后缀的，比如<a href="mailto:xuyafei@daoke.me">xuyafei@daoke.me</a><span class="Apple-converted-space">&nbsp;</span>并且可以接收邮件。如果下面是自己颁发的话全部可以不用填，全部用默认的或空的。如果要是向ssl提供商请求的话就需要认真填写了。：</font></p><p><font size="4">$ openssl req -new -key server.key -out server.csr</font></p><p><font size="4">这样就有一个csr文件了，将这个文件提交给ssl提供商即可，一般半个钟头到一天的时间就会发给你证书。证书是crt为后缀的。如果是自己颁发，就继续往下走。</font></p><p><font size="4">4.在加载SSL支持的Nginx并使用上述私钥时除去必须的口令：</font></p><p><font size="4">$ cp server.key server.key.org</font></p><p><font size="4">$ openssl rsa -in server.key.org -out server.key</font></p><p><font size="4">5.最后生成证书（crt）：</font></p><p><font size="4">$ openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt</font></p><p><font size="4">当然了这里只是自己颁发了证书，如果后面需要正规机构颁发，我这儿也储备了一篇文章，见我的csdn博客nginx中转的一篇文章。</font></p><p><font size="4">PolarSSL：</font></p><p><font size="4">PolarSSL源码，也许是最小巧的ssl代码库。高效、便于移植和集成。尤其适合嵌入式应用。越来越多的应用已经从只支持OpenSSL到可以支持PolarSSL。PolarSSL 宣布加入 ARM 公司。我很高兴的宣布从今天起 PolarSSL 成为了 ARM 的一部分，作为全世界嵌入式芯片最领先的公司 ARM 将为 PolarSSL 带来充分的支持，可以让 PolarSSL 得到更好的发展。我们将继续支持我们已有的客户，同时构建新的生态系统来将 PolarSSL 扩展到新的领域和客户。</font></p><p><font size="4">这儿为什么突然提到PolarSSL呢？因为上面说的生成证书的步骤其实只是通用的大致步骤，放在具体的https库生成的证书就未必可用，比如我按以上步骤生成的证书在基于PolarSSL库时就不能用，好在PolarSSL库的目录polarssl-1.2.8/programs/ssl下有一个CA-HOWTO.txt的文件，介绍了在PolarSSL库下如何生成ssl证书。按这个步骤生成的证书就可用了，其实在polarssl-1.2.8/tests/data_files目录下有已经生成好的测试证书，可以先直接拿来测试一下。</font></p><p><font size="4">Why Https ?:</font></p><p><font size="4">由加密一个“password”引发的“血案”，一开始的时候想得是找一个C或者lua的加密算法实现程序，然后两边加密，最后止于编码问题。转向https，一个系统的密码保护机制是否安全取决于两个方面，即密码传输的安全性和密码存储的安全性。新浪微博和MySQL都没有采用HTTPS/SSL传输密码。为了防止黑客在密码传输过程中窃听密码，它们只能在传输过程中加盐然后用SHA1算法加密。由于密码在传输过程中需要加盐，为了能够正常验证密码，因此在存储密码时只能存储没有加盐的SHA1算法的哈希值。因此密码的存储成为整个机制的短板。笔者曾写过一篇博客讨论如何安全地存储密码。感兴趣的读者请参考<a href="http://blog.csdn.net/cadcisdhht/article/details/19282407%E3%80%82" target="_blank">http://blog.csdn.net/cadcisdhht/article/details/19282407。</a></font></p><p><font size="4">我们没有必要在抛弃HTTPS/SSL的前提下试图去设计更加复杂的加密算法或者通讯协议。上述提到的两个方案是新浪微博和MySQL的程序员们花了大量精力设计出来的机制，尚且还有明显的漏洞。我不觉得每个程序员都有自信说自己比新浪微博或者MySQL的程序员更加优秀。</font></p><p><font size="4">HTTPS/SSL在传输过程中用证书加密，不需要加盐来提高传输的安全性。这样在存储密码的时候就可以采用加盐的机制，比如简单地采用加盐的SHA1算法，也可以采用Bcrypt或者PBKDF2。如此以来，在密码的传输和存储两个环节都取得很好的安全性。</font></p><p><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"><font size="4"></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></p><p><font size="4">如果安全性对一个系统是至关重要的因素，那么就采用HTTPS/SSL吧。虽然部署HTTPS/SSL的系统有些麻烦，申请可信赖的CA的证书还要花钱，但和安全漏洞的潜在风险相比这些代价还是值得的。（业界已经达成共识，在传输用户密码等需要保密的信息时，尽可能采用HTTPS/SSL协议传输。）</font></p>', 12),
(152, '如何把vim整成IDE', 100, 0, '2019-04-05 07:05:42', '/upload/20190405/ca8ff4c429ad99b26cb328f6db0aad7d.jpg', 2, '用习惯IDE了，每次在服务器上用vim的时候都不想用，因为累，浑身都累，怎么样将vim整成IDE呢，看下面。。。', 'Mrs.默先森', 61, 0, '<h5 id="h5--diy-">【DIY实现】</h5><ol><li>下载jeffy-vim-read.tar.gz配置脚本：<br><a href="http://blog.chinaunix.net/attachment/attach/26/83/38/8326833883a1bf4bf34db4032c2954dd857ab312d0.zip" target="_blank">http://blog.chinaunix.net/attachment/attach/26/83/38/8326833883a1bf4bf34db4032c2954dd857ab312d0.zip</a></li><li>解压jeffy-vim-read.tar.gz<br>tar -zxvf jeffy-vim-read.tar.gz</li><li>解压完成 后，进入jeffy-vim-read目录执行install.sh<br>cd jeffy-vim-read<pre class="prettyprint linenums prettyprinted"><ol class="linenums"><li class="L0"><code><span class="pln">   </span><span class="pun">./</span><span class="pln">install</span><span class="pun">.</span><span class="pln">sh</span></code></li></ol></pre>等待几分钟，会自动从网络上下载一些插件来配置vim，下载配置完成后，会自动关闭，所以你要做的就是等待……。</li><li>最后安装一下ctags插件，就完全配置好了<br>sudo yum install ctags<br>这样配置好以后，vim就像一个酷炫IDE一样了，IDE界面包含代码补全，快速搜素文件，目录树，头文件补全等等功能都有。</li><li>顺便总结几个Fn键的用法：F2：在左边列出你的这个文件里面的有的函数，然后可以选择跳到那个函数里面。F3:在右边列出与现在打开文件同目录下的所有文件，并且可以跳到上层目录。F4:列出最近最频繁使用的文件。F5:搜索一个文件。F6:搜索你指定的词在同目录下其他文件中的出现情况。F11:将vim变成全屏或还原。<br>剩下的自己探索吧。。。</li></ol><h5 id="h5--"><a name="【参考】" class="reference-link"></a>【参考】</h5><p>用jeffy-vim配置vim，秒杀其他的配置方法：<a href="http://blog.csdn.net/xu_ya_fei/article/details/41683157" target="_blank">http://blog.csdn.net/xu_ya_fei/article/details/41683157</a></p>', 9),
(153, 'PHP 5 Array 函数', 100, 0, '2019-04-05 07:45:17', '/upload/20190405/8bc5bf4b07bac1fc0ee77ff4aaa7b21d.jpg', 2, 'PHP Array 函数允许您访问并操作数组，支持简单的数组和多维数组，PHP Array 函数是 PHP 核心的组成部分。无需安装即可使用这些函数。', 'Mrs.默先森', 44, 0, '<h1>PHP 5 Array 函数</h1><table class="reference notranslate layui-table"><tbody><tr><th width="25%" style="text-align: left;">函数</th><th width="75%" style="text-align: left;">描述</th></tr><tr><td><a href="http://www.runoob.com/php/func-array.html">array()</a></td><td>创建数组。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-change-key-case.html">array_change_key_case()</a></td><td>返回其键均为大写或小写的数组。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-chunk.html">array_chunk()</a></td><td>把一个数组分割为新的数组块。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-column.html">array_column()</a></td><td>返回输入数组中某个单一列的值。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-combine.html">array_combine()</a></td><td>通过合并两个数组（一个为键名数组，一个为键值数组）来创建一个新数组。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-count-values.html">array_count_values()</a></td><td>用于统计数组中所有值出现的次数。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-diff.html">array_diff()</a></td><td>比较数组，返回两个数组的差集（只比较键值）。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-diff-assoc.html">array_diff_assoc()</a></td><td>比较数组，返回两个数组的差集（比较键名和键值）。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-diff-key.html">array_diff_key()</a></td><td>比较数组，返回两个数组的差集（只比较键名）。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-diff-uassoc.html">array_diff_uassoc()</a></td><td>比较数组，返回两个数组的差集（比较键名和键值，使用用户自定义的键名比较函数）。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-diff-ukey.html">array_diff_ukey()</a></td><td>比较数组，返回两个数组的差集（只比较键名，使用用户自定义的键名比较函数）。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-fill.html">array_fill()</a></td><td>用给定的键值填充数组。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-fill-keys.html">array_fill_keys()</a></td><td>用给定的指定键名的键值填充数组。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-filter.html">array_filter()</a></td><td>用回调函数过滤数组中的元素。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-flip.html">array_flip()</a></td><td>反转/交换数组中的键名和对应关联的键值。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-intersect.html">array_intersect()</a></td><td>比较数组，返回两个数组的交集（只比较键值）。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-intersect-assoc.html">array_intersect_assoc()</a></td><td>比较数组，返回两个数组的交集（比较键名和键值）。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-intersect-key.html">array_intersect_key()</a></td><td>比较数组，返回两个数组的交集（只比较键名）。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-intersect-uassoc.html">array_intersect_uassoc()</a></td><td>比较数组，返回两个数组的交集（比较键名和键值，使用用户自定义的键名比较函数）。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-intersect-ukey.html">array_intersect_ukey()</a></td><td>比较数组，返回两个数组的交集（只比较键名，使用用户自定义的键名比较函数）。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-key-exists.html">array_key_exists()</a></td><td>检查指定的键名是否存在于数组中。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-keys.html">array_keys()</a></td><td>返回数组中所有的键名。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-map.html">array_map()</a></td><td>将用户自定义函数作用到给定数组的每个值上，返回新的值。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-merge.html">array_merge()</a></td><td>把一个或多个数组合并为一个数组。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-merge-recursive.html">array_merge_recursive()</a></td><td>递归地把一个或多个数组合并为一个数组。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-multisort.html">array_multisort()</a></td><td>对多个数组或多维数组进行排序。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-pad.html">array_pad()</a></td><td>将指定数量的带有指定值的元素插入到数组中。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-pop.html">array_pop()</a></td><td>删除数组中的最后一个元素（出栈）。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-product.html">array_product()</a></td><td>计算数组中所有值的乘积。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-push.html">array_push()</a></td><td>将一个或多个元素插入数组的末尾（入栈）。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-rand.html">array_rand()</a></td><td>从数组中随机选出一个或多个元素，返回键名。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-reduce.html">array_reduce()</a></td><td>通过使用用户自定义函数，迭代地将数组简化为一个字符串，并返回。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-replace.html">array_replace()</a></td><td>使用后面数组的值替换第一个数组的值。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-replace-recursive.html">array_replace_recursive()</a></td><td>递归地使用后面数组的值替换第一个数组的值。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-reverse.html">array_reverse()</a></td><td>将原数组中的元素顺序翻转，创建新的数组并返回。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-search.html">array_search()</a></td><td>在数组中搜索给定的值，如果成功则返回相应的键名。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-shift.html">array_shift()</a></td><td>删除数组中的第一个元素，并返回被删除元素的值。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-slice.html">array_slice()</a></td><td>返回数组中的选定部分。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-splice.html">array_splice()</a></td><td>把数组中的指定元素去掉并用其它值取代。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-sum.html">array_sum()</a></td><td>返回数组中所有值的和。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-udiff.html">array_udiff()</a></td><td>比较数组，返回两个数组的差集（只比较键值，使用一个用户自定义的键名比较函数）。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-udiff-assoc.html">array_udiff_assoc()</a></td><td>比较数组，返回两个数组的差集（比较键名和键值，使用内建函数比较键名，使用用户自定义函数比较键值）。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-udiff-uassoc.html">array_udiff_uassoc()</a></td><td>比较数组，返回两个数组的差集（比较键名和键值，使用两个用户自定义的键名比较函数）。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-uintersect.html">array_uintersect()</a></td><td>比较数组，返回两个数组的交集（只比较键值，使用一个用户自定义的键名比较函数）。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-uintersect-assoc.html">array_uintersect_assoc()</a></td><td>比较数组，返回两个数组的交集（比较键名和键值，使用内建函数比较键名，使用用户自定义函数比较键值）。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-uintersect-uassoc.html">array_uintersect_uassoc()</a></td><td>比较数组，返回两个数组的交集（比较键名和键值，使用两个用户自定义的键名比较函数）。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-unique.html">array_unique()</a></td><td>删除数组中重复的值。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-unshift.html">array_unshift()</a></td><td>在数组开头插入一个或多个元素。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-values.html">array_values()</a></td><td>返回数组中所有的值。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-walk.html">array_walk()</a></td><td>对数组中的每个成员应用用户函数。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-walk-recursive.html">array_walk_recursive()</a></td><td>对数组中的每个成员递归地应用用户函数。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-arsort.html">arsort()</a></td><td>对关联数组按照键值进行降序排序。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-asort.html">asort()</a></td><td>对关联数组按照键值进行升序排序。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-compact.html">compact()</a></td><td>创建一个包含变量名和它们的值的数组。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-count.html">count()</a></td><td>返回数组中元素的数目。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-current.html">current()</a></td><td>返回数组中的当前元素。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-each.html">each()</a></td><td>返回数组中当前的键／值对。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-end.html">end()</a></td><td>将数组的内部指针指向最后一个元素。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-extract.html">extract()</a></td><td>从数组中将变量导入到当前的符号表。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-in-array.html">in_array()</a></td><td>检查数组中是否存在指定的值。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-key.html">key()</a></td><td>从关联数组中取得键名。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-krsort.html">krsort()</a></td><td>对关联数组按照键名降序排序。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-ksort.html">ksort()</a></td><td>对关联数组按照键名升序排序。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-list.html">list()</a></td><td>把数组中的值赋给一些数组变量。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-natcasesort.html">natcasesort()</a></td><td>用"自然排序"算法对数组进行不区分大小写字母的排序。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-natsort.html">natsort()</a></td><td>用"自然排序"算法对数组排序。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-next.html">next()</a></td><td>将数组中的内部指针向后移动一位。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-pos.html">pos()</a></td><td>current() 的别名。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-prev.html">prev()</a></td><td>将数组的内部指针倒回一位。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-range.html">range()</a></td><td>创建一个包含指定范围的元素的数组。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-reset.html">reset()</a></td><td>将数组的内部指针指向第一个元素。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-rsort.html">rsort()</a></td><td>对数值数组进行降序排序。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-shuffle.html">shuffle()</a></td><td>把数组中的元素按随机顺序重新排列。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-sizeof.html">sizeof()</a></td><td>count() 的别名。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-sort.html">sort()</a></td><td>对数值数组进行升序排序。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-uasort.html">uasort()</a></td><td>使用用户自定义的比较函数对数组中的键值进行排序。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-uksort.html">uksort()</a></td><td>使用用户自定义的比较函数对数组中的键名进行排序。</td></tr><tr><td><a href="http://www.runoob.com/php/func-array-usort.html">usort()</a></td><td>使用用户自定义的比较函数对数组进行排序。</td></tr></tbody></table>', 9),
(154, 'php基础知识整理', 99, 0, '2019-04-05 12:36:14', '/upload/20190405/bcc7fabdc2c54b2bafdf028528543605.jpg', 2, '零碎的记忆，知识点比较散，所以特意花一段时间整理出来，方便日后的使用，仅此而已', 'Mrs.默先森', 44, 0, '<p><span><b>在 PHP 中有两个基本的输出方式： echo 和 print。</b></span></p><p>echo 和 print 区别:</p><ul><li>echo - 可以输出一个或多个字符串</li><li>print - 只允许输出一个字符串，返回值总为 1</li></ul><p><strong>提示：</strong>echo 输出的速度比 print 快， echo 没有返回值，print有返回值1。</p><p><br></p><p><b>php变量作用域</b></p><p>变量的作用域是脚本中变量可被引用/使用的部分。</p><p>PHP 有四种不同的变量作用域：</p><ul><li>local&nbsp; &nbsp; &nbsp; 本地</li><li>global&nbsp; &nbsp; 全局</li><li>static&nbsp; &nbsp; &nbsp;静态</li></ul><p><ul><li>parameter&nbsp; 参数变量</li></ul><li>1、定义在函数外部的就是全局变量，它的作用域从定义处一直到文件结尾。</li></p><ul><li><span class="fa fa-circle" aria-hidden="true"></span>2、函数内定义的变量就是局部变量，它的作用域为函数定义范围内。</li><li><span class="fa fa-circle" aria-hidden="true"></span>3、函数之间存在作用域互不影响。</li><li><span class="fa fa-circle" aria-hidden="true"></span>4、函数内访问全局变量需要&nbsp;<span class="marked">global</span>&nbsp;关键字或者使用&nbsp;<span class="marked">$GLOBALS[index]</span>&nbsp;数组</li><p data-title="PHP 全局变量与局部变量">在 php 中函数是有独立的作用域，所以局部变量会覆盖全局变量，即使局部变量中没有全局变量相同的变量，也会被覆盖。如下：</p><pre class="prettyprint prettyprinted"><span class="pun">&lt;?</span><span class="pln">php\r\n$a</span><span class="pun">=</span><span class="lit">5</span><span class="pun">;</span><span class="pln">\r\n$b</span><span class="pun">=</span><span class="lit">3</span><span class="pun">;</span><span class="pln">\r\n</span><span class="kwd">function</span><span class="pln"> t</span><span class="pun">()</span><span class="pln">\r\n</span><span class="pun">{</span><span class="pln">\r\n    echo $a</span><span class="pun">-</span><span class="pln">$b</span><span class="pun">;</span><span class="pln"> </span><span class="com">// 输出 0</span><span class="pln">\r\n</span><span class="pun">}</span><span class="pln">\r\nt</span><span class="pun">();</span><span class="pln">\r\n</span><span class="pun">?&gt;</span></pre><p>要想在函数中直接使用全局变量可以通过&nbsp;<span class="marked">global</span>&nbsp;关键字声明或者通过 php 中自定义的&nbsp;<span class="marked">$GLOBALS</span>&nbsp;数组获取:</p><pre class="prettyprint prettyprinted"><span class="pun">&lt;?</span><span class="pln">php\r\n$a</span><span class="pun">=</span><span class="lit">5</span><span class="pun">;</span><span class="pln">\r\n$b</span><span class="pun">=</span><span class="lit">3</span><span class="pun">;</span><span class="pln">\r\n</span><span class="kwd">function</span><span class="pln"> t1</span><span class="pun">()</span><span class="pln">\r\n</span><span class="pun">{</span><span class="pln">  \r\n    </span><span class="kwd">global</span><span class="pln"> $a</span><span class="pun">,</span><span class="pln">$b</span><span class="pun">;</span><span class="pln">\r\n    echo $a</span><span class="pun">-</span><span class="pln">$b</span><span class="pun">;</span><span class="pln">  </span><span class="com">// 输出 2</span><span class="pln">\r\n</span><span class="pun">}</span><span class="pln">\r\nt1</span><span class="pun">();</span><span class="pln">\r\n\r\necho PHP_EOL</span><span class="pun">;</span><span class="pln">\r\n\r\n</span><span class="kwd">function</span><span class="pln"> t2</span><span class="pun">()</span><span class="pln">\r\n</span><span class="pun">{</span><span class="pln">\r\n    echo $GLOBALS</span><span class="pun">[</span><span class="str">''a''</span><span class="pun">]-</span><span class="pln">$GLOBALS</span><span class="pun">[</span><span class="str">''b''</span><span class="pun">];</span><span class="pln">  </span><span class="com">// 输出 2</span><span class="pln">\r\n</span><span class="pun">}</span><span class="pln">\r\nt2</span><span class="pun">();</span><span class="pln">\r\n</span><p><span class="pun">?&gt;</span></p></pre><pre class="prettyprint prettyprinted"><p style="text-align: left;"><span class="pun"><b>PHP EOF(heredoc)是一种在命令行shell（如sh、csh、ksh、bash、PowerShell和zsh）和程序语言（像Perl、PHP、Python和Ruby）里定义一个字符串的方法。</b></span><span>使用概述：</span></p><ul><li>1. 必须后接分号，否则编译通不过。</li><li>2.&nbsp;<strong>EOF</strong>&nbsp;可以用任意其它字符代替，只需保证结束标识与开始标识一致。</li><li><strong>3. 结束标识必须顶格独自占一行(即必须从行首开始，前后不能衔接任何空白和字符)。</strong></li><li>4. 开始标识可以不带引号或带单双引号，不带引号与带双引号效果一致，解释内嵌的变量和转义符号，带单引号则不解释内嵌的变量和转义符号。</li></ul><p><p><ul><li>5. 当内容需要内嵌引号（单引号或双引号）时，不需要加转义符，本身对单双引号转义，此处相当与q和qq的用法。</li></ul></p></p></pre></ul>', 9);
INSERT INTO `blog_article` (`arc_id`, `arc_title`, `arc_sort`, `sendtime`, `updatetime`, `arc_thumb`, `is_recycle`, `arc_digest`, `arc_author`, `cate_id`, `admin_id`, `arc_content`, `arc_click`) VALUES
(155, 'PHP 超级全局变量', 100, 0, '2019-04-05 12:57:34', '/upload/20190405/346e69a327506ccbe10a35761636d0da.jpg', 2, 'PHP中预定义了几个超级全局变量（superglobals） ，这意味着它们在一个脚本的全部作用域中都可用。 你不需要特别说明，就可以在函数及类中使用。', 'Mrs.默先森', 44, 0, '<p><b>PHP 超级全局变量列表:</b></p><ul><li>1.$GLOBALS</li><li>2.$_SERVER</li><li>3.$_REQUEST</li><li>4.$_POST</li><li>5.$_GET</li><li>6.$_FILES</li><li>7.$_ENV</li><li>8.$_COOKIE</li></ul><p><p><ul><li>9.$_SESSION</li></ul><p><ul><li>以下是作为一一讲解的干货。</li></ul></p><p class="refpurpose"><span class="refname">$GLOBALS</span><span>&nbsp;</span>—<span>&nbsp;</span><span class="dc-title">引用全局作用域中可用的全部变量</span></p></p><div class="refnamediv"></div><ul></ul></p><li><div class="refsect1 description" id="refsect1-reserved.variables.globals-description"><h3 class="title">说明</h3><p class="para">一个包含了全部变量的全局组合<span class="type">数组</span>。变量的名字就是数组的键。</p></div><div class="refsect1 examples" id="refsect1-reserved.variables.globals-examples"><h3 class="title">范例</h3><p class="para"></p><div class="example" id="example-294"><p><span>Example #1&nbsp;<var class="varname"><var class="varname">$GLOBALS</var></var>&nbsp;范例</span></p><div class="example-contents"><div class="phpcode"><code><span><span>&lt;?php<br></span><span>function&nbsp;</span><span>test</span><span>()&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>$foo&nbsp;</span><span>=&nbsp;</span><span>"local&nbsp;variable"</span><span>;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span>''$foo&nbsp;in&nbsp;global&nbsp;scope:&nbsp;''&nbsp;</span><span>.&nbsp;</span><span>$GLOBALS</span><span>[</span><span>"foo"</span><span>]&nbsp;.&nbsp;</span><span>"\\n"</span><span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span>''$foo&nbsp;in&nbsp;current&nbsp;scope:&nbsp;''&nbsp;</span><span>.&nbsp;</span><span>$foo&nbsp;</span><span>.&nbsp;</span><span>"\\n"</span><span>;<br>}<br><br></span><span>$foo&nbsp;</span><span>=&nbsp;</span><span>"Example&nbsp;content"</span><span>;<br></span><span>test</span><span>();<br></span><span>?&gt;</span></span></code></div></div><div class="example-contents"><p>以上例程的输出类似于：</p></div><div class="example-contents screen"><div class="cdata"><pre>$foo in global scope: Example content\r\n$foo in current scope: local variable</pre></div></div></div></div><div class="refsect1 notes" id="refsect1-reserved.variables.globals-notes"><blockquote class="note"><p class="para">“Superglobal”也称为自动化的全局变量。这就表示其在脚本的所有作用域中都是可用的。不需要在函数或方法中用&nbsp;<span class="command">global $variable;</span>&nbsp;来访问它。</p></blockquote><blockquote class="note"><p><span class="note">Note</span>:&nbsp;<span>变量可用性</span><br></p><p class="para">与所有其他<a href="https://www.php.net/manual/zh/language.variables.superglobals.php" class="link">超全局变量</a>不同，<var class="varname"><var class="varname">$GLOBALS</var></var>在PHP中总是可用的。</p></blockquote></div></li><li><p class="refpurpose"><b><span class="refname">$_SERVER</span>&nbsp;</b></p></li><li><p class="refpurpose"><span class="refname">$_SERVER</span>&nbsp;--&nbsp;<span class="refname">$HTTP_SERVER_VARS [已删除]</span>&nbsp;—&nbsp;<span class="dc-title">服务器和执行环境信息&nbsp; &nbsp; &nbsp;</span><var class="varname"><var class="varname">$_SERVER</var></var>&nbsp;是一个包含了诸如头信息(header)、路径(path)、以及脚本位置(script locations)等等信息的数组。这个数组中的项目由 Web 服务器创建。不能保证每个服务器都提供全部项目；服务器可能会忽略一些，或者提供一些没有在这里列举出来的项目。这也就意味着大量的此类变量都会在<a href="http://www.faqs.org/rfcs/rfc3875" class="link external">»&nbsp;CGI 1.1 规范</a>中说明，所以应该仔细研究一下。</p></li><li><div class="refsect1 description" id="refsect1-reserved.variables.server-description"><blockquote class="note"><p><span class="note">Note</span>:&nbsp;<span class="simpara">PHP 5.4.0 之前，<var class="varname"><var class="varname">$HTTP_SERVER_VARS</var></var>&nbsp;包含着相同的信息，但它不是一个<a href="https://www.php.net/manual/zh/language.variables.superglobals.php" class="link">超全局变量</a>。 (注意&nbsp;<var class="varname"><var class="varname">$HTTP_SERVER_VARS</var></var>&nbsp;与&nbsp;<var class="varname"><var class="varname">$_SERVER</var></var>&nbsp;是不同的变量，PHP处理它们的方式不同)</span></p></blockquote></div><div class="refsect1 indices" id="refsect1-reserved.variables.server-indices"><p class="simpara">在&nbsp;<var class="varname"><var class="varname">$_SERVER</var></var>&nbsp;中，你也许能够，也许不能够找到下面的这些元素。注意，如果以<a href="https://www.php.net/manual/zh/features.commandline.php" class="link">命令行</a>方式运行 PHP，下面列出的元素几乎没有有效的(或是没有任何实际意义的)。</p><p class="para"></p><dl><dt>''<var class="varname">PHP_SELF</var>''&nbsp;<span class="simpara">当前执行脚本的文件名，与 document root 有关。例如，在地址为&nbsp;<var class="filename">http://example.com/foo/bar.php</var>&nbsp;的脚本中使用&nbsp;<var class="varname"><var class="varname">$_SERVER[''PHP_SELF'']</var></var>&nbsp;将得到&nbsp;<var class="filename">/foo/bar.php</var>。<a href="https://www.php.net/manual/zh/language.constants.predefined.php" class="link">__FILE__</a>&nbsp;常量包含当前(例如包含)文件的完整路径和文件名。&nbsp;</span><span class="simpara">从 PHP 4.3.0 版本开始，如果 PHP 以命令行模式运行，这个变量将包含脚本名。之前的版本该变量不可用。</span></dt><dt>''<a href="https://www.php.net/manual/zh/reserved.variables.argv.php" class="link">argv</a>''</dt><dd><span class="simpara">传递给该脚本的参数的数组。当脚本以命令行方式运行时，argv 变量传递给程序 C 语言样式的命令行参数。当通过 GET 方式调用时，该变量包含query string。</span></dd><dt>''<a href="https://www.php.net/manual/zh/reserved.variables.argc.php" class="link">argc</a>''</dt><dd><span class="simpara">包含命令行模式下传递给该脚本的参数的数目(如果运行在命令行模式下)。</span></dd><dt>''<var class="varname">GATEWAY_INTERFACE</var>''</dt><dd><span class="simpara">服务器使用的 CGI 规范的版本；例如，“<em>CGI/1.1</em>”。</span></dd><dt>''<var class="varname">SERVER_ADDR</var>''</dt><dd><span class="simpara">当前运行脚本所在的服务器的 IP 地址。</span></dd><dt>''<var class="varname">SERVER_NAME</var>''</dt><dd><span class="simpara">当前运行脚本所在的服务器的主机名。如果脚本运行于虚拟主机中，该名称是由那个虚拟主机所设置的值决定。</span><blockquote class="note"><p><span class="note">Note</span>:&nbsp;<span class="simpara">在 Apache 2 里，必须设置&nbsp;<em>UseCanonicalName = On</em>&nbsp;和&nbsp;<em>ServerName</em>。 否则该值会由客户端提供，就有可能被伪造。 上下文有安全性要求的环境里，不应该依赖此值。</span></p></blockquote></dd><dt>''<var class="varname">SERVER_SOFTWARE</var>''</dt><dd><span class="simpara">服务器标识字符串，在响应请求时的头信息中给出。</span></dd><dt>''<var class="varname">SERVER_PROTOCOL</var>''</dt><dd><span class="simpara">请求页面时通信协议的名称和版本。例如，“HTTP/1.0”。</span></dd><dt>''<var class="varname">REQUEST_METHOD</var>''</dt><dd><span class="simpara">访问页面使用的请求方法；例如，“<em>GET</em>”, “<em>HEAD</em>”，“<em>POST</em>”，“<em>PUT</em>”。</span><blockquote class="note"><p><span class="note">Note</span>:</p><p class="para">如果请求方法为&nbsp;<em>HEAD</em>，PHP 脚本将在发送 Header 头信息之后终止(这意味着在产生任何输出后，不再有输出缓冲)。</p></blockquote></dd><dt>''<var class="varname">REQUEST_TIME</var>''</dt><dd><span class="simpara">请求开始时的时间戳。从 PHP 5.1.0 起可用。</span></dd><dt>''<var class="varname">REQUEST_TIME_FLOAT</var>''</dt><dd><span class="simpara">请求开始时的时间戳，微秒级别的精准度。 自 PHP 5.4.0 开始生效。</span></dd><dt>''<var class="varname">QUERY_STRING</var>''</dt><dd><span class="simpara">query string（查询字符串），如果有的话，通过它进行页面访问。</span></dd><dt>''<var class="varname">DOCUMENT_ROOT</var>''</dt><dd><span class="simpara">当前运行脚本所在的文档根目录。在服务器配置文件中定义。</span></dd><dt>''<var class="varname">HTTP_ACCEPT</var>''</dt><dd><span class="simpara">当前请求头中&nbsp;<em>Accept:</em>&nbsp;项的内容，如果存在的话。</span></dd><dt>''<var class="varname">HTTP_ACCEPT_CHARSET</var>''</dt><dd><span class="simpara">当前请求头中&nbsp;<em>Accept-Charset:</em>&nbsp;项的内容，如果存在的话。例如：“<em>iso-8859-1,*,utf-8</em>”。</span></dd><dt>''<var class="varname">HTTP_ACCEPT_ENCODING</var>''</dt><dd><span class="simpara">当前请求头中&nbsp;<em>Accept-Encoding:</em>&nbsp;项的内容，如果存在的话。例如：“<em>gzip</em>”。</span></dd><dt>''<var class="varname">HTTP_ACCEPT_LANGUAGE</var>''</dt><dd><span class="simpara">当前请求头中&nbsp;<em>Accept-Language:</em>&nbsp;项的内容，如果存在的话。例如：“<em>en</em>”。</span></dd><dt>''<var class="varname">HTTP_CONNECTION</var>''</dt><dd><span class="simpara">当前请求头中&nbsp;<em>Connection:</em>&nbsp;项的内容，如果存在的话。例如：“<em>Keep-Alive</em>”。</span></dd><dt>''<var class="varname">HTTP_HOST</var>''</dt><dd><span class="simpara">当前请求头中&nbsp;<em>Host:</em>&nbsp;项的内容，如果存在的话。</span></dd><dt>''<var class="varname">HTTP_REFERER</var>''</dt><dd><span class="simpara">引导用户代理到当前页的前一页的地址（如果存在）。由 user agent 设置决定。并不是所有的用户代理都会设置该项，有的还提供了修改&nbsp;<var class="varname"><var class="varname">HTTP_REFERER</var></var>&nbsp;的功能。简言之，该值并不可信。</span></dd><dt>''<var class="varname">HTTP_USER_AGENT</var>''</dt><dd><span class="simpara">当前请求头中&nbsp;<em>User-Agent:</em>&nbsp;项的内容，如果存在的话。该字符串表明了访问该页面的用户代理的信息。一个典型的例子是：<span class="computeroutput">Mozilla/4.5 [en] (X11; U; Linux 2.2.9 i586)</span>。除此之外，你可以通过&nbsp;<span class="function"><a href="https://www.php.net/manual/zh/function.get-browser.php" class="function">get_browser()</a></span>&nbsp;来使用该值，从而定制页面输出以便适应用户代理的性能。</span></dd><dt>''<var class="varname">HTTPS</var>''</dt><dd><span class="simpara">如果脚本是通过 HTTPS 协议被访问，则被设为一个非空的值。</span><blockquote class="note"><p><span class="note">Note</span>:&nbsp;<span class="simpara">注意当使用 IIS 上的 ISAPI 方式时，如果不是通过 HTTPS 协议被访问，这个值将为&nbsp;<em>off</em>。</span></p></blockquote></dd><dt>''<var class="varname">REMOTE_ADDR</var>''</dt><dd><span class="simpara">浏览当前页面的用户的 IP 地址。</span></dd><dt>''<var class="varname">REMOTE_HOST</var>''</dt><dd><span class="simpara">浏览当前页面的用户的主机名。DNS 反向解析不依赖于用户的&nbsp;<var class="varname"><var class="varname">REMOTE_ADDR</var></var>。</span><blockquote class="note"><p><span class="note">Note</span>:&nbsp;<span class="simpara">你的服务器必须被配置以便产生这个变量。例如在 Apache 中，你需要在&nbsp;<var class="filename">httpd.conf</var>&nbsp;中设置&nbsp;<em>HostnameLookups On</em>&nbsp;来产生它。参见&nbsp;<span class="function"><a href="https://www.php.net/manual/zh/function.gethostbyaddr.php" class="function">gethostbyaddr()</a></span>。</span></p></blockquote></dd><dt>''<var class="varname">REMOTE_PORT</var>''</dt><dd><span class="simpara">用户机器上连接到 Web 服务器所使用的端口号。</span></dd><dt>''<var class="varname">REMOTE_USER</var>''</dt><dd><span class="simpara">经验证的用户</span></dd><dt>''<var class="varname">REDIRECT_REMOTE_USER</var>''</dt><dd><span class="simpara">验证的用户，如果请求已在内部重定向。</span></dd><dt>''<var class="varname">SCRIPT_FILENAME</var>''</dt><dd><p class="para">当前执行脚本的绝对路径。</p><blockquote class="note"><p><span class="note">Note</span>:</p><p class="para">如果在命令行界面（Command Line Interface, CLI）使用相对路径执行脚本，例如&nbsp;<var class="filename">file.php</var>&nbsp;或&nbsp;<var class="filename">../file.php</var>，那么&nbsp;<var class="varname"><var class="varname">$_SERVER[''SCRIPT_FILENAME'']</var></var>&nbsp;将包含用户指定的相对路径。</p></blockquote></dd><dt>''<var class="varname">SERVER_ADMIN</var>''</dt><dd><span class="simpara">该值指明了 Apache 服务器配置文件中的 SERVER_ADMIN 参数。如果脚本运行在一个虚拟主机上，则该值是那个虚拟主机的值。</span></dd><dt>''<var class="varname">SERVER_PORT</var>''</dt><dd><span class="simpara">Web 服务器使用的端口。默认值为 “<em>80</em>”。如果使用 SSL 安全连接，则这个值为用户设置的 HTTP 端口。</span><blockquote class="note"><p><span class="note">Note</span>:&nbsp;<span class="simpara">在 Apache 2 里，为了获取真实物理端口，必须设置&nbsp;<em>UseCanonicalName = On</em>&nbsp;以及&nbsp;<em>UseCanonicalPhysicalPort = On</em>。 否则此值可能被伪造，不一定会返回真实端口值。 上下文有安全性要求的环境里，不应该依赖此值。</span></p></blockquote></dd><dt>''<var class="varname">SERVER_SIGNATURE</var>''</dt><dd><span class="simpara">包含了服务器版本和虚拟主机名的字符串。</span></dd><dt>''<var class="varname">PATH_TRANSLATED</var>''</dt><dd><span class="simpara">当前脚本所在文件系统（非文档根目录）的基本路径。这是在服务器进行虚拟到真实路径的映像后的结果。</span><blockquote class="note"><p><span class="note">Note</span>:&nbsp;<span class="simpara">自 PHP 4.3.2 起，<var class="envar">PATH_TRANSLATED</var>&nbsp;在 Apache 2&nbsp;<acronym title="Server Application Programming Interface">SAPI</acronym>&nbsp;模式下不再和 Apache 1 一样隐含赋值，而是若 Apache 不生成此值，PHP 便自己生成并将其值放入&nbsp;<var class="envar">SCRIPT_FILENAME</var>&nbsp;服务器常量中。这个修改遵守了&nbsp;<acronym title="Common Gateway Interface">CGI</acronym>&nbsp;规范，<var class="envar">PATH_TRANSLATED</var>&nbsp;仅在&nbsp;<var class="envar">PATH_INFO</var>&nbsp;被定义的条件下才存在。&nbsp;</span><span class="simpara">Apache 2 用户可以在&nbsp;<var class="filename">httpd.conf</var>&nbsp;中设置&nbsp;<em>AcceptPathInfo = On</em>&nbsp;来定义&nbsp;<var class="envar">PATH_INFO</var>。</span></p></blockquote></dd><dt>''<var class="varname">SCRIPT_NAME</var>''</dt><dd><span class="simpara">包含当前脚本的路径。这在页面需要指向自己时非常有用。<a href="https://www.php.net/manual/zh/language.constants.predefined.php" class="link">__FILE__</a>&nbsp;常量包含当前脚本(例如包含文件)的完整路径和文件名。</span></dd><dt>''<var class="varname">REQUEST_URI</var>''</dt><dd><span class="simpara">URI 用来指定要访问的页面。例如 “<em>/index.html</em>”。</span></dd><dt>''<var class="varname">PHP_AUTH_DIGEST</var>''</dt><dd><span class="simpara">当作为 Apache 模块运行时，进行 HTTP Digest 认证的过程中，此变量被设置成客户端发送的“Authorization” HTTP 头内容（以便作进一步的认证操作）。</span></dd><dt>''<var class="varname">PHP_AUTH_USER</var>''</dt><dd><span class="simpara">当 PHP 运行在 Apache 或 IIS（PHP 5 是 ISAPI）模块方式下，并且正在使用 HTTP 认证功能，这个变量便是用户输入的用户名。</span></dd><dt>''<var class="varname">PHP_AUTH_PW</var>''</dt><dd><span class="simpara">当 PHP 运行在 Apache 或 IIS（PHP 5 是 ISAPI）模块方式下，并且正在使用 HTTP 认证功能，这个变量便是用户输入的密码。</span></dd><dt>''<var class="varname">AUTH_TYPE</var>''</dt><dd><span class="simpara">当 PHP 运行在 Apache 模块方式下，并且正在使用 HTTP 认证功能，这个变量便是认证的类型。</span></dd><dt>''<var class="varname">PATH_INFO</var>''</dt><dd><span class="simpara">包含由客户端提供的、跟在真实脚本名称之后并且在查询语句（query string）之前的路径信息，如果存在的话。例如，如果当前脚本是通过 URL&nbsp;<var class="filename">http://www.example.com/php/path_info.php/some/stuff?foo=bar</var>被访问，那么&nbsp;<var class="varname"><var class="varname">$_SERVER[''PATH_INFO'']</var></var>&nbsp;将包含&nbsp;<em>/some/stuff</em>。</span></dd><dt>''<var class="varname">ORIG_PATH_INFO</var>''</dt><p><span class="simpara">在被 PHP 处理之前，“<var class="varname"><var class="varname">PATH_INFO</var></var>” 的原始版本。</span></p><p><span class="simpara"><br></span></p><p><b>$_GET</b></p><div class="refnamediv"><p class="refpurpose"><span class="refname">$_GET</span>&nbsp;--&nbsp;<span class="refname">$HTTP_GET_VARS [已弃用]</span>&nbsp;—&nbsp;<span class="dc-title">HTTP GET 变量</span></p></div><div class="refsect1 description" id="refsect1-reserved.variables.get-description"><h3 class="title">说明</h3><p class="para">通过 URL 参数传递给当前脚本的变量的数组。</p><p class="simpara"><var class="varname"><var class="varname">$HTTP_GET_VARS</var></var>&nbsp;包含相同的信息， 但它不是一个<a href="https://www.php.net/manual/zh/language.variables.superglobals.php" class="link">超全局变量</a>。 (注意&nbsp;<var class="varname"><var class="varname">$HTTP_GET_VARS</var></var>&nbsp;和&nbsp;<var class="varname"><var class="varname">$_GET</var></var>&nbsp;是不同的变量，PHP 处理它们的方式不同)</p></div><div class="refsect1 examples" id="refsect1-reserved.variables.get-examples"><h3 class="title">范例</h3><p class="para"></p><div class="example" id="example-296"><p><span>Example #1&nbsp;<var class="varname"><var class="varname">$_GET</var></var>&nbsp;范例</span></p><div class="example-contents"><div class="phpcode"><code><span><span>&lt;?php<br></span><span>echo&nbsp;</span><span>''Hello&nbsp;''&nbsp;</span><span>.&nbsp;</span><span>htmlspecialchars</span><span>(</span><span>$_GET</span><span>[</span><span>"name"</span><span>])&nbsp;.&nbsp;</span><span>''!''</span><span>;<br></span><span>?&gt;</span></span></code></div></div><div class="example-contents"><p>假设用户访问的是 http://example.com/?name=Hannes</p></div><div class="example-contents"><p>以上例程的输出类似于：</p></div><div class="example-contents screen"><div class="cdata"><pre>Hello Hannes!</pre></div></div></div></div><div class="refsect1 notes" id="refsect1-reserved.variables.get-notes"><blockquote class="note"><p class="para">“Superglobal”也称为自动化的全局变量。这就表示其在脚本的所有作用域中都是可用的。不需要在函数或方法中用&nbsp;<span class="command">global $variable;</span>&nbsp;来访问它。</p></blockquote><blockquote class="note"><p class="para">GET 是通过&nbsp;<span class="function"><a href="https://www.php.net/manual/zh/function.urldecode.php" class="function">urldecode()</a></span>&nbsp;传递的。</p></blockquote></div><div class="refsect1 notes" id="refsect1-reserved.variables.get-notes"><p class="para"><br></p></div><div class="refsect1 notes" id="refsect1-reserved.variables.get-notes"><p class="para"><b>$_POST</b></p></div><div class="refsect1 notes" id="refsect1-reserved.variables.get-notes"><p class="para">当 HTTP POST 请求的 Content-Type 是&nbsp;<em>application/x-www-form-urlencoded</em>&nbsp;或&nbsp;<em>multipart/form-data</em>&nbsp;时，会将变量以关联数组形式传入当前脚本。</p><p class="simpara"><var class="varname"><var class="varname">$HTTP_POST_VARS</var></var>&nbsp;包含相同的信息，但它不是一个<a href="https://www.php.net/manual/zh/language.variables.superglobals.php" class="link">超全局变量</a>。 (注意&nbsp;<var class="varname"><var class="varname">$HTTP_POST_VARS</var></var>&nbsp;和&nbsp;<var class="varname"><var class="varname">$_POST</var></var>&nbsp;是不同的变量，PHP 处理它们的方式不同)</p></div><div class="refsect1 notes" id="refsect1-reserved.variables.get-notes"><p class="simpara"><br></p></div><div class="refsect1 notes" id="refsect1-reserved.variables.get-notes"><p class="refpurpose"><b><span class="refname">$_</span>FILES</b></p></div><div class="refsect1 notes" id="refsect1-reserved.variables.get-notes"><div class="refnamediv"><p class="refpurpose"><span class="refname">$_FILES</span>&nbsp;--&nbsp;<span class="refname">$HTTP_POST_FILES [已弃用]</span>&nbsp;—&nbsp;<span class="dc-title">HTTP 文件上传变量</span></p></div><div class="refsect1 description" id="refsect1-reserved.variables.files-description"><p class="para">通过 HTTP POST 方式上传到当前脚本的项目的<span class="type">数组</span>。 此数组的概况在&nbsp;<a href="https://www.php.net/manual/zh/features.file-upload.post-method.php" class="link">POST 方法上传</a>&nbsp;章节中有描述。</p><p class="simpara"><var class="varname"><var class="varname">$HTTP_POST_FILES</var></var>&nbsp;包含相同的信息，但它不是一个<a href="https://www.php.net/manual/zh/language.variables.superglobals.php" class="link">超全局变量</a>。 (注意&nbsp;<var class="varname"><var class="varname">$HTTP_POST_FILES</var></var>&nbsp;和&nbsp;<var class="varname"><var class="varname">$_FILES</var></var>&nbsp;是不同的变量，PHP 处理它们的方式不同)</p></div></div><div class="refsect1 notes" id="refsect1-reserved.variables.get-notes"><p class="simpara"><br></p></div><div class="refsect1 notes" id="refsect1-reserved.variables.get-notes"><p class="simpara"><b>$_REQUEST</b></p></div><div class="refsect1 notes" id="refsect1-reserved.variables.get-notes"><div class="refnamediv"><p class="refpurpose">$_REQUEST —&nbsp;<span class="dc-title">HTTP Request 变量</span></p></div><div class="refsect1 description" id="refsect1-reserved.variables.request-description"><p class="para">默认情况下包含了&nbsp;<var class="varname"><var class="varname"><a href="https://www.php.net/manual/zh/reserved.variables.get.php" class="classname">$_GET</a></var></var>，<var class="varname"><var class="varname"><a href="https://www.php.net/manual/zh/reserved.variables.post.php" class="classname">$_POST</a></var></var>&nbsp;和&nbsp;<var class="varname"><var class="varname"><a href="https://www.php.net/manual/zh/reserved.variables.cookies.php" class="classname">$_COOKIE</a></var></var>&nbsp;的<span class="type">数组</span>。</p></div></div><div class="refsect1 notes" id="refsect1-reserved.variables.get-notes"><p class="para"><br></p></div><div class="refsect1 notes" id="refsect1-reserved.variables.get-notes"><p class="refpurpose"><b>$_SESSION</b></p></div><div class="refsect1 notes" id="refsect1-reserved.variables.get-notes"><div class="refnamediv"><p class="refpurpose"><span class="refname">$_SESSION</span>&nbsp;--&nbsp;<span class="refname">$HTTP_SESSION_VARS [已弃用]</span>&nbsp;—&nbsp;<span class="dc-title">Session 变量</span></p></div><div class="refsect1 description" id="refsect1-reserved.variables.session-description"><p class="para">当前脚本可用 SESSION 变量的数组。更多关于如何使用的信息，参见&nbsp;<a href="https://www.php.net/manual/zh/ref.session.php" class="link">Session 函数</a>&nbsp;文档。</p><p class="simpara"><var class="varname"><var class="varname">$HTTP_SESSION_VARS</var></var>&nbsp;包含相同的信息，但它不是一个<a href="https://www.php.net/manual/zh/language.variables.superglobals.php" class="link">超全局变量</a>。 (注意&nbsp;<var class="varname"><var class="varname">$HTTP_SESSION_VARS</var></var>&nbsp;和&nbsp;<var class="varname"><var class="varname">$_SESSION</var></var>是不同的变量，PHP 处理它们的方式不同)</p></div></div><div class="refsect1 notes" id="refsect1-reserved.variables.get-notes"><p class="simpara"><b><br></b></p></div><div class="refsect1 notes" id="refsect1-reserved.variables.get-notes"><p class="simpara"><b>$_ENV</b></p></div><div class="refsect1 notes" id="refsect1-reserved.variables.get-notes"><div class="refnamediv"><p class="refpurpose"><span class="refname">$_ENV</span>&nbsp;--&nbsp;<span class="refname">$HTTP_ENV_VARS [已弃用]</span>&nbsp;—&nbsp;<span class="dc-title">环境变量</span></p></div><div class="refsect1 description" id="refsect1-reserved.variables.environment-description"><p class="para">通过环境方式传递给当前脚本的变量的<span class="type">数组</span>。</p><p class="simpara">这些变量被从 PHP 解析器的运行环境导入到 PHP 的全局命名空间。很多是由支持 PHP 运行的 Shell 提供的，并且不同的系统很可能运行着不同种类的 Shell，所以不可能有一份确定的列表。请查看你的 Shell 文档来获取定义的环境变量列表。</p><p class="simpara">其他环境变量包含了 CGI 变量，而不管 PHP 是以服务器模块还是 CGI 处理器的方式运行。</p><p class="simpara"><var class="varname"><var class="varname">$HTTP_ENV_VARS</var></var>&nbsp;包含相同的信息，但它不是一个<a href="https://www.php.net/manual/zh/language.variables.superglobals.php" class="link">超全局变量</a>。 (注意&nbsp;<var class="varname"><var class="varname">$HTTP_ENV_VARS</var></var>&nbsp;和&nbsp;<var class="varname"><var class="varname">$_ENV</var></var>&nbsp;是不同的变量，PHP 处理它们的方式不同)</p></div></div><div class="refsect1 notes" id="refsect1-reserved.variables.get-notes"><p><b><span class="refname"><br></span></b></p></div><div class="refsect1 notes" id="refsect1-reserved.variables.get-notes"><p><b><span class="refname">$_COOKIE</span>&nbsp;</b></p></div><div class="refsect1 notes" id="refsect1-reserved.variables.get-notes"><div class="refnamediv"><p class="refpurpose"><span class="refname">$_COOKIE</span>&nbsp;--&nbsp;<span class="refname">$HTTP_COOKIE_VARS [已弃用]</span>&nbsp;—&nbsp;<span class="dc-title">HTTP Cookies</span></p></div><div class="refsect1 description" id="refsect1-reserved.variables.cookies-description"><p class="para">通过 HTTP Cookies 方式传递给当前脚本的变量的<span class="type">数组</span>。</p><p class="simpara"><var class="varname"><var class="varname">$HTTP_COOKIE_VARS</var></var>&nbsp;包含相同的信息，但它不是一个<a href="https://www.php.net/manual/zh/language.variables.superglobals.php" class="link">超全局变量</a>。 (注意&nbsp;<var class="varname"><var class="varname">$HTTP_COOKIE_VARS</var></var>&nbsp;和&nbsp;<var class="varname"><var class="varname">$_COOKIE</var></var>&nbsp;是不同的变量，PHP 处理它们的方式不同)</p></div></div><div class="refsect1 notes" id="refsect1-reserved.variables.get-notes"><p class="simpara"><br></p></div><div class="refsect1 notes" id="refsect1-reserved.variables.get-notes"><p class="simpara">以上大概就是这些吧</p></div><div class="refsect1 notes" id="refsect1-reserved.variables.get-notes"><p><br></p></div><div class="refsect1 notes" id="refsect1-reserved.variables.get-notes"><p class="simpara"><br></p></div></dl></div></li>', 16),
(156, '如何通过命令行连接mysql', 100, 0, '2019-04-09 03:43:39', '/upload/20190409/eacd02dfba43340c7b487be81ec3aa39.jpg', 2, '利用cmd命令进入mysql数据库', 'Mrs.默先森', 65, 0, '<p>1.打开cmd。</p><p><img src="/editUpload/20190409/2b21a5925514ee40ee63e17c2ecb19bb.png" alt="undefined"><br></p><p>2.输入电脑上mysql安装的盘路径：之后回车</p><p><br></p><p><img src="https://img-blog.csdn.net/20180119163435036?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzg1MTc1NTE=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"></p><p><br></p><p>3.输入完整的mysql.exe安装路径：cd D:\\mysql\\bin&nbsp; 之后回车</p><p><img src="https://img-blog.csdn.net/20180119163732267?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzg1MTc1NTE=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"></p><p><br></p><p>4.输入mysal -hlocalhost -uroot（数据库名称） -p*****(数据库的密码) 之后回车</p><p>注：每个-前都有空格</p><p><img src="https://img-blog.csdn.net/20180119163935203?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzg1MTc1NTE=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"></p><p><br></p><p>5.此时已进入mysql数据库，可以根据show databases;语句显示现有的数据库</p><p><img src="https://img-blog.csdn.net/20180119164334744?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzg1MTc1NTE=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"></p><p><br></p><p>6.也可以对数据库进行操作，例如创造一个新的数据库：create database demo;</p><p><img src="https://img-blog.csdn.net/20180119164614066?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzg1MTc1NTE=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"></p><p><br></p><p>7.最后，输入exit; 便可退出操作。</p><p><br></p>', 8);
INSERT INTO `blog_article` (`arc_id`, `arc_title`, `arc_sort`, `sendtime`, `updatetime`, `arc_thumb`, `is_recycle`, `arc_digest`, `arc_author`, `cate_id`, `admin_id`, `arc_content`, `arc_click`) VALUES
(157, 'MySQL基础', 100, 0, '2019-04-09 03:48:32', '/upload/20190409/3612a78dfcffe29db5ba02c118f6337f.jpg', 2, '在工作和学习中 我们通常使用数据库来进行一系列的操作，对数据的增删改查，操作很频繁，所以，在这里我总结了一小部分，有需要的可以看看。', 'Mrs.默先森', 65, 0, '<p style="text-align: center;"><span>MySQL基础</span></p><p><span>一、MySQL概述</span></p><p><span>1、什么是数据库 ？</span><br><span>　答：数据的仓库，如：在ATM的示例中我们创建了一个 db 目录，称其为数据库</span></p><p><span>2、什么是 MySQL、Oracle、SQLite、Access、MS SQL Server等 ？</span><br><span>　答：他们均是一个软件，都有两个主要的功能：</span></p><ul><ul><li><span>a. 将数据保存到文件或内存</span></li><li><span>b. 接收特定的命令，然后对文件进行相应的操作</span></li></ul></ul><p><span><span><span>3、什么是SQL ？</span><br><em>　</em>答：MySQL等软件可以接受命令，并做出相应的操作，由于命令中可以包含删除文件、获取文件内容等众多操作，对于编写的命令就是是SQL语句。</span></span></p><p><span>二、MySQL安装</span></p><p><span>&nbsp; &nbsp; &nbsp; MySQL是一个关系型数据库管理系统，由瑞典MySQL AB 公司开发，目前属于 Oracle 旗下公司。MySQL 最流行的关系型数据库管理系统，在 WEB 应用方面MySQL是最好的 RDBMS (Relational Database Management System，关系数据库管理系统) 应用软件之一。</span></p><p><span>想要使用MySQL来存储并操作数据，则需要做几件事情：</span><br><span>　　a. 安装MySQL服务端</span><br><span>　　b. 安装MySQL客户端</span><br><span>　　b. 【客户端】连接【服务端】</span><br><span>　　c. 【客户端】发送命令给【服务端MySQL】服务的接受命令并执行相应操作(增删改查等)</span></p><p>&nbsp;</p><div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div><pre><span><span>    下载\r\n           http:</span>//dev.mysql.com/downloads/mysql/<span>    \r\n    安装\r\n         windows：             \r\n              http:</span>//jingyan.baidu.com/article/<span>f3ad7d0ffc061a09c3345bf0.html\r\n\r\n          linux：\r\n               yum install mysql</span>-<span>server\r\n           mac：\r\n               一直点下一步</span></span></pre><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div><p>&nbsp;</p><p>客户端连接</p><div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div><pre><span><span> 连接：\r\n      </span><span>1</span><span>、mysql管理人默认为root，没有设置密码则直接登录\r\n               mysql </span>-h host -u root  -<span>p 不用输入密码按回车自动进入\r\n      </span><span>2</span><span>、如果想设置mysql密码\r\n               mysqladmin </span>-u root password <span>123456</span>\r\n      <span>3</span>、如果你的root现在有密码了（<span>123456</span><span>），那么修改密码为abcdef的命令是：\r\n              mysqladmin </span>-u root -<span>p password abcdef\r\n 退出：\r\n       QUIT 或者 Control</span>+D</span></pre><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div><p><span>三、数据库基础</span></p><p><span>&nbsp;分为两大部分：<br></span></p><p><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1、数据库和表的创建;</span></p><p><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2、数据库和表内容的操作</span></p><p style="text-align: center;"><span>&nbsp;<span>数据库操作-思路图</span></span></p><p><span>&nbsp;</span><span><img src="https://images2015.cnblogs.com/blog/875796/201608/875796-20160817223356796-2033052989.png" alt="" width="795" height="458"></span></p><p><span>1、数据库和表的创建</span></p><p><span>&nbsp; &nbsp;&nbsp;<span>&nbsp;（一）数据库的创建</span></span></p><p><span>&nbsp;</span>&nbsp;<strong><span>1.1、显示数据库</span></strong></p><div class="cnblogs_code"><pre><span><span>1</span> SHOW DATABASES;</span></pre></div><p><span>&nbsp; &nbsp; 默认数据库：</span><br><span>　 &nbsp; &nbsp;　　　 &nbsp;mysql - 用户权限相关数据</span><br><span>　　　　　　test - 用于用户测试数据</span><br><span>　　　　　　information_schema - MySQL本身架构相关数据</span></p><p><span>&nbsp;&nbsp;<strong>1.2、创建数据库</strong></span></p><div class="cnblogs_code"><pre><span>  # utf-<span>8</span><span>\r\n  CREATE DATABASE 数据库名称 DEFAULT CHARSET utf8 COLLATE utf8_general_ci;\r\n \r\n  # gbk\r\n  CREATE DATABASE 数据库名称 DEFAULT CHARACTER SET gbk COLLATE gbk_chinese_ci;</span></span></pre></div><p><span>&nbsp;&nbsp;<strong>1.3、打开数据库</strong></span></p><div class="cnblogs_code"><pre><span>  USE db_name;</span><br><span>  注：每次使用数据库必须打开相应数据库</span></pre></div><p><span>显示当前使用的数据库中所有表：SHOW TABLES;</span></p><p><span>&nbsp;<span><strong>1.4、用户管理</strong></span></span></p><p><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 用户设置:</span></p><div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div><pre><span>创建用户\r\n    create user </span><span>''</span><span>用户名</span><span>''</span>@<span>''</span><span>IP地址</span><span>''</span> identified by <span>''</span><span>密码</span><span>''</span><span>;\r\n删除用户\r\n    drop user </span><span>''</span><span>用户名</span><span>''</span>@<span>''</span><span>IP地址</span><span>''</span><span>;\r\n修改用户\r\n    rename user </span><span>''</span><span>用户名</span><span>''</span>@<span>''</span><span>IP地址</span><span>''</span>; to <span>''</span><span>新用户名</span><span>''</span>@<span>''</span><span>IP地址</span><span>''</span><span>;;\r\n修改密码\r\n    set password </span><span>for</span> <span>''</span><span>用户名</span><span>''</span>@<span>''</span><span>IP地址</span><span>''</span> = Password(<span>''</span><span>新密码</span><span>''</span><span>)\r\n  \r\nPS：用户权限相关数据保存在mysql数据库的user表中，所以也可以直接对其进行操作（不建议）</span></pre><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div><p><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 用户权限设置:</span></p><div class="cnblogs_code"><pre>show grants <span>for</span> <span>''</span><span>用户</span><span>''</span>@<span>''</span><span>IP地址</span><span>''</span>                  --<span> 查看权限\r\ngrant  权限 on 数据库.表 to   </span><span>''</span><span>用户</span><span>''</span>@<span>''</span><span>IP地址</span><span>''</span>      --<span> 授权\r\nrevoke 权限 on 数据库.表 from </span><span>''</span><span>用户</span><span>''</span>@<span>''</span><span>IP地址</span><span>''</span>      -- 取消权限</pre></div><div class="cnblogs_code"><img id="code_img_closed_daa15569-b6f4-4dfb-9f09-ba9b655c2e35" class="code_img_closed" src="https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" alt="">&nbsp;<span class="cnblogs_code_collapse">对于权限设置</span></div><div class="cnblogs_code"><img id="code_img_closed_d1872fec-c79d-4c42-bd89-ce3d2666a88b" class="code_img_closed" src="https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" alt="">&nbsp;<span class="cnblogs_code_collapse">对于数据库名的解释</span></div><div class="cnblogs_code"><img id="code_img_closed_579c74a8-615b-411b-990b-0dc713746319" class="code_img_closed" src="https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" alt="">&nbsp;<span class="cnblogs_code_collapse">对于ip地址的访问</span></div><div class="cnblogs_code"><img id="code_img_closed_cc38f24b-d6f0-4a73-b5bd-e467259664a7" class="code_img_closed" src="https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" alt="">&nbsp;<span class="cnblogs_code_collapse">实际例子</span></div><p><span><span>1.4、备份库和恢复库</span></span></p><p><span><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;备份库：</span></span></p><p><span><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;MySQL备份和还原,都是利用mysqldump、mysql和source命令来完成。</span></span></p><p><span><strong>&nbsp;&nbsp;</strong>&nbsp; &nbsp; 1.在Windows下MySQL的备份与还原</span></p><div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div><pre><span><span>备份</span> \r\n</span><span><span>1</span>、开始菜单 <span>|</span> 运行 <span>|</span> cmd <span>|</span>利用“cd <span>/</span>Program Files<span>/</span>MySQL<span>/</span>MySQL Server <span>5.0</span><span>/</span><span>bin”命令进入bin文件夹 \r\n</span><span>2</span>、利用“mysqldump  <span>-</span>u 用户名 <span>-</span>p databasename <span>&gt;</span>exportfilename”导出数据库到文件，如mysqldump <span>-</span>u root <span>-</span>p voice<span>&gt;</span></span><span><span>voice.sql，然后输入密码即可开始导出。 </span>\r\n  \r\n<span>还原</span> \r\n</span><span><span>1</span>、进入MySQL Command Line Client，输入密码，进入到“mysql<span>&gt;</span><span>”。\r\n</span><span>2</span>、输入命令"show databases；"，回车，看看有些什么数据库；建立你要还原的数据库，输入"<span>create</span> <span>database</span><span> voice；"，回车。\r\n</span><span>3</span>、切换到刚建立的数据库，输入"<span>use</span> voice；"，回车；导入数据，输入"source voice.sql；"，回车，开始导入，再次出现"mysql<span>&gt;</span>"并且没有提示错误即还原成功。</span> </pre><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div><p>&nbsp; &nbsp;<span>&nbsp;&nbsp;2、在linux下MySQL的备份与还原</span></p><div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div><pre><span><span>2.1</span><span> 备份(利用命令mysqldump进行备份)\r\n</span></span><span><span>   [</span><span>root@localhost mysql</span><span>]</span># mysqldump <span>-</span>u root <span>-</span>p voice<span>&gt;</span><span>voice.sql，输入密码即可。\r\n</span></span><span>2.2</span><span><span> 还原</span>\r\n<span>方法一：\r\n</span></span><span><span>   [</span><span>root@localhost ~</span><span>]</span># mysql <span>-</span>u root <span>-</span>p 回车，输入密码，进入MySQL的控制台"mysql<span>&gt;</span><span>"，同1.2还原。\r\n方法二：\r\n</span><span>   [</span><span>root@localhost mysql</span><span>]</span># mysql <span>-</span>u root <span>-</span>p voice<span>&lt;</span>voice.sql，输入密码即可。</span></pre><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div><p>&nbsp; &nbsp; 3、更多备份及还原命令</p><div class="cnblogs_code"><img id="code_img_closed_41f61213-358d-477a-9d76-01a2ef871f47" class="code_img_closed" src="https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" alt="">&nbsp;<span class="cnblogs_code_collapse">更多备份</span></div><p>更多备份知识：</p><p>http://www.jb51.net/article/41570.htm</p><p><span><span>（二）数据表的创建</span></span></p><p><span><span>&nbsp;<span><strong>1.1、显示数据表</strong></span></span></span></p><div class="cnblogs_code"><pre><span>show tables;</span></pre></div><p><span>&nbsp;<strong>1.2、创建数据表</strong></span></p><div class="cnblogs_code"><pre><span><span>create table 表名(\r\n    列名  类型  是否可以为空，\r\n    列名  类型  是否可以为空\r\n)ENGINE</span>=InnoDB DEFAULT CHARSET=utf8</span></pre></div><p>&nbsp;</p><div class="cnblogs_code"><img id="code_img_closed_d6bc071a-13e9-4ccc-accc-1a8b464caace" class="code_img_closed" src="https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" alt="">&nbsp;<span class="cnblogs_code_collapse">设置是否为空</span></div><div class="cnblogs_code"><img id="code_img_closed_fcf0cae7-d1d7-4abb-a529-b6cabfd97360" class="code_img_closed" src="https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" alt="">&nbsp;<span class="cnblogs_code_collapse">设置默认值</span></div><div class="cnblogs_code"><img id="code_img_closed_1c88dbfe-159f-4623-96e3-ebd78284e464" class="code_img_closed" src="https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" alt="">&nbsp;<span class="cnblogs_code_collapse">设置自增</span></div><div class="cnblogs_code"><img id="code_img_closed_4f352d42-3474-4cd3-94e0-eebaa8c5a1b7" class="code_img_closed" src="https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" alt="">&nbsp;<span class="cnblogs_code_collapse">设置主键</span></div><div class="cnblogs_code"><img id="code_img_closed_2aeb43c7-52af-415f-9942-85c5c59b3505" class="code_img_closed" src="https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" alt="">&nbsp;<span class="cnblogs_code_collapse">设置外键</span></div><p><span>主键与外键关系(非常重要)</span></p><p><span>http://www.cnblogs.com/programmer-tlh/p/5782451.html</span></p><p><span>&nbsp;1.3删除表</span></p><div class="cnblogs_code"><pre><span>drop table 表名</span></pre></div><p><span>1.4、清空表</span></p><div class="cnblogs_code"><pre><span>delete <span>from</span><span> 表名\r\ntruncate table 表名</span></span></pre></div><p><span>1.5、基本数据类型</span></p><p><span>MySQL的数据类型大致分为：数值、时间和字符串</span></p><div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div><pre><span>   bit[(M)]\r\n            二进制位（</span><span>101001</span>），m表示二进制位的长度（<span>1</span>-<span>64</span>），默认m＝<span>1</span><span>\r\n\r\n        tinyint[(m)] [unsigned] [zerofill]\r\n\r\n            小整数，数据类型用于保存一些范围的整数数值范围：\r\n            有符号：\r\n                </span>-<span>128</span> ～ <span>127</span><span>.\r\n            无符号：\r\n                </span><span>0</span> ～ <span>255</span><span>\r\n\r\n            特别的： MySQL中无布尔值，使用tinyint(</span><span>1</span><span>)构造。\r\n\r\n        </span><span>int</span><span>[(m)][unsigned][zerofill]\r\n\r\n            整数，数据类型用于保存一些范围的整数数值范围：\r\n                有符号：\r\n                    </span>-<span>2147483648</span> ～ <span>2147483647</span><span>\r\n                无符号：\r\n                    </span><span>0</span> ～ <span>4294967295</span><span>\r\n\r\n            特别的：整数类型中的m仅用于显示，对存储范围无限制。例如： </span><span>int</span>(<span>5</span>),当插入数据2时，<span>select</span> 时数据显示为： <span>00002</span><span>\r\n\r\n        bigint[(m)][unsigned][zerofill]\r\n            大整数，数据类型用于保存一些范围的整数数值范围：\r\n                有符号：\r\n                    </span>-<span>9223372036854775808</span> ～ <span>9223372036854775807</span><span>\r\n                无符号：\r\n                    </span><span>0</span>  ～  <span>18446744073709551615</span>\r\n\r\n        <span>decimal</span><span>[(m[,d])] [unsigned] [zerofill]\r\n            准确的小数值，m是数字总个数（负号不算），d是小数点后个数。 m最大值为65，d最大值为30。\r\n\r\n            特别的：对于精确数值计算时需要用此类型\r\n                   decaimal能够存储精确值的原因在于其内部按照字符串存储。\r\n\r\n        FLOAT[(M,D)] [UNSIGNED] [ZEROFILL]\r\n            单精度浮点数（非准确小数值），m是数字总个数，d是小数点后个数。\r\n                无符号：\r\n                    </span>-<span>3.402823466E+38</span> to -<span>1.175494351E-38</span><span>,\r\n                    </span><span>0</span>\r\n                    <span>1.175494351E-38</span> to <span>3.402823466E+38</span><span>\r\n                有符号：\r\n                    </span><span>0</span>\r\n                    <span>1.175494351E-38</span> to <span>3.402823466E+38</span>\r\n\r\n            **** 数值越大，越不准确 ****<span>\r\n\r\n        DOUBLE[(M,D)] [UNSIGNED] [ZEROFILL]\r\n            双精度浮点数（非准确小数值），m是数字总个数，d是小数点后个数。\r\n\r\n                无符号：\r\n                    </span>-<span>1.7976931348623157E+308</span> to -<span>2.2250738585072014E-308</span>\r\n                    <span>0</span>\r\n                    <span>2.2250738585072014E-308</span> to <span>1.7976931348623157E+308</span><span>\r\n                有符号：\r\n                    </span><span>0</span>\r\n                    <span>2.2250738585072014E-308</span> to <span>1.7976931348623157E+308</span>\r\n            **** 数值越大，越不准确 ****\r\n\r\n\r\n        <span>char</span><span> (m)\r\n            char数据类型用于表示固定长度的字符串，可以包含最多达255个字符。其中m代表字符串的长度。\r\n            PS: 即使数据小于m长度，也会占用m长度\r\n        varchar(m)\r\n            varchars数据类型用于变长的字符串，可以包含最多达255个字符。其中m代表该数据类型所允许保存的字符串的最大长度，只要长度小于该最大值的字符串都可以被保存在该数据类型中。\r\n\r\n            注：虽然varchar使用起来较为灵活，但是从整个系统的性能角度来说，char数据类型的处理速度更快，有时甚至可以超出varchar处理速度的50</span>%<span>。因此，用户在设计数据库时应当综合考虑各方面的因素，以求达到最佳的平衡\r\n\r\n        text\r\n            text数据类型用于保存变长的大字符串，可以组多到65535 (</span><span>2</span>**<span>16</span> − <span>1</span><span>)个字符。\r\n\r\n        mediumtext\r\n            A TEXT column with a maximum length of </span><span>16</span>,<span>777</span>,<span>215</span> (<span>2</span>**<span>24</span> − <span>1</span><span>) characters.\r\n\r\n        longtext\r\n            A TEXT column with a maximum length of </span><span>4</span>,<span>294</span>,<span>967</span>,<span>295</span> or 4GB (<span>2</span>**<span>32</span> − <span>1</span><span>) characters.\r\n\r\n\r\n        </span><span>enum</span><span>\r\n            枚举类型，\r\n            An ENUM column can have a maximum of </span><span>65</span>,<span>535</span> distinct elements. (The practical limit <span>is</span> less than <span>3000</span><span>.)\r\n            示例：\r\n                CREATE TABLE shirts (\r\n                    name VARCHAR(</span><span>40</span><span>),\r\n                    size ENUM(</span><span>''</span><span>x-small</span><span>''</span>, <span>''</span><span>small</span><span>''</span>, <span>''</span><span>medium</span><span>''</span>, <span>''</span><span>large</span><span>''</span>, <span>''</span><span>x-large</span><span>''</span><span>)\r\n                );\r\n                INSERT INTO shirts (name, size) VALUES (</span><span>''</span><span>dress shirt</span><span>''</span>,<span>''</span><span>large</span><span>''</span>), (<span>''</span><span>t-shirt</span><span>''</span>,<span>''</span><span>medium</span><span>''</span>),(<span>''</span><span>polo shirt</span><span>''</span>,<span>''</span><span>small</span><span>''</span><span>);\r\n\r\n        </span><span>set</span><span>\r\n            集合类型\r\n            A SET column can have a maximum of </span><span>64</span><span> distinct members.\r\n            示例：\r\n                CREATE TABLE myset (col SET(</span><span>''</span><span>a</span><span>''</span>, <span>''</span><span>b</span><span>''</span>, <span>''</span><span>c</span><span>''</span>, <span>''</span><span>d</span><span>''</span><span>));\r\n                INSERT INTO myset (col) VALUES (</span><span>''</span><span>a,d</span><span>''</span>), (<span>''</span><span>d,a</span><span>''</span>), (<span>''</span><span>a,d,a</span><span>''</span>), (<span>''</span><span>a,d,d</span><span>''</span>), (<span>''</span><span>d,a,d</span><span>''</span><span>);\r\n\r\n        DATE\r\n            YYYY</span>-MM-DD（<span>1000</span>-<span>01</span>-<span>01</span>/<span>9999</span>-<span>12</span>-<span>31</span><span>）\r\n\r\n        TIME\r\n            HH:MM:SS（</span><span>''</span><span>-838:59:59</span><span>''</span>/<span>''</span><span>838:59:59</span><span>''</span><span>）\r\n\r\n        YEAR\r\n            YYYY（</span><span>1901</span>/<span>2155</span><span>）\r\n\r\n        DATETIME\r\n\r\n            YYYY</span>-MM-DD HH:MM:SS（<span>1000</span>-<span>01</span>-<span>01</span> <span>00</span>:<span>00</span>:<span>00</span>/<span>9999</span>-<span>12</span>-<span>31</span> <span>23</span>:<span>59</span>:<span>59</span><span>    Y）\r\n\r\n        TIMESTAMP\r\n\r\n            YYYYMMDD HHMMSS（</span><span>1970</span>-<span>01</span>-<span>01</span> <span>00</span>:<span>00</span>:<span>00</span>/<span>2037</span> 年某时）</pre><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div><p><span>1.6、修改表(alter)</span><span>&nbsp; &nbsp;</span></p><div class="cnblogs_code"><img id="code_img_closed_8ea4ee45-5b74-455f-97e8-22e61b2c26ed" class="code_img_closed" src="https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" alt="">&nbsp;<span class="cnblogs_code_collapse">修改表</span></div><p>更多参考：</p><ul><li>http://www.runoob.com/mysql/mysql-data-types.html</li></ul><p><span>1.7、数据表关系</span></p><p><span>关联映射：一对多/多对一</span></p><div>&nbsp;<div>存在最普遍的映射关系，简单来讲就如球员与球队的关系；<div>&nbsp;<div>一对多：从球队角度来说一个球队拥有多个球员 即为一对多<div>&nbsp;<div>多对一：从球员角度来说多个球员属于一个球队 即为多对一</div><div>数据表间一对多关系如下图：</div><div><img src="https://images2015.cnblogs.com/blog/875796/201608/875796-20160820142621515-232747436.png" alt=""></div><div>关联映射：一对一<div>&nbsp;<div>一对一关系就如球队与球队所在地址之间的关系，一支球队仅有一个地址，而一个地址区也仅有一支球队。<div>&nbsp;<div>数据表间一对一关系的表现有两种，一种是外键关联，一种是主键关联。图示如下：<div>&nbsp;<div>一对一外键关联：</div><div><img src="https://images2015.cnblogs.com/blog/875796/201608/875796-20160820142730312-2021124065.png" alt=""></div><div>一对一主键关联：要求两个表的主键必须完全一致，通过两个表的主键建立关联关系</div><div><img src="https://images2015.cnblogs.com/blog/875796/201608/875796-20160820142826187-1820882386.png" alt=""></div><div>关联映射：多对多<div>&nbsp;<div>多对多关系也很常见，例如学生与选修课之间的关系，一个学生可以选择多门选修课，而每个选修课又可以被多名学生选择。<div>&nbsp;<div>数据库中的多对多关联关系一般需采用中间表的方式处理，将多对多转化为两个一对多</div><div><img src="https://images2015.cnblogs.com/blog/875796/201608/875796-20160820142942312-1453486277.png" alt=""></div><div><span>1.8、数据表之间的约束</span></div><div><p>约束是一种限制，它通过对表的行或列的数据做出限制，来确保表的数据的完整性、唯一性。</p><p>MYSQL中，常用的几种约束：</p><p><img src="https://images2015.cnblogs.com/blog/875796/201608/875796-20160820144316703-1845529838.png" alt=""></p><p><span><span><span>===================================================</span></span></span></p><p><span><span>主键(PRIMARY KEY)是用于约束表中的一行，作为这一行的标识符，在一张表中通过主键就能准确定位到一行，因此主键十分重要。主键要求这一行的数据不能有重复且不能为空。</span></span></p><p><span>&nbsp;还有一种特殊的主键——复合主键。主键不仅可以是表中的一列，也可以由表中的两列或多列来共同标识</span></p><p>===================================================</p><p>默认值约束(DEFAULT)规定，当有DEFAULT约束的列，插入数据为空时该怎么办。</p><p>DEFAULT约束只会在使用INSERT语句（上一实验介绍过）时体现出来，INSERT语句中，如果被DEFAULT约束的位置没有值，那么这个位置将会被DEFAULT的值填充</p><p>===================================================</p><p>唯一约束(UNIQUE)比较简单，它规定一张表中指定的一列的值必须不能有重复值，即这一列每个值都是唯一的。</p><p>当INSERT语句新插入的数据和已有数据重复的时候，如果有UNIQUE约束，则INSERT失败.</p><p>===================================================</p><p>外键(FOREIGN KEY)既能确保数据完整性，也能表现表之间的关系。</p><p>一个表可以有多个外键，每个外键必须REFERENCES(参考)另一个表的主键，被外键约束的列，取值必须在它参考的列中有对应值。</p><p>在INSERT时，如果被外键约束的值没有在参考列中有对应，比如以下命令，参考列(department表的dpt_name)中没有dpt3，则INSERT失败</p><p>===================================================</p><p>非空约束(NOT NULL),听名字就能理解，被非空约束的列，在插入值时必须非空。</p><p>在MySQL中违反非空约束，不会报错，只会有警告.</p><div class="cnblogs_code"><img id="code_img_closed_57d7217d-494b-4103-a9b0-8bc039edf1cc" class="code_img_closed" src="https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" alt="">&nbsp;<span class="cnblogs_code_collapse">例子</span></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div><p><span>2、数据库和表内容的操作(增、删、改、查)</span></p><p>&nbsp;1、增</p><div class="cnblogs_code"><pre><span>insert</span> <span>into</span> 表 (列名,列名...) <span>values</span><span> (值,值,值...)\r\n</span><span>insert</span> <span>into</span> 表 (列名,列名...) <span>values</span><span> (值,值,值...),(值,值,值...)\r\n</span><span>insert</span> <span>into</span> 表 (列名,列名...) <span>select</span> (列名,列名...) <span>from</span> 表</pre></div><p>2、删</p><div class="cnblogs_code"><pre><span>delete</span> <span>from</span><span> 表\r\n</span><span>delete</span> <span>from</span> 表 <span>where</span> id＝<span>1</span> <span>and</span> name＝<span>''</span><span>alex</span><span>''</span></pre></div><p>3、改</p><div class="cnblogs_code"><pre><span>update</span> 表 <span>set</span> name ＝ <span>''</span><span>alex</span><span>''</span> <span>where</span> id<span>&gt;</span><span>1</span></pre></div><p>4、查</p><p>　　4.1、普通查询</p><div class="cnblogs_code"><pre><span>select</span> <span>*</span> <span>from</span><span> 表\r\n</span><span>select</span> <span>*</span> <span>from</span> 表 <span>where</span> id <span>&gt;</span> <span>1</span>\r\n<span>select</span> nid,name,gender <span>as</span> gg <span>from</span> 表 <span>where</span> id <span>&gt;</span> <span>1</span></pre></div><div class="cnblogs_code"><img id="code_img_closed_ccb707f0-e71f-46ad-a301-60d61fb8def5" class="code_img_closed" src="https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" alt="">&nbsp;<span class="cnblogs_code_collapse">更多选项查询</span></div><p>&nbsp;4.2、数据排序(查询)</p><div class="cnblogs_code"><pre><span>排序\r\n    </span><span>select</span> <span>*</span> <span>from</span> 表 <span>order</span> <span>by</span> 列 <span>asc</span>              <span>-</span><span> 根据 “列” 从小到大排列\r\n    </span><span>select</span> <span>*</span> <span>from</span> 表 <span>order</span> <span>by</span> 列 <span>desc</span>             <span>-</span><span> 根据 “列” 从大到小排列\r\n    </span><span>select</span> <span>*</span> <span>from</span> 表 <span>order</span> <span>by</span> 列1 <span>desc</span>,列2 <span>asc</span>    <span>-</span> 根据 “列1” 从大到小排列，如果相同则按列2从小到大排序</pre></div><p>&nbsp; &nbsp; &nbsp;4.3、模糊查询</p><div class="cnblogs_code"><pre><span>通配符(模糊查询)\r\n    </span><span>select</span> <span>*</span> <span>from</span> 表 <span>where</span> name <span>like</span> <span>''</span><span>ale%</span><span>''</span>  <span>-</span><span> ale开头的所有（多个字符串）\r\n    </span><span>select</span> <span>*</span> <span>from</span> 表 <span>where</span> name <span>like</span> <span>''</span><span>ale_</span><span>''</span>  <span>-</span> ale开头的所有（一个字符）</pre></div><p>&nbsp; &nbsp; &nbsp;4.4、聚集函数查询</p><div class="cnblogs_code"><img id="code_img_closed_94ad8a22-1679-49e0-9484-9ba34b50db74" class="code_img_closed" src="https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" alt="">&nbsp;<span class="cnblogs_code_collapse">聚集函数</span>&nbsp;</div><p>&nbsp; &nbsp; &nbsp;4.5、分组查询</p><div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div><pre><span>分组\r\n    </span><span>select</span> num <span>from</span> 表 <span>group</span> <span>by</span><span> num\r\n    </span><span>select</span> num,nid <span>from</span> 表 <span>group</span> <span>by</span><span> num,nid\r\n    </span><span>select</span> num,nid <span>from</span> 表  <span>where</span> nid <span>&gt;</span> <span>10</span> <span>group</span> <span>by</span> num,nid <span>order</span> nid <span>desc</span>\r\n    <span>select</span> num,nid,<span>count</span>(<span>*</span>),<span>sum</span>(score),<span>max</span>(score),<span>min</span>(score) <span>from</span> 表 <span>group</span> <span>by</span><span> num,nid\r\n \r\n    </span><span>select</span> num <span>from</span> 表 <span>group</span> <span>by</span> num <span>having</span> <span>max</span>(id) <span>&gt;</span> <span>10</span><span>\r\n \r\n    特别的：</span><span>group</span> <span>by</span> 必须在where之后，<span>order</span> by之前</pre><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div><p>&nbsp; &nbsp; &nbsp;4.6多表查询</p><div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div><pre><span>a、连表\r\n    无对应关系则不显示\r\n    </span><span>select</span><span> A.num, A.name, B.name\r\n    </span><span>from</span><span> A,B\r\n    </span><span>Where</span> A.nid <span>=</span><span> B.nid\r\n \r\n    无对应关系则不显示\r\n    </span><span>select</span><span> A.num, A.name, B.name\r\n    </span><span>from</span> A <span>inner</span> <span>join</span><span> B\r\n    </span><span>on</span> A.nid <span>=</span><span> B.nid\r\n \r\n    A表所有显示，如果B中无对应关系，则值为null\r\n    </span><span>select</span><span> A.num, A.name, B.name\r\n    </span><span>from</span> A <span>left</span> <span>join</span><span> B\r\n    </span><span>on</span> A.nid <span>=</span><span> B.nid\r\n \r\n    B表所有显示，如果B中无对应关系，则值为null\r\n    </span><span>select</span><span> A.num, A.name, B.name\r\n    </span><span>from</span> A <span>right</span> <span>join</span><span> B\r\n    </span><span>on</span> A.nid <span>=</span><span> B.nid\r\nb、组合\r\n    组合，自动处理重合\r\n    </span><span>select</span><span> nickname\r\n    </span><span>from</span><span> A\r\n    </span><span>union</span>\r\n    <span>select</span><span> name\r\n    </span><span>from</span><span> B\r\n \r\n    组合，不处理重合\r\n    </span><span>select</span><span> nickname\r\n    </span><span>from</span><span> A\r\n    </span><span>union</span> <span>all</span>\r\n    <span>select</span><span> name\r\n    </span><span>from</span> B</pre></div>', 8),
(158, 'mysql的三种连接方式', 100, 0, '2019-04-09 03:57:31', '/upload/20190409/c5b6537a9b07d228e47a6b2a4bb24500.jpg', 2, 'SQL的三种连接方式分为：左外连接、右外连接、内连接，专业术语分别为：LEFT JOIN、RIGHT JOING、INNER JOIN', 'Mrs.默先森', 65, 0, '<h5>SQL的三种连接方式分为：左外连接、右外连接、内连接，专业术语分别为：LEFT JOIN、RIGHT JOING、INNER JOIN</h5><h5><a id="nbspnbspINNER_JOIN_1" target="_blank"></a>&nbsp;&nbsp;内连接INNER JOIN：使用比较运算符来根据指定的连接的每个表都有的列的值来进行匹配连接，如果对应的列值不存在，则连接的所有表对应的该列值都不会进行连接，也就是说都会别抛弃；</h5><p>#####&nbsp;&nbsp; 举个例子</p><p><img src="/editUpload/20190409/6d8efb4f7df2cd0a0870dfe7c11e1e1e.png" alt="undefined"><br></p><p><br></p><p><span>##### &nbsp;&nbsp; 左外连接LEFT JOIN/LEFT OUTTER JOIN：如果左表的某行在右表中没有找到对应的匹配项，那么左表该行在连接表中对应的右表数据都为null；而右表中的某行在坐标中没有找到对应的匹配项，就被抛弃 #####&nbsp;&nbsp; 举个例子</span></p><p><span><br></span></p><p><span><img src="/editUpload/20190409/e40cb69f32d87141f78de0393fe4f089.png" alt="undefined"><br></span></p><p><span><br></span></p><p><span>##### &nbsp;&nbsp; 右外连接RIGHT JOIN/RIGHT OUTTER JOIN： 与左外连接类似，只不过是右表对应的数据在左表中没有找到匹配项，该行对应的左表数据就被设置为null，左表对应的数据在右表中没有找到匹配项，就被抛弃，例子就不列举了&nbsp;</span></p>', 8),
(159, '关于如何上传代码到服务器上去', 100, 0, '2019-04-09 06:14:32', '/upload/20190409/9c766ab67ec9e721b9a44295fb382778.jpg', 2, '今天个大家带来的是关于如何上传代码到服务器上去。', 'Mrs.默先森', 44, 0, '<p><span>首先 第一步 下载git软件并执行安装 登录https://git-scm.com/downloads 就可以下载</span><br><span>个人建议：windows用户我更建议安装 git for windows 下载地址：&nbsp;</span><a href="https://gitforwindows.org/">https://gitforwindows.org</a><br><span>当然 如果你想看你安装有没有成功 你也可以用命令查看 git --version</span><br><span>第二步：安装完之后就是配置了</span><br><span>配置git软件有一个图形化的操作界面 更方便我们操作 它就是Gui Gui是Git的图形界面管理软件，如果要使用Gui而并不是命令行操作，我推荐使用 sourcetree 这个功能强大，可以试一试。</span><br><span>配置文件为 ~/.gitoconfig 执行任何Git配置命令后文件将会自动创建。另外，第一个要配置的是你个人的用户名个电子邮件地址 类如：</span><br><span>git config --global user.email "729589198@qq.com"</span><br><span>git config --global user.name "729589198@qq.com"</span><br><span>配置完了之后就可以进行第三步了</span><br><span>第三步：也是重要的一步：</span><br><span>创建创库：你需要在GitHub 创建好创库。</span><br></p><div class="fluidbox__wrap"><img src="https://iocaffcdn.phphub.org/uploads/images/201901/02/34248/HfVIlEkgKf.png!large" alt="file" class="fluidbox__thumb"><div class="fluidbox__ghost"></div></div><p><a href="https://iocaffcdn.phphub.org/uploads/images/201901/02/34248/HfVIlEkgKf.png!large" class="fluidbox fluidbox__instance-1 fluidbox--initialized fluidbox--closed fluidbox--ready" style="text-align: center;"></a><br><span>在创建创库的时候 会让填写秘钥</span><br></p><div class="fluidbox__wrap"><img src="https://iocaffcdn.phphub.org/uploads/images/201901/02/34248/UAk10mimrk.png!large" alt="file" class="fluidbox__thumb"><div class="fluidbox__ghost"></div></div><p><a href="https://iocaffcdn.phphub.org/uploads/images/201901/02/34248/UAk10mimrk.png!large" class="fluidbox fluidbox__instance-2 fluidbox--initialized fluidbox--closed fluidbox--ready" style="text-align: center;"></a><br><span>在这个时候 你需要先去生成秘钥 使用ssh连接Github发送指令更加靠谱 可以免掉每次输入密码的困扰</span><br><span>在命令中输入一下代码 （windows 用户使用Git Bash）:</span><br><span>ssh-keygen -t rsa</span><br><span>然后一直按回车直到结束，系统会在 ~/.ssh目录中生成 id_rsa 和 id_rsa.pub，即秘钥 id_rsa 和公钥 id_rsa.pub 。 做完这些之后就想Github添加秘钥了 点击New SSH key 按钮 添加上面就会生成 id_rsa.pub 。</span><br><span>做完这些之后就可以进行下一步了</span><br><span>第四步：关联远程 进行代码上传</span><br><span>在这里 先要创建本地库并完成初始提交。</span><br><span>git init</span><br><span>可以先写个文件 作为测试</span><br><span>git init git add README.md</span><br><span>然后 提交上去</span><br><span>git commit -m "第一次提交上传"</span><br><span>注意这里提交只是提交到本地小推车上 还没有推送到线上 所以还要进行下一步</span><br><span>添加远程仓库</span><br><span>git remote add origin git@github.com:项目名（laravel）/文件(Moshutong)</span><br><span>这个时候 你可以查看一下远程仓库的状态</span><br><span>git remote -v</span><br><span>最后你需要把项目代码推送到远程仓库</span><br><span>git push -u origin master</span><br><span>这里的master是主线任务</span><br><span>希望可以帮助到你</span></p>', 6),
(162, 'Laravel框架开发调试工具Laravel Debugbar使用', 100, 0, '2019-04-13 01:06:08', '/upload/20190413/25fb845f368aa758d488e78794ed6f37.jpg', 2, 'laravel-debugbar 用于直观的显示调试及错误信息，提高开发效率。', 'Mrs.默先森', 50, 0, '<h2>安装</h2><p>1). 使用 Composer 安装该扩展包：</p><pre><code class="language-php hljs"><code class="language-php">composer <span class="token keyword"><span class="hljs-keyword">require</span></span> barryvdh<span class="token operator">/</span>laravel<span class="token operator">-</span>debugbar</code></code></pre><p>2). 安装完成后，修改&nbsp;<code>config/app.php</code>&nbsp;在&nbsp;<code>providers</code>&nbsp;数组内追加 Debugbar 的 Provider</p><pre><code class="language-php hljs"><ol class="hljs-ln"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1" style="text-align: right;"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><code class="language-php"><span class="token string"><span class="hljs-string">''providers''</span></span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span></code></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2" style="text-align: right;"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><code class="language-php">    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></code></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3" style="text-align: right;"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><code class="language-php">    <span class="token scope">Barryvdh<span class="token punctuation">\\</span>Debugbar<span class="token punctuation">\\</span>ServiceProvider<span class="token punctuation">::</span></span><span class="token keyword">class</span><span class="token punctuation">,</span></code></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4" style="text-align: right;"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><code class="language-php"><span class="token punctuation">]</span><span class="token punctuation">,</span></code></div></div></li></ol></code></pre><p>同时在&nbsp;<code>aliases</code>&nbsp;数组内追加如下内容</p><pre><code class="language-php hljs"><ol class="hljs-ln"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1" style="text-align: right;"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><code class="language-php"><span class="token string"><span class="hljs-string">''aliases''</span></span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span></code></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2" style="text-align: right;"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><code class="language-php">    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></code></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3" style="text-align: right;"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><code class="language-php">    <span class="token string"><span class="hljs-string">''Debugbar''</span></span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token scope">Barryvdh<span class="token punctuation">\\</span>Debugbar<span class="token punctuation">\\</span>Facade<span class="token punctuation">::</span></span><span class="token keyword">class</span><span class="token punctuation">,</span></code></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4" style="text-align: right;"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><code class="language-php"><span class="token punctuation">]</span></code></div></div></li></ol></code></pre><p>3). 接下来运行以下命令生成此扩展包的配置文件&nbsp;<code>config/debugbar.php</code>：</p><pre><code class="language-php hljs"><code class="language-php">php artisan vendor<span class="token punctuation">:</span>publish <span class="token operator">--</span>provider<span class="token operator">=</span><span class="token string"><span class="hljs-string">"Barryvdh\\Debugbar\\ServiceProvider"</span></span></code></code></pre><p>打开&nbsp;<code>config/debugbar.php</code>，将&nbsp;<code>enabled</code>&nbsp;的值设置为：</p><pre><code class="language-php hljs"><code class="language-php"><span class="token string"><span class="hljs-string">''enabled''</span></span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string"><span class="hljs-string">''APP_DEBUG''</span></span><span class="token punctuation">,</span> <span class="token boolean"><span class="hljs-keyword">false</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span></code></code></pre><p>修改完以后, Debugbar 分析器的启动状态将由&nbsp;<code>.env</code>文件中&nbsp;<code>APP_DEBUG</code>&nbsp;值决定。</p><p>页面刷新后, 基本就是安装成功了。</p>', 9),
(163, 'laravel 怎样使用artisan命令', 100, 0, '2019-05-16 15:37:54', '/upload/20190516/f83cf27e95cbff3107f2b985d7a7dd74.jpg', 2, 'laravel 使用artisan命令创建控制器controller,model', 'Mrs.默先森', 50, 0, '<ul><li>1.创建控制器</li></ul><p>&nbsp; &nbsp; &nbsp; &nbsp;php artisan make:controller UserController</p><p>&nbsp; &nbsp; &nbsp; &nbsp;这样就会在app/Http/Controllers目录下创建一个名为UserController.php的文件。</p><ul><li>2.如果想在子目录中创建控制器。</li></ul><p>&nbsp; &nbsp; &nbsp; &nbsp;php artisan make:controller Admin/UserController</p><p>&nbsp; &nbsp; &nbsp; &nbsp;这样就会在app/Http/Controllers/Admin目录下创建一个名为UserController.php的文件。不需要修改命名空间</p><ul><li>3.创建model</li></ul><p>&nbsp; &nbsp; &nbsp; &nbsp;php artisan make:model MyTest</p><p>&nbsp; &nbsp; &nbsp; &nbsp;<img alt="" class="has" height="73" src="https://img-blog.csdnimg.cn/20190402180652137.png" width="545"></p><p>&nbsp; &nbsp; &nbsp; 创建app目录下生成MyTest.php文件的同时，在database/migrations文件夹下同时会生成Migration文件</p><ul><li>4.如果想在子目录中创建model，前面加入文件夹名称Models，Models可以无需存在</li></ul><p>&nbsp; &nbsp; &nbsp; &nbsp;php artisan make:model Models/MyTest</p><ul><li>5.创建迁移</li></ul><p>&nbsp; &nbsp; &nbsp; &nbsp;php artisan make:migration create_users_table</p><ul><li>6.运行迁移</li></ul><p>&nbsp; &nbsp; &nbsp; php artisan migrate</p><ul><li>7.回滚迁移</li></ul><p>&nbsp; &nbsp; &nbsp; &nbsp;php artisan migrate:rollback</p><ul><li>8.回滚所有迁移</li></ul><p>&nbsp; &nbsp; &nbsp; &nbsp;php artisan migrate:refresh</p>', 1),
(164, '浅谈SFTP和FTP的区别', 100, 0, '2019-05-17 12:23:35', '/upload/20190517/cfe4ff72b39776d3bbb7c34ff97e3e92.jpg', 2, '浅谈SFTP和FTP的区别，两者之间有什么不一样的地方', 'Mrs.默先森', 44, 0, '<h1 class="postTitle"><a id="cb_post_title_url" class="postTitle2" href="https://www.cnblogs.com/xuliangxing/p/7120130.html" style="font-weight: normal;"><i>浅谈SFTP和FTP的区别</i></a></h1><div class="postBody"><div id="cnblogs_post_body" class="blogpost-body"><span style="font-size: 21px; font-weight: 700;">一、适用场景</span><p>　　我们平时习惯了使用ftp来上传下载文件，尤其是很多Linux环境下，我们一般都会通过第三方的SSH工具连接到Linux，但是当我们需要传输文件到Linux服务器当中，很多人习惯用ftp来传输，其实Linux默认是不提供ftp的，需要你额外安装FTP服务器。而且ftp服务器端会占用一定的VPS服务器资源。其实笔者更建议使用sftp代替ftp。</p><p>　　<span>主要因为：一、可以不用额外安装任何服务器端程序(我比较中意这个，哈哈~~，很多公司为了安全性Linux没有外网环境，只有SSH的时候，想传输文件是很悲催的问题)。二、会更省系统资源。三、SFTP使用加密传输认证信息和传输数据，相对来说会更安全。四、也不需要单独配置，对新手来说比较简单(开启SSH默认就开启了SFTP)。</span></p><h2>二、主要区别</h2><div>　　FTP是一种文件传输协议，一般是为了方便数据共享的。包括一个FTP服务器和多个FTP客户端。FTP客户端通过FTP协议在服务器上下载资源。而SFTP协议是在FTP的基础上对数据进行加密，使得传输的数据相对来说更安全。但是这种安全是以牺牲效率为代价的，也就是说SFTP的传输效率比FTP要低(不过现实使用当中，没有发现多大差别)。个人肤浅的认为就是：一；FTP要安装，SFTP不要安装。二；SFTP更安全，但更安全带来副作用就是的效率比FTP要低些。</div></div></div>', 0);

-- --------------------------------------------------------

--
-- 表的结构 `blog_article_data`
--

CREATE TABLE IF NOT EXISTS `blog_article_data` (
  `keywords` varchar(125) NOT NULL DEFAULT '' COMMENT '关键字',
  `description` varchar(255) NOT NULL DEFAULT '' COMMENT '描述',
  `content` text COMMENT '文章内容',
  `article_aid` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '所属文章id'
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='文章分离表';

--
-- 转存表中的数据 `blog_article_data`
--

INSERT INTO `blog_article_data` (`keywords`, `description`, `content`, `article_aid`) VALUES
('html标签实现网页上的上标以及下标', 'html标签实现网页上的上标以及下标', '<p style="line-height: 25.2000007629395px; margin-top: 0px;">html标签实现网页上的上标以及下标的显示，例如：</p><p style="line-height: 25.2000007629395px; margin-top: 0px;">&nbsp;<img class="no_border" title="html标签实现网页上的上标以及下标" alt="html标签实现网页上的上标以及下标" width="224" height="71" src="/Upload/ueditor/image/20150616/1434437034875094.jpg" original="/uploadfiles/editor/201405262138349644.jpg" style="border: 0px;"/></p><p style="line-height: 25.2000007629395px; margin-top: 0px;">具体代码如下：</p><p><a href="http://www.phpernote.com/div-css/1024.html#viewSource" title="查看代码" class="item viewSource" style="color: rgb(255, 0, 0); width: 16px; height: 16px; display: block !important; float: left !important; margin-left: 8px !important; overflow: hidden !important; text-indent: -5000px !important; background-image: url(http://www.phpernote.com/syntaxhighlighter/styles/page_white_code.png) !important; background-repeat: no-repeat !important;">查看代码</a><a href="http://www.phpernote.com/div-css/1024.html#printSource" title="打印" class="item printSource" style="color: rgb(255, 0, 0); width: 16px; height: 16px; display: block !important; float: left !important; margin-left: 8px !important; overflow: hidden !important; text-indent: -5000px !important; background-image: url(http://www.phpernote.com/syntaxhighlighter/styles/printer.png) !important; background-repeat: no-repeat !important;">打印</a></p><table width="NaN" height="NaN"><tbody style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;"><tr style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;" class="firstRow"><td class="number" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; color: rgb(175, 175, 175) !important; background: none !important;" width="3" height="NaN"><code style="margin: 0px !important; padding: 0px 0.3em 0px 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; display: block !important; background: none !important;">01</code></td><td class="content" style="margin: 0px !important; padding: 0px 0px 0px 0.5em !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; border-left-width: 3px !important; border-left-color: rgb(108, 226, 108) !important; background: none !important;" width="NaN" height="NaN"><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&lt;</code><code class="keyword" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-weight: bold !important; font-size: 1em !important; min-height: inherit !important; color: rgb(0, 102, 153) !important; background: none !important;">html</code>&nbsp;<code class="color1" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(128, 128, 128) !important; background: none !important;">xmlns</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">=</code><code class="string" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: blue !important; background: none !important;">&quot;<a href="http://www.phpernote.com/php-function/1022.html" style="color: rgb(255, 0, 0);">http://www.phpernote.com/php-function/1022.html</a>&quot;</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&gt;</code></td></tr></tbody></table><table width="NaN" height="NaN"><tbody style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;"><tr style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;" class="firstRow"><td class="number" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; color: rgb(175, 175, 175) !important; background: none !important;" width="3" height="NaN"><code style="margin: 0px !important; padding: 0px 0.3em 0px 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; display: block !important; background: none !important;">02</code></td><td class="content" style="margin: 0px !important; padding: 0px 0px 0px 0.5em !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; border-left-width: 3px !important; border-left-color: rgb(108, 226, 108) !important; background: none !important;" width="NaN" height="NaN"><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&lt;</code><code class="keyword" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-weight: bold !important; font-size: 1em !important; min-height: inherit !important; color: rgb(0, 102, 153) !important; background: none !important;">head</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&gt;</code></td></tr></tbody></table><table width="NaN" height="NaN"><tbody style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;"><tr style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;" class="firstRow"><td class="number" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; color: rgb(175, 175, 175) !important; background: none !important;" width="3" height="NaN"><code style="margin: 0px !important; padding: 0px 0.3em 0px 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; display: block !important; background: none !important;">03</code></td><td class="content" style="margin: 0px !important; padding: 0px 0px 0px 0.5em !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; border-left-width: 3px !important; border-left-color: rgb(108, 226, 108) !important; background: none !important;" width="NaN" height="NaN"><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&lt;</code><code class="keyword" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-weight: bold !important; font-size: 1em !important; min-height: inherit !important; color: rgb(0, 102, 153) !important; background: none !important;">meta</code>&nbsp;<code class="color1" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(128, 128, 128) !important; background: none !important;">http-equiv</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">=</code><code class="string" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: blue !important; background: none !important;">&quot;Content-Type&quot;</code>&nbsp;<code class="color1" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(128, 128, 128) !important; background: none !important;">content</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">=</code><code class="string" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: blue !important; background: none !important;">&quot;text/html; charset=utf-8&quot;</code>&nbsp;<code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">/&gt;</code></td></tr></tbody></table><table width="NaN" height="NaN"><tbody style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;"><tr style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;" class="firstRow"><td class="number" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; color: rgb(175, 175, 175) !important; background: none !important;" width="3" height="NaN"><code style="margin: 0px !important; padding: 0px 0.3em 0px 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; display: block !important; background: none !important;">04</code></td><td class="content" style="margin: 0px !important; padding: 0px 0px 0px 0.5em !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; border-left-width: 3px !important; border-left-color: rgb(108, 226, 108) !important; background: none !important;" width="NaN" height="NaN"><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&lt;</code><code class="keyword" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-weight: bold !important; font-size: 1em !important; min-height: inherit !important; color: rgb(0, 102, 153) !important; background: none !important;">title</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&gt;html文件的上标字与下标字&lt;/</code><code class="keyword" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-weight: bold !important; font-size: 1em !important; min-height: inherit !important; color: rgb(0, 102, 153) !important; background: none !important;">title</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&gt;</code></td></tr></tbody></table><table width="NaN" height="NaN"><tbody style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;"><tr style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;" class="firstRow"><td class="number" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; color: rgb(175, 175, 175) !important; background: none !important;" width="3" height="NaN"><code style="margin: 0px !important; padding: 0px 0.3em 0px 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; display: block !important; background: none !important;">05</code></td><td class="content" style="margin: 0px !important; padding: 0px 0px 0px 0.5em !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; border-left-width: 3px !important; border-left-color: rgb(108, 226, 108) !important; background: none !important;" width="NaN" height="NaN"><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&lt;/</code><code class="keyword" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-weight: bold !important; font-size: 1em !important; min-height: inherit !important; color: rgb(0, 102, 153) !important; background: none !important;">head</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&gt;</code></td></tr></tbody></table><table width="NaN" height="NaN"><tbody style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;"><tr style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;" class="firstRow"><td class="number" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; color: rgb(175, 175, 175) !important; background: none !important;" width="3" height="NaN"><code style="margin: 0px !important; padding: 0px 0.3em 0px 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; display: block !important; background: none !important;">06</code></td><td class="content" style="margin: 0px !important; padding: 0px 0px 0px 0.5em !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; border-left-width: 3px !important; border-left-color: rgb(108, 226, 108) !important; background: none !important;" width="NaN" height="NaN"><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&lt;</code><code class="keyword" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-weight: bold !important; font-size: 1em !important; min-height: inherit !important; color: rgb(0, 102, 153) !important; background: none !important;">body</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&gt;</code></td></tr></tbody></table><table width="NaN" height="NaN"><tbody style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;"><tr style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;" class="firstRow"><td class="number" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; color: rgb(175, 175, 175) !important; background: none !important;" width="3" height="NaN"><code style="margin: 0px !important; padding: 0px 0.3em 0px 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; display: block !important; background: none !important;">07</code></td><td class="content" style="margin: 0px !important; padding: 0px 0px 0px 0.5em !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; border-left-width: 3px !important; border-left-color: rgb(108, 226, 108) !important; background: none !important;" width="NaN" height="NaN"><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&lt;</code><code class="keyword" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-weight: bold !important; font-size: 1em !important; min-height: inherit !important; color: rgb(0, 102, 153) !important; background: none !important;">p</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&gt;数学公式 ： (x+y)&lt;</code><code class="keyword" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-weight: bold !important; font-size: 1em !important; min-height: inherit !important; color: rgb(0, 102, 153) !important; background: none !important;">sup</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&gt;2&lt;/</code><code class="keyword" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-weight: bold !important; font-size: 1em !important; min-height: inherit !important; color: rgb(0, 102, 153) !important; background: none !important;">sup</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&gt; = x&lt;</code><code class="keyword" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-weight: bold !important; font-size: 1em !important; min-height: inherit !important; color: rgb(0, 102, 153) !important; background: none !important;">sup</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&gt;2&lt;/</code><code class="keyword" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-weight: bold !important; font-size: 1em !important; min-height: inherit !important; color: rgb(0, 102, 153) !important; background: none !important;">sup</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&gt; + 2xy + y&lt;</code><code class="keyword" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-weight: bold !important; font-size: 1em !important; min-height: inherit !important; color: rgb(0, 102, 153) !important; background: none !important;">sup</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&gt;2&lt;/</code><code class="keyword" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-weight: bold !important; font-size: 1em !important; min-height: inherit !important; color: rgb(0, 102, 153) !important; background: none !important;">sup</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&gt;&lt;/</code><code class="keyword" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-weight: bold !important; font-size: 1em !important; min-height: inherit !important; color: rgb(0, 102, 153) !important; background: none !important;">p</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&gt;</code></td></tr></tbody></table><table width="NaN" height="NaN"><tbody style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;"><tr style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;" class="firstRow"><td class="number" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; color: rgb(175, 175, 175) !important; background: none !important;" width="3" height="NaN"><code style="margin: 0px !important; padding: 0px 0.3em 0px 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; display: block !important; background: none !important;">08</code></td><td class="content" style="margin: 0px !important; padding: 0px 0px 0px 0.5em !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; border-left-width: 3px !important; border-left-color: rgb(108, 226, 108) !important; background: none !important;" width="NaN" height="NaN"><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&lt;</code><code class="keyword" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-weight: bold !important; font-size: 1em !important; min-height: inherit !important; color: rgb(0, 102, 153) !important; background: none !important;">p</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&gt;化学方程式 ： H&lt;</code><code class="keyword" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-weight: bold !important; font-size: 1em !important; min-height: inherit !important; color: rgb(0, 102, 153) !important; background: none !important;">sub</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&gt;2&lt;/</code><code class="keyword" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-weight: bold !important; font-size: 1em !important; min-height: inherit !important; color: rgb(0, 102, 153) !important; background: none !important;">sub</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&gt;O = 2H + O&lt;/</code><code class="keyword" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-weight: bold !important; font-size: 1em !important; min-height: inherit !important; color: rgb(0, 102, 153) !important; background: none !important;">p</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&gt;</code></td></tr></tbody></table><table width="NaN" height="NaN"><tbody style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;"><tr style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;" class="firstRow"><td class="number" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; color: rgb(175, 175, 175) !important; background: none !important;" width="3" height="NaN"><code style="margin: 0px !important; padding: 0px 0.3em 0px 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; display: block !important; background: none !important;">09</code></td><td class="content" style="margin: 0px !important; padding: 0px 0px 0px 0.5em !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; border-left-width: 3px !important; border-left-color: rgb(108, 226, 108) !important; background: none !important;" width="NaN" height="NaN"><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&lt;/</code><code class="keyword" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-weight: bold !important; font-size: 1em !important; min-height: inherit !important; color: rgb(0, 102, 153) !important; background: none !important;">body</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&gt;</code></td></tr></tbody></table><table width="NaN" height="NaN"><tbody style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;"><tr style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;" class="firstRow"><td class="number" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; color: rgb(175, 175, 175) !important; background: none !important;" width="3" height="NaN"><code style="margin: 0px !important; padding: 0px 0.3em 0px 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; display: block !important; background: none !important;">10</code></td><td class="content" style="margin: 0px !important; padding: 0px 0px 0px 0.5em !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; border-left-width: 3px !important; border-left-color: rgb(108, 226, 108) !important; background: none !important;" width="NaN" height="NaN"><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&lt;/</code><code class="keyword" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-weight: bold !important; font-size: 1em !important; min-height: inherit !important; color: rgb(0, 102, 153) !important; background: none !important;">html</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&gt;</code></td></tr></tbody></table><h4 style="color: rgb(0, 0, 255); margin: 0px; font-family: 宋体; font-size: 14px; white-space: normal; float: left; background-color: rgb(255, 255, 255);">您可能感兴趣的文</h4><h4 style="color: rgb(0, 0, 255); margin: 0px; font-family: 宋体; font-size: 14px; white-space: normal; float: left; background-color: rgb(255, 255, 255);">章</h4>', 66);
INSERT INTO `blog_article_data` (`keywords`, `description`, `content`, `article_aid`) VALUES
('PHP中的的大括号(花括号{})使用详解', 'PHP中的的大括号(花括号{})使用详解', '<p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">在php中使用大括号基本有如下三种情况，下面本篇文章对这三种使用情况做一个总结。</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">一、function name(){}， for(){}等等这种情况就不多说了，不说也知道是做什么用的了。</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">二、$str{4}在字符串的变量的后面跟上{}大括号或者中括号[]，里面填写了数字，这里是吧字符串变量当成数组处理。举个例子如下：</p><p><a href="http://www.phpernote.com/php-string/1065.html#viewSource" title="查看代码" class="item viewSource" style="color: rgb(255, 0, 0); width: 16px; height: 16px; display: block !important; float: left !important; margin-left: 8px !important; overflow: hidden !important; text-indent: -5000px !important; background-image: url(http://www.phpernote.com/syntaxhighlighter/styles/page_white_code.png) !important; background-repeat: no-repeat !important;">查看代码</a><a href="http://www.phpernote.com/php-string/1065.html#printSource" title="打印" class="item printSource" style="color: rgb(255, 0, 0); width: 16px; height: 16px; display: block !important; float: left !important; margin-left: 8px !important; overflow: hidden !important; text-indent: -5000px !important; background-image: url(http://www.phpernote.com/syntaxhighlighter/styles/printer.png) !important; background-repeat: no-repeat !important;">打印</a></p><table width="NaN" height="NaN"><tbody style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;"><tr style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;" class="firstRow"><td class="number" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; color: rgb(175, 175, 175) !important; background: none !important;" width="3" height="NaN"><code style="margin: 0px !important; padding: 0px 0.3em 0px 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; display: block !important; background: none !important;">1</code></td><td class="content" style="margin: 0px !important; padding: 0px 0px 0px 0.5em !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; border-left-width: 3px !important; border-left-color: rgb(108, 226, 108) !important; color: rgb(0, 0, 0) !important; background: none !important;" width="NaN" height="NaN"><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&lt;?php</code></td></tr></tbody></table><table width="NaN" height="NaN"><tbody style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;"><tr style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;" class="firstRow"><td class="number" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; color: rgb(175, 175, 175) !important; background: none !important;" width="3" height="NaN"><code style="margin: 0px !important; padding: 0px 0.3em 0px 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; display: block !important; background: none !important;">2</code></td><td class="content" style="margin: 0px !important; padding: 0px 0px 0px 0.5em !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; border-left-width: 3px !important; border-left-color: rgb(108, 226, 108) !important; color: rgb(0, 0, 0) !important; background: none !important;" width="NaN" height="NaN"><code class="variable" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(170, 119, 0) !important; background: none !important;">$str</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">=</code><code class="string" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: blue !important; background: none !important;">&#39;phpernote.com&#39;</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">;</code></td></tr></tbody></table><table width="NaN" height="NaN"><tbody style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;"><tr style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;" class="firstRow"><td class="number" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; color: rgb(175, 175, 175) !important; background: none !important;" width="3" height="NaN"><code style="margin: 0px !important; padding: 0px 0.3em 0px 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; display: block !important; background: none !important;">3</code></td><td class="content" style="margin: 0px !important; padding: 0px 0px 0px 0.5em !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; border-left-width: 3px !important; border-left-color: rgb(108, 226, 108) !important; color: rgb(0, 0, 0) !important; background: none !important;" width="NaN" height="NaN"><code class="functions" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(255, 20, 147) !important; background: none !important;">echo</code>&nbsp;<code class="variable" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(170, 119, 0) !important; background: none !important;">$str</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">{0};&nbsp;</code><code class="comments" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(0, 130, 0) !important; background: none !important;">// 输出 p</code></td></tr></tbody></table><table width="NaN" height="NaN"><tbody style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;"><tr style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;" class="firstRow"><td class="number" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; color: rgb(175, 175, 175) !important; background: none !important;" width="3" height="NaN"><code style="margin: 0px !important; padding: 0px 0.3em 0px 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; display: block !important; background: none !important;">4</code></td><td class="content" style="margin: 0px !important; padding: 0px 0px 0px 0.5em !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; border-left-width: 3px !important; border-left-color: rgb(108, 226, 108) !important; color: rgb(0, 0, 0) !important; background: none !important;" width="NaN" height="NaN"><code class="functions" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(255, 20, 147) !important; background: none !important;">echo</code>&nbsp;<code class="variable" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(170, 119, 0) !important; background: none !important;">$str</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">[1];&nbsp;</code><code class="comments" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(0, 130, 0) !important; background: none !important;">// 输出 h</code></td></tr></tbody></table><table width="NaN" height="NaN"><tbody style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;"><tr style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;" class="firstRow"><td class="number" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; color: rgb(175, 175, 175) !important; background: none !important;" width="3" height="NaN"><code style="margin: 0px !important; padding: 0px 0.3em 0px 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; display: block !important; background: none !important;">5</code></td><td class="content" style="margin: 0px !important; padding: 0px 0px 0px 0.5em !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; border-left-width: 3px !important; border-left-color: rgb(108, 226, 108) !important; color: rgb(0, 0, 0) !important; background: none !important;" width="NaN" height="NaN"><code class="variable" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(170, 119, 0) !important; background: none !important;">$str</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">=</code><code class="string" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: blue !important; background: none !important;">&#39;000&#39;</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">;</code></td></tr></tbody></table><table width="NaN" height="NaN"><tbody style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;"><tr style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;" class="firstRow"><td class="number" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; color: rgb(175, 175, 175) !important; background: none !important;" width="3" height="NaN"><code style="margin: 0px !important; padding: 0px 0.3em 0px 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; display: block !important; background: none !important;">6</code></td><td class="content" style="margin: 0px !important; padding: 0px 0px 0px 0.5em !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; border-left-width: 3px !important; border-left-color: rgb(108, 226, 108) !important; color: rgb(0, 0, 0) !important; background: none !important;" width="NaN" height="NaN"><code class="variable" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(170, 119, 0) !important; background: none !important;">$str</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">{0}=</code><code class="string" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: blue !important; background: none !important;">&#39;1&#39;</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">;</code></td></tr></tbody></table><table width="NaN" height="NaN"><tbody style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;"><tr style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;" class="firstRow"><td class="number" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; color: rgb(175, 175, 175) !important; background: none !important;" width="3" height="NaN"><code style="margin: 0px !important; padding: 0px 0.3em 0px 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; display: block !important; background: none !important;">7</code></td><td class="content" style="margin: 0px !important; padding: 0px 0px 0px 0.5em !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; border-left-width: 3px !important; border-left-color: rgb(108, 226, 108) !important; color: rgb(0, 0, 0) !important; background: none !important;" width="NaN" height="NaN"><code class="functions" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(255, 20, 147) !important; background: none !important;">echo</code>&nbsp;<code class="variable" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(170, 119, 0) !important; background: none !important;">$str</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">;&nbsp;</code><code class="comments" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(0, 130, 0) !important; background: none !important;">// 输出 100</code></td></tr></tbody></table><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">注意：利用这一特性可用来检查某个字符串是否满足多少长度，使用 isset 的方式替代 strlen 函数，因为 isset 是语言结构，strlen 是函数，所以使用 isset 比使用 strlen 效率更高。比如判断一个字符串的长度是否小于 5，如下：</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">if(!isset($str{5})) 比 if(strlen($str)&lt;5) 更好。</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">三、对于可变变量使用大括号，比如：{$val}，这时候大括号就是告诉PHP，括起来的部分要当成变量处理。如下例子：</p><p><a href="http://www.phpernote.com/php-string/1065.html#viewSource" title="查看代码" class="item viewSource" style="color: rgb(255, 0, 0); width: 16px; height: 16px; display: block !important; float: left !important; margin-left: 8px !important; overflow: hidden !important; text-indent: -5000px !important; background-image: url(http://www.phpernote.com/syntaxhighlighter/styles/page_white_code.png) !important; background-repeat: no-repeat !important;">查看代码</a><a href="http://www.phpernote.com/php-string/1065.html#printSource" title="打印" class="item printSource" style="color: rgb(255, 0, 0); width: 16px; height: 16px; display: block !important; float: left !important; margin-left: 8px !important; overflow: hidden !important; text-indent: -5000px !important; background-image: url(http://www.phpernote.com/syntaxhighlighter/styles/printer.png) !important; background-repeat: no-repeat !important;">打印</a></p><table width="NaN" height="NaN"><tbody style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;"><tr style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;" class="firstRow"><td class="number" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; color: rgb(175, 175, 175) !important; background: none !important;" width="3" height="NaN"><code style="margin: 0px !important; padding: 0px 0.3em 0px 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; display: block !important; background: none !important;">1</code></td><td class="content" style="margin: 0px !important; padding: 0px 0px 0px 0.5em !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; border-left-width: 3px !important; border-left-color: rgb(108, 226, 108) !important; color: rgb(0, 0, 0) !important; background: none !important;" width="NaN" height="NaN"><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&lt;?php</code></td></tr></tbody></table><table width="NaN" height="NaN"><tbody style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;"><tr style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;" class="firstRow"><td class="number" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; color: rgb(175, 175, 175) !important; background: none !important;" width="3" height="NaN"><code style="margin: 0px !important; padding: 0px 0.3em 0px 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; display: block !important; background: none !important;">2</code></td><td class="content" style="margin: 0px !important; padding: 0px 0px 0px 0.5em !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; border-left-width: 3px !important; border-left-color: rgb(108, 226, 108) !important; color: rgb(0, 0, 0) !important; background: none !important;" width="NaN" height="NaN"><code class="variable" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(170, 119, 0) !important; background: none !important;">$array</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">=</code><code class="keyword" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-weight: bold !important; font-size: 1em !important; min-height: inherit !important; color: rgb(0, 102, 153) !important; background: none !important;">array</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">(</code><code class="string" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: blue !important; background: none !important;">&#39;www&#39;</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">,</code><code class="string" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: blue !important; background: none !important;">&#39;name&#39;</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">=&gt;</code><code class="string" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: blue !important; background: none !important;">&#39;phpernote&#39;</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">,</code><code class="string" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: blue !important; background: none !important;">&#39;com&#39;</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">);</code></td></tr></tbody></table><table width="NaN" height="NaN"><tbody style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;"><tr style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;" class="firstRow"><td class="number" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; color: rgb(175, 175, 175) !important; background: none !important;" width="3" height="NaN"><code style="margin: 0px !important; padding: 0px 0.3em 0px 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; display: block !important; background: none !important;">3</code></td><td class="content" style="margin: 0px !important; padding: 0px 0px 0px 0.5em !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; border-left-width: 3px !important; border-left-color: rgb(108, 226, 108) !important; color: rgb(0, 0, 0) !important; background: none !important;" width="NaN" height="NaN"><code class="functions" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(255, 20, 147) !important; background: none !important;">echo</code>&nbsp;<code class="string" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: blue !important; background: none !important;">&quot;$array[&#39;name&#39;]&quot;</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">;</code><code class="comments" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(0, 130, 0) !important; background: none !important;">//用此句会报语法错误</code></td></tr></tbody></table><table width="NaN" height="NaN"><tbody style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;"><tr style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;" class="firstRow"><td class="number" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; color: rgb(175, 175, 175) !important; background: none !important;" width="3" height="NaN"><code style="margin: 0px !important; padding: 0px 0.3em 0px 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; display: block !important; background: none !important;">4</code></td><td class="content" style="margin: 0px !important; padding: 0px 0px 0px 0.5em !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; border-left-width: 3px !important; border-left-color: rgb(108, 226, 108) !important; color: rgb(0, 0, 0) !important; background: none !important;" width="NaN" height="NaN"><code class="functions" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(255, 20, 147) !important; background: none !important;">echo</code>&nbsp;<code class="string" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: blue !important; background: none !important;">&quot;{$array[&#39;name&#39;]}&quot;</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">;</code><code class="comments" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(0, 130, 0) !important; background: none !important;">//此句正常，大括号内的字符将作为变量来处理</code></td></tr></tbody></table><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">注意：${$a[1]} 与${$a}[1] 是完全不同的：</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">${$a[1]} 这里$a[1]是一个变量；</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">${$a}[1] 这里$a是一个变量；</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">这种写法的好处就是在字符串中引用变量的时候，这样就可以不使用.运算符，从而减少代码的输入量。</p><p><br/></p>', 63);
INSERT INTO `blog_article_data` (`keywords`, `description`, `content`, `article_aid`) VALUES
('3213', '3123', '<p>3123<br/></p>', 50),
('3123', '3123', '<p>3123<br/></p>', 51),
('PHP的echo输出内容过多会很慢', 'PHP的echo输出内容过多会很慢', '<p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">作为一个行走江湖多年的老中医，今天受命去解决一例前端页面展现缓慢的问题。问题页的情况如下：</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">apache + php</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">使用smarty模板输出内容</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">页面最终输出内容较大，80k+</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">页面执行时间在500ms以上</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">祭出法宝xhprof对问题页面做了细致检查，发现页面的瓶颈竟然是模板(编译后的)中的一个echo语句，这个echo语句输出的字符串比较大，大概是50k+字节，花费时间为400多毫秒，占整个页面执行时间的80%。这样的echo输出在站点首页中其实是很常见的事情，没有数据库操作，按道理执行时间不应该这么长。</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">于是猛力使用搜索技能，最终在php手册的echo部分找到了一些蛛丝马迹，早在2003年就有前辈认为通过echo输出大字符串到客户端会引起服务器的性能问题，据我测试，在这个场景下使用print其实也是一样的慢。建议的解决办法是把字符串切割成更小的字符串输出，展现速度会有提升，输出函数如下：</p><p><a href="http://www.phpernote.com/php-string/690.html#viewSource" title="查看代码" class="item viewSource" style="color: rgb(255, 0, 0); width: 16px; height: 16px; display: block !important; float: left !important; margin-left: 8px !important; overflow: hidden !important; text-indent: -5000px !important; background-image: url(http://www.phpernote.com/syntaxhighlighter/styles/page_white_code.png) !important; background-repeat: no-repeat !important;">查看代码</a><a href="http://www.phpernote.com/php-string/690.html#printSource" title="打印" class="item printSource" style="color: rgb(255, 0, 0); width: 16px; height: 16px; display: block !important; float: left !important; margin-left: 8px !important; overflow: hidden !important; text-indent: -5000px !important; background-image: url(http://www.phpernote.com/syntaxhighlighter/styles/printer.png) !important; background-repeat: no-repeat !important;">打印</a></p><table width="NaN" height="NaN"><tbody style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;"><tr style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;" class="firstRow"><td class="number" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; color: rgb(175, 175, 175) !important; background: none !important;" width="3" height="NaN"><code style="margin: 0px !important; padding: 0px 0.3em 0px 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; display: block !important; background: none !important;">1</code></td><td class="content" style="margin: 0px !important; padding: 0px 0px 0px 0.5em !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; border-left-width: 3px !important; border-left-color: rgb(108, 226, 108) !important; color: rgb(0, 0, 0) !important; background: none !important;" width="NaN" height="NaN"><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&lt;?php</code></td></tr></tbody></table><table width="NaN" height="NaN"><tbody style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;"><tr style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;" class="firstRow"><td class="number" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; color: rgb(175, 175, 175) !important; background: none !important;" width="3" height="NaN"><code style="margin: 0px !important; padding: 0px 0.3em 0px 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; display: block !important; background: none !important;">2</code></td><td class="content" style="margin: 0px !important; padding: 0px 0px 0px 0.5em !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; border-left-width: 3px !important; border-left-color: rgb(108, 226, 108) !important; color: rgb(0, 0, 0) !important; background: none !important;" width="NaN" height="NaN"><code class="comments" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(0, 130, 0) !important; background: none !important;">//对大字节字符串进行分割保存到数组中，然后循环输出</code></td></tr></tbody></table><table width="NaN" height="NaN"><tbody style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;"><tr style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;" class="firstRow"><td class="number" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; color: rgb(175, 175, 175) !important; background: none !important;" width="3" height="NaN"><code style="margin: 0px !important; padding: 0px 0.3em 0px 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; display: block !important; background: none !important;">3</code></td><td class="content" style="margin: 0px !important; padding: 0px 0px 0px 0.5em !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; border-left-width: 3px !important; border-left-color: rgb(108, 226, 108) !important; color: rgb(0, 0, 0) !important; background: none !important;" width="NaN" height="NaN"><code class="keyword" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-weight: bold !important; font-size: 1em !important; min-height: inherit !important; color: rgb(0, 102, 153) !important; background: none !important;">function</code>&nbsp;<code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">echoBigChar(</code><code class="variable" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(170, 119, 0) !important; background: none !important;">$string</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">,</code><code class="variable" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(170, 119, 0) !important; background: none !important;">$bufferSize</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">=8192){</code></td></tr></tbody></table><table width="NaN" height="NaN"><tbody style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;"><tr style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;" class="firstRow"><td class="number" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; color: rgb(175, 175, 175) !important; background: none !important;" width="3" height="NaN"><code style="margin: 0px !important; padding: 0px 0.3em 0px 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; display: block !important; background: none !important;">4</code></td><td class="content" style="margin: 0px !important; padding: 0px 0px 0px 0.5em !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; border-left-width: 3px !important; border-left-color: rgb(108, 226, 108) !important; color: rgb(0, 0, 0) !important; background: none !important;" width="NaN" height="NaN"><code class="spaces" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(170, 119, 0) !important; background: none !important;">$splitString</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">=</code><code class="functions" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(255, 20, 147) !important; background: none !important;">str_split</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">(</code><code class="variable" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(170, 119, 0) !important; background: none !important;">$string</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">,</code><code class="variable" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(170, 119, 0) !important; background: none !important;">$bufferSize</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">);</code></td></tr></tbody></table><table width="NaN" height="NaN"><tbody style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;"><tr style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;" class="firstRow"><td class="number" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; color: rgb(175, 175, 175) !important; background: none !important;" width="3" height="NaN"><code style="margin: 0px !important; padding: 0px 0.3em 0px 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; display: block !important; background: none !important;">5</code></td><td class="content" style="margin: 0px !important; padding: 0px 0px 0px 0.5em !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; border-left-width: 3px !important; border-left-color: rgb(108, 226, 108) !important; color: rgb(0, 0, 0) !important; background: none !important;" width="NaN" height="NaN"><code class="spaces" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-weight: bold !important; font-size: 1em !important; min-height: inherit !important; color: rgb(0, 102, 153) !important; background: none !important;">foreach</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">(</code><code class="variable" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(170, 119, 0) !important; background: none !important;">$splitString</code>&nbsp;<code class="keyword" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-weight: bold !important; font-size: 1em !important; min-height: inherit !important; color: rgb(0, 102, 153) !important; background: none !important;">as</code>&nbsp;<code class="variable" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(170, 119, 0) !important; background: none !important;">$chunk</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">){</code></td></tr></tbody></table><table width="NaN" height="NaN"><tbody style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;"><tr style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;" class="firstRow"><td class="number" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; color: rgb(175, 175, 175) !important; background: none !important;" width="3" height="NaN"><code style="margin: 0px !important; padding: 0px 0.3em 0px 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; display: block !important; background: none !important;">6</code></td><td class="content" style="margin: 0px !important; padding: 0px 0px 0px 0.5em !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; border-left-width: 3px !important; border-left-color: rgb(108, 226, 108) !important; color: rgb(0, 0, 0) !important; background: none !important;" width="NaN" height="NaN"><code class="spaces" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(255, 20, 147) !important; background: none !important;">echo</code>&nbsp;<code class="variable" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(170, 119, 0) !important; background: none !important;">$chunk</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">;</code></td></tr></tbody></table><table width="NaN" height="NaN"><tbody style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;"><tr style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;" class="firstRow"><td class="number" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; color: rgb(175, 175, 175) !important; background: none !important;" width="3" height="NaN"><code style="margin: 0px !important; padding: 0px 0.3em 0px 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; display: block !important; background: none !important;">7</code></td><td class="content" style="margin: 0px !important; padding: 0px 0px 0px 0.5em !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; border-left-width: 3px !important; border-left-color: rgb(108, 226, 108) !important; color: rgb(0, 0, 0) !important; background: none !important;" width="NaN" height="NaN"><code class="spaces" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">}</code></td></tr></tbody></table><table width="NaN" height="NaN"><tbody style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;"><tr style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;" class="firstRow"><td class="number" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; color: rgb(175, 175, 175) !important; background: none !important;" width="3" height="NaN"><code style="margin: 0px !important; padding: 0px 0.3em 0px 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; display: block !important; background: none !important;">8</code></td><td class="content" style="margin: 0px !important; padding: 0px 0px 0px 0.5em !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; border-left-width: 3px !important; border-left-color: rgb(108, 226, 108) !important; color: rgb(0, 0, 0) !important; background: none !important;" width="NaN" height="NaN"><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">}</code></td></tr></tbody></table><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="font-family:Courier New">但是上面的处方不太对症，整个echobig的输出时间仍然在400毫秒左右，没有太大改善。考虑到是输出大量内容到客户端比较慢，于是检查了apache的配置，原来还没打开deflate进行压缩，遂启用之。再次使用xhprof进行检查，这条echo的输出时间降低到5ms左右。400ms到5ms，一个配置问题会产生80倍的差距，还真是省老钱了。</span></p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="font-family:Courier New">这个故事告诉我们，开启压缩输出真的很重要。</span></p><p><br/></p>', 73);
INSERT INTO `blog_article_data` (`keywords`, `description`, `content`, `article_aid`) VALUES
('PHP正则表达式集锦', 'PHP正则表达式集锦', '<p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">以下是收集的一些常用的正则表达式整理，方便以后在工作中参考，特此记录一下。</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">只能输入数字：&quot;^[0-9]*$&quot;</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">只能输入 n 位的数字：&quot;^\\d{n}$&quot;</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">只能输入至少 n 位的数字：&quot;^\\d{n,}$&quot;</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">只能输入 m ～ n 位的数字：&quot;^\\d{m,n}$&quot;</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">只能输入零和非零开头的数字：&quot;^(0|[1-9][0-9]*)$&quot;</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">只能输入有两位小数的正实数：&quot;^[0-9]+(.[0-9]{2})?$&quot;</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">只能输入有 1～3 位小数的正实数：&quot;^[0-9]+(.[0-9]{1,3})?$&quot;</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">只能输入非零的正整数：&quot;^\\+?[1-9][0-9]*$&quot;</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">只能输入非零的负整数：&quot;^\\-[1-9][0-9]*$&quot;</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">只能输入长度位 3 的字符：&quot;^.{3}$&quot;</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">只能输入由 26 个英文字母组成的字符串：&quot;^[A-Za-z]+$&quot;</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">只能输入由 26 个大写英文字母组成的字符串：&quot;^[A-Z]+$&quot;</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">只能输入由 26 个小写英文字母组成的字符串：&quot;^[a-z]+$&quot;</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">只能输入由数字和 26 个英文字母组成的字符串：&quot;^[A-Za-z0-9]+$&quot;</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">只能输入由数字、26个英文字母或者下划线组成的字符串：&quot;^\\w+$&quot;</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">验证用户密码： &quot;^[a-zA-Z]\\w{5,17}$&quot; 正确格式位：以字母开头，长度在6～18之间，只能包含字符、数字和下划线</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">验证是否含有非法字符 ^(?:[\\u4e00-\\u9fa5]*\\w*\\s*)+$</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">只能输入汉字：&quot;^[\\u4e00-\\u9fa5]{0,}$&quot;</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">验证 Email 地址：&quot;^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$&quot;</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">验证 InternetURL：&quot;^http://([\\w-]+\\.)+[\\w-]+(/[\\w- ./?%&amp;=]*)?$&quot;</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">中国电话号码验证</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">匹配形式如:0511-4405222 或者021-87888822 或者 021-44055520-555 或者 (0511)4405222</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">正则表达式 &quot;((d{3,4})|d{3,4}-)?d{7,8}(-d{3})*&quot;</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">中国邮政编码验证</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">匹配形式如:215421</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">正则表达式 &quot;d{6}&quot;</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">电子邮件验证</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">匹配形式如:justali@justdn.com<br/>&nbsp;<br/>正则表达式 &quot;w+([-+.]w+)*@w+([-.]w+)*.w+([-.]w+)*&quot;</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">身份证验证</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">匹配形式如:15位或者18位身份证</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">正则表达式 &quot;d{18}|d{15}&quot;</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">常用数字验证</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">正则表达式</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">&quot;d{n}&quot; n为规定长度</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">&quot;d{n,m}&quot; n到m的长度范围</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">非法字符验证</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">匹配排除非法字符的字符如:</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">正则表达式 ^(?:[\\u4e00-\\u9fa5]*\\w*\\s*)+$</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">日期验证</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">匹配形式如:20030718,030718</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">范围:1900--2099</p><p><br/></p>', 74),
('如何知道服务器是否支持Gzip压缩', '如何知道服务器是否支持Gzip压缩', '<p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">Gzip功能是一种压缩网页大小从而达到加速打开网页的速度，目前主流的浏览器几乎都支持这个功能。这是一个非常实用也非常流行的功能，但开启Gzip是需要服务器支持的，如何知道自己的站点所在的服务器是否支持Gzip压缩功能？直接问自己的空间服务商？当然可以，但除了这个办法还有其他办法吗？当然也是有的，下面就从技术的角度上介绍一种方法。</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">新建一个php类型文件，可命名为test.php，该文件中写入下面这段代码：</p><p><a href="http://www.phpernote.com/php-string/355.html#viewSource" title="查看代码" class="item viewSource" style="color: rgb(255, 0, 0); width: 16px; height: 16px; display: block !important; float: left !important; margin-left: 8px !important; overflow: hidden !important; text-indent: -5000px !important; background-image: url(http://www.phpernote.com/syntaxhighlighter/styles/page_white_code.png) !important; background-repeat: no-repeat !important;">查看代码</a><a href="http://www.phpernote.com/php-string/355.html#printSource" title="打印" class="item printSource" style="color: rgb(255, 0, 0); width: 16px; height: 16px; display: block !important; float: left !important; margin-left: 8px !important; overflow: hidden !important; text-indent: -5000px !important; background-image: url(http://www.phpernote.com/syntaxhighlighter/styles/printer.png) !important; background-repeat: no-repeat !important;">打印</a></p><table width="NaN" height="NaN"><tbody style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;"><tr style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;" class="firstRow"><td class="number" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; color: rgb(175, 175, 175) !important; background: none !important;" width="3" height="NaN"><code style="margin: 0px !important; padding: 0px 0.3em 0px 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; display: block !important; background: none !important;">1</code></td><td class="content" style="margin: 0px !important; padding: 0px 0px 0px 0.5em !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; border-left-width: 3px !important; border-left-color: rgb(108, 226, 108) !important; color: rgb(0, 0, 0) !important; background: none !important;" width="NaN" height="NaN"><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&lt;?php phpinfo(); ?&gt;</code></td></tr></tbody></table><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="font-family:Courier New">然后保存上传至你需要测试的空间的根目录下，上传完毕之后在浏览器中打开这个文件的URL：</span></p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="font-family:Courier New">http://你的域名及目录/test.php，例如本站即为:http://www.phpernote.com/test.php</span></p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="font-family:Courier New">打开该页面之后，CTRL+F查找以下字符串：<br/>&nbsp;<br/>_SERVER[&quot;HTTP_ACCEPT_ENCODING&quot;]<br/>&nbsp;<br/>找到后看后面为否有gzip这个参数，如果有那么恭喜你，你的空间支持Gzip，如果没有，很遗憾，这就说明你的网站木办法实用Gzip压缩了。</span></p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="font-family:Courier New">如果服务器支持gzip压缩功能的话，至于如何实现页面的gzip压缩功能，可参考：<a target="_blank" href="http://www.phpernote.com/php-article-171.html" style="color: rgb(255, 0, 0);">PHP实现gzip页面压缩的方法</a></span></p><p><br/></p>', 75),
('mysql命令更改表结构：添加、删除、修改字段、调整字段顺序', 'mysql命令更改表结构：添加、删除、修改字段、调整字段顺序', '<p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">常用的通过mysql命令来更改表结构的一些sql语句，包括添加、删除、修改字段、调整字段顺序。</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">添加字段：</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">alter table `user_movement_log` Add column GatewayId int not null default 0 AFTER `Regionid`; (在哪个字段后面添加)</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">删除字段：</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">alter table `user_movement_log` drop column Gatewayid;</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">调整字段顺序：</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">ALTER TABLE `user_movement_log` CHANGE `GatewayId` `GatewayId` int not null default 0 AFTER RegionID;</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">//主键</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">alter table tabelname add new_field_id int(5) unsigned default 0 not null auto_increment ,add primary key (new_field_id);</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">//增加一个新列</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">alter table t2 add d timestamp;<br/>alter table infos add ex tinyint not null default &#39;0&#39;;</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">//删除列</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">alter table t2 drop column c;</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">//重命名列</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">alter table t1 change a b integer;</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">//改变列的类型</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">alter table t1 change b b bigint not null;<br/>alter table infos change list list tinyint not null default &#39;0&#39;;</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">//重命名表</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">alter table t1 rename t2;</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">加索引</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">mysql&gt; alter table tablename change depno depno int(5) not null;<br/>mysql&gt; alter table tablename add index 索引名 (字段名1[，字段名2 …]);<br/>mysql&gt; alter table tablename add index emp_name (name);</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">加主关键字的索引</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">mysql&gt; alter table tablename add primary key(id);</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">加唯一限制条件的索引</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">mysql&gt; alter table tablename add unique emp_name2(cardnumber);</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">删除某个索引</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">mysql&gt;alter table tablename drop index emp_name;</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">修改表：</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">增加字段：</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">mysql&gt; ALTER TABLE table_name ADD field_name field_type;</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">修改原字段名称及类型：</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">mysql&gt; ALTER TABLE table_name CHANGE old_field_name new_field_name field_type;</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">删除字段：</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">mysql&gt; ALTER TABLE table_name DROP field_name;</p><h1 id="ac_title" style="padding: 6px 0px; margin: 0px auto; font-size: 14px; width: 742px; height: 28px; overflow: hidden; text-align: center; font-family: 宋体; line-height: 28px; white-space: normal; background-color: rgb(255, 255, 255);">mysql命令更改表结构：添加、删除、修改字段、调整字段顺序</h1><p style="margin-top: 5px;"><br/></p>', 76),
('mysql查看当前运行的sql语句', 'mysql查看当前运行的sql语句', '<p><strong>（1）通过日志查看</strong></p><p>&nbsp;</p><p>首先你需要创建一个日志文件log.txt ，比如我直接保存在mysql目录下的data目录中间，然后只需要在 mysql的配置文件 my.ini 中最后添加类似如下的一段语句：</p><p>&nbsp;</p><p>log=d:/mysql/data/log.txt</p><p>&nbsp;</p><p>这样可以记录所有的执行过的sql语句!</p><p>&nbsp;</p><p><strong>（2）通过 show processlist 命令来查看</strong></p><p>&nbsp;</p><p>show processlist命令的输出结果显示了有哪些线程正在运行，可以帮助识别出有问题的查询语句，有两种方式使用这个命令。</p><p>&nbsp;</p><p>1. 进入mysql/bin目录下输入mysqladmin processlist;</p><p>&nbsp;</p><p>2. 启动mysql，输入show processlist;</p><p>&nbsp;</p><p>如果有SUPER权限，则可以看到全部的线程，否则，只能看到自己发起的线程（这是指，当前对应的MySQL帐户运行的线程）。至于通过show processlist 命令得到的结果以及意义，可从网上找到相关的解释，本站后续文章也会做详细的介绍。</p><p><br/></p>', 77),
('如何正确创建MySQL索引', '如何正确创建MySQL索引', '<p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">索引可以提高数据的检索效率，也可以降低数据库的IO成本，并且索引还可以降低数据库的排序成本。排序分组操作主要消耗的就是CPU资源和内存，所以能够在排序分组操作中好好的利用索引将会极大地降低CPU资源的消耗。本篇文章将简单的分析一下如何正确创建MySQL数据索引。</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><strong>如何判定是否需要创建索引？</strong></p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><strong><span style="color: rgb(0, 0, 255);">1、较频繁地作为查询条件的字段</span></strong></p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">这个都知道。什么是教频繁呢？分析你执行的所有SQL语句。最好将他们一个个都列出来。然后分析，发现其中有些字段在大部分的SQL语句查询时候都会用到，那么就果断为他建立索引。</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><strong><span style="color: rgb(0, 0, 255);">2、唯一性太差的字段不适合建立索引</span></strong></p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">什么是唯一性太差的字段。如状态字段、类型字段。那些只存储固定几个值的字段，例如用户登录状态、消息的status等。这个涉及到了索引扫描的特性。例如：通过索引查找键值为A和B的某些数据，通过A找到某条相符合的数据，这条数据在X页上面，然后继续扫描，又发现符合A的数据出现在了Y页上面，那么存储引擎就会丢弃X页面的数据，然后存储Y页面上的数据，一直到查找完所有对应A的数据，然后查找B字段，发现X页面上面又有对应B字段的数据，那么他就会再次扫描X页面，等于X页面就会被扫描2次甚至多次。以此类推，所以同一个数据页可能会被多次重复的读取，丢弃，在读取，这无疑给存储引擎极大地增加了IO的负担。</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><strong><span style="color: rgb(0, 0, 255);">3、更新太频繁地字段不适合创建索引</span></strong></p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">当你为这个字段创建索引时候，当你再次更新这个字段数据时，数据库会自动更新他的索引，所以当这个字段更新太频繁地时候那么就是不断的更新索引，性能的影响可想而知。大概被检索几十次会更新一次的字段才比较符合建立索引的规范。而如果一个字段同一个时间段内被更新多次，那么果断不能为他建立索引。</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><strong><span style="color: rgb(0, 0, 255);">4、不会出现在where条件中的字段不该建立索引</span></strong></p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">这个相信大家都知道。</p><p><br/></p>', 79),
('如何写出高效率的正则表达式', '如何写出高效率的正则表达式', '<p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">如果纯粹是为了挑战自己的正则水平，用来实现一些特效（例如使用正则表达式计算质数、解线性方程），效率不是问题；如果所写的<a target="_blank" href="http://www.phpernote.com/php-regular-expression/" style="color: rgb(255, 0, 0);">正则表达式</a>只是为了满足一两次、几十次的运行，<a target="_blank" href="http://www.phpernote.com/tag/%E4%BC%98%E5%8C%96" style="color: rgb(255, 0, 0);">优化</a>与否区别也不太大。但是，如果所写的正则表达式会百万次、千万次地运行，效率就是很大的问题了。我这里总结了几条提升正则表达式运行效率的经验（工作中学到的，看书学来的，自己的体会），贴在这里。如果您有其它的经验而这里没有提及，欢迎赐教。</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">为行文方便，先定义两个概念。</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><strong>误匹配</strong>：指正则表达式所匹配的内容范围超出了所需要范围，有些文本明明不符合要求，但是被所写的正则式“击中了”。例如，如果使用\\d{11}来匹配11位的手机号，\\d{11}不单能匹配正确的<a target="_blank" href="http://www.phpernote.com/tag/%E6%89%8B%E6%9C%BA%E5%8F%B7%E7%A0%81" style="color: rgb(255, 0, 0);">手机号码</a>，它还会匹配98765432100这样的明显不是手机号码的<a target="_blank" href="http://www.phpernote.com/php-string/" style="color: rgb(255, 0, 0);">字符串</a>。我们把这样的匹配称之为误匹配。</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><strong>漏匹配</strong>：指正则表达式所匹配的内容所规定的范围太狭窄，有些文本确实是所需要的，但是所写的正则没有将这种情况囊括在内。例如，使用\\d{18}来匹配18位的身份证号码，就会漏掉结尾是字母X的情况。</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">写出一条正则表达式，既可能<strong>只出现</strong>误匹配（条件写得极宽松，其范围大于目标文本），也可能只出现漏匹配（只描述了目标文本中多种情况种的一种），还可能既有误匹配又有漏匹配。例如，使用\\w+\\.com来匹配.com结尾的域名，既会误匹配abc_.com这样的字串（合法的域名中不含下划线，\\w包含了下划线这种情况），又会漏掉ab-c.com这样的域名（合法域名中可以含中划线，但是\\w不匹配中划线）。</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">精准的正则表达式意味着既无误匹配且无漏匹配。当然，现实中存在这样的情况：只能看到有限数量的文本，根据这些文本写规则，但是这些规则将会用到海量的文本中。这种情况下，尽可能地（如果不是完全地）消除误匹配以及漏匹配，并提升运行效率，就是我们的目标。本文所提出的经验，主要是针对这种情况。</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><strong>掌握语法细节</strong>。正则表达式在各种语言中，其语法大致相同，细节各有千秋。明确所使用语言的正则的语法的细节，是写出正确、高效正则表达式的基础。例如，perl中与\\w等效的匹配范围是[a-zA-Z0-9_]；perl正则式不支持肯定逆序环视中使用可变的重复（variable repetition inside lookbehind，例如(?&lt;=.*)abc），但是.Net语法是支持这一特性的；又如，JavaScript连逆序环视（Lookbehind,如(?&lt;=ab)c）都不支持，而perl和python是支持的。《精通正则表达式》第3章《正则表达式的特性和流派概览》明确地列出了各大派系正则的异同，这篇文章也简要地列出了几种常用语言、工具中正则的比较。对于具体使用者而言，至少应该详细了解正在使用的那种工作语言里正则的语法细节。</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><strong>先粗后精，先加后减</strong>。使用正则表达式语法对于目标文本进行描述和界定，可以像画素描一样，先大致勾勒出框架，再逐步在局步实现细节。仍举刚才的手机号的例子，先界定\\d{11}，总不会错；再细化为1[358]\\d{9}，就向前迈了一大步（至于第二位是不是3、5、8，这里无意深究，只举这样一个例子，说明逐步细化的过程）。这样做的目的是先消除漏匹配（刚开始先尽可能多地匹配，做加法），然后再一点一点地消除误匹配（做减法）。这样有先有后，在考虑时才不易出错，从而向“不误不漏”这个目标迈进。</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><strong>留有余地</strong>。所能看到的文本sample是有限的，而待匹配检验的文本是海量的，暂时不可见的。对于这样的情况，在写正则表达式时要跳出所能见到的文本的圈子，开拓思路，作出“战略性前瞻”。例如，经常收到这样的垃圾短信：“发*票”、“发#漂”。如果要写规则屏蔽这样烦人的垃圾短信，不但要能写出可以匹配当前文本的正则表达式 发[*#](?:票|漂)，还要能够想到 发.(?:票|漂|飘)之类可能出现的“变种”。这在具体的领域或许会有针对性的规则，不多言。这样做的目的是消除漏匹配，延长正则表达式的生命周期。</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><strong>明确</strong>。具体说来，就是谨慎用点号这样的元字符，尽可能不用星号和加号这样的任意量词。只要能确定范围的，例如\\w，就不要用点号；只要能够预测重复次数的，就不要用任意量词。例如，写析取twitter消息的脚本，假设一条消息的xml正文部分结构是&lt;span class=”msg”&gt;…&lt;/span&gt;且正文中无尖括号，那么&lt;span class=”msg”&gt;[^&lt;]{1,480}&lt;/span&gt;这种写法的思路要好于&lt;span class=”msg”&gt;.*&lt;/span&gt;，原因有二：一是使用[^&lt;]，它保证了文本的范围不会超出下一个小于号所在的位置；二是明确长度范围，{1,480}，其依据是一条twitter消息大致能的字符长度范围。当然，480这个长度是否正确还可推敲，但是这种思路是值得借鉴的。说得狠一点，“滥用点号、星号和加号是不环保、不负责任的做法”。</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><strong>不要让稻草压死骆驼</strong>。每使用一个普通括号()而不是非捕获型括号(?:…)，就会保留一部分内存等着你再次访问。这样的正则表达式、无限次地运行次数，无异于一根根稻草的堆加，终于能将骆驼压死。养成合理使用(?:…)括号的习惯。</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><strong>宁简勿繁</strong>。将一条复杂的正则表达式拆分为两条或多条简单的正则表达式，编程难度会降低，运行效率会提升。例如用来消除行首和行尾空白字符的正则表达式s/^\\s+|\\s+$//g;，其运行效率理论上要低于s/^\\s+//g; s/\\s+$//g; 。这个例子出自《精通正则表达式》第五章，书中对它的评论是“它几乎总是最快的，而且显然最容易理解”。既快又容易理解，何乐而不为？工作中我们还有其它的理由要将C==(A|B)这样的正则表达式拆为A和B两条表达式分别执行。例如，虽然A和B这两种情况只要有一种能够击中所需要的文本模式就会成功匹配，但是如果只要有一条子表达式（例如A）会产生误匹配，那么不论其它的子表达式（例如B）效率如何之高，范围如何精准，C的总体精准度也会因A而受到影响。</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><strong>巧妙定位</strong>。有时候，我们需要匹配的the，是作为单词的the（两边有空格），而不是作为单词一部分的t-h-e的有序排列（例如together中的the）。在适当的时候用上^，$，\\b等等定位锚点，能有效提升找到成功匹配、淘汰不成功匹配的效率。</p><p><br/></p>', 80),
('10个最常见的 HTML5 面试题及答案', '10个最常见的 HTML5 面试题及答案', '<p style="line-height: 25.2000007629395px;margin-top: 0px;color: rgb(73, 73, 73);font-family: 宋体;font-size: 14px;white-space: normal;background-color: rgb(255, 255, 255)">这是选择了10个 HTML5 面试问题并给出了答案。这是 Web 开发人员最常见的面试问题，相信你掌握了这些重要的面试问题后一定会觉得你的理解提高了。一起来看看吧。</p><p style="line-height: 25.2000007629395px;margin-top: 0px;color: rgb(73, 73, 73);font-family: 宋体;font-size: 14px;white-space: normal;background-color: rgb(255, 255, 255)">1、新的 HTML5 文档类型和字符集是？</p><p style="line-height: 25.2000007629395px;margin-top: 0px;color: rgb(73, 73, 73);font-family: 宋体;font-size: 14px;white-space: normal;background-color: rgb(255, 255, 255)">&lt;!doctype html&gt;</p><p style="line-height: 25.2000007629395px;margin-top: 0px;color: rgb(73, 73, 73);font-family: 宋体;font-size: 14px;white-space: normal;background-color: rgb(255, 255, 255)">HTML5 使用 UTF-8 编码示例：</p><p style="line-height: 25.2000007629395px;margin-top: 0px;color: rgb(73, 73, 73);font-family: 宋体;font-size: 14px;white-space: normal;background-color: rgb(255, 255, 255)">&lt;meta charset=”UTF-8″&gt;</p><p style="line-height: 25.2000007629395px;margin-top: 0px;color: rgb(73, 73, 73);font-family: 宋体;font-size: 14px;white-space: normal;background-color: rgb(255, 255, 255)">2、HTML5 中如何嵌入音频？</p><p style="line-height: 25.2000007629395px;margin-top: 0px;color: rgb(73, 73, 73);font-family: 宋体;font-size: 14px;white-space: normal;background-color: rgb(255, 255, 255)">HTML5 支持 MP3、Wav 和 Ogg 格式的音频，下面是在网页中嵌入音频的简单示例：</p><p style="line-height: 25.2000007629395px;margin-top: 0px;color: rgb(73, 73, 73);font-family: 宋体;font-size: 14px;white-space: normal;background-color: rgb(255, 255, 255)">&lt;audio controls&gt;<br/>&lt;source src=”jamshed.mp3″ type=”audio/mpeg”&gt;<br/>Your browser does’nt support audio embedding feature.&nbsp;<br/>&lt;/audio&gt;</p><p style="line-height: 25.2000007629395px;margin-top: 0px;color: rgb(73, 73, 73);font-family: 宋体;font-size: 14px;white-space: normal;background-color: rgb(255, 255, 255)">3、HTML5 中如何嵌入视频？</p><p style="line-height: 25.2000007629395px;margin-top: 0px;color: rgb(73, 73, 73);font-family: 宋体;font-size: 14px;white-space: normal;background-color: rgb(255, 255, 255)">和音频类似，HTML5 支持 MP4、WebM 和 Ogg 格式的视频，下面是简单示例：</p><p style="line-height: 25.2000007629395px;margin-top: 0px;color: rgb(73, 73, 73);font-family: 宋体;font-size: 14px;white-space: normal;background-color: rgb(255, 255, 255)">&lt;video width=”450″ height=”340″ controls&gt;<br/>&lt;source src=”jamshed.mp4″ type=”video/mp4″&gt;<br/>Your browser does’nt support video embedding feature.<br/>&lt;/video&gt;</p><p style="line-height: 25.2000007629395px;margin-top: 0px;color: rgb(73, 73, 73);font-family: 宋体;font-size: 14px;white-space: normal;background-color: rgb(255, 255, 255)">4、除了 audio 和 video，HTML5 还有哪些媒体标签？</p><p style="line-height: 25.2000007629395px;margin-top: 0px;color: rgb(73, 73, 73);font-family: 宋体;font-size: 14px;white-space: normal;background-color: rgb(255, 255, 255)">HTML5 对于多媒体提供了强有力的支持，除了 audio 和 video 标签外，还支持以下标签：</p><p style="line-height: 25.2000007629395px;margin-top: 0px;color: rgb(73, 73, 73);font-family: 宋体;font-size: 14px;white-space: normal;background-color: rgb(255, 255, 255)">&lt;embed&gt; 标签定义嵌入的内容，比如插件。</p><p style="line-height: 25.2000007629395px;margin-top: 0px;color: rgb(73, 73, 73);font-family: 宋体;font-size: 14px;white-space: normal;background-color: rgb(255, 255, 255)">&lt;embed type=”video/quicktime” src=”Fishing.mov”&gt;</p><p style="line-height: 25.2000007629395px;margin-top: 0px;color: rgb(73, 73, 73);font-family: 宋体;font-size: 14px;white-space: normal;background-color: rgb(255, 255, 255)">&lt;source&gt; 对于定义多个数据源很有用。</p><p style="line-height: 25.2000007629395px;margin-top: 0px;color: rgb(73, 73, 73);font-family: 宋体;font-size: 14px;white-space: normal;background-color: rgb(255, 255, 255)">&lt;video width=”450″ height=”340″ controls&gt;<br/>&lt;source src=”jamshed.mp4″ type=”video/mp4″&gt;<br/>&lt;source src=”jamshed.ogg” type=”video/ogg”&gt;<br/>&lt;/video&gt;</p><p style="line-height: 25.2000007629395px;margin-top: 0px;color: rgb(73, 73, 73);font-family: 宋体;font-size: 14px;white-space: normal;background-color: rgb(255, 255, 255)">&lt;track&gt; 标签为诸如 video 元素之类的媒介规定外部文本轨道。 用于规定字幕文件或其他包含文本的文件，当媒介播放时，这些文件是可见的。</p><p style="line-height: 25.2000007629395px;margin-top: 0px;color: rgb(73, 73, 73);font-family: 宋体;font-size: 14px;white-space: normal;background-color: rgb(255, 255, 255)">&lt;video width=”450″ height=”340″ controls&gt;<br/>&lt;source src=”jamshed.mp4″ type=”video/mp4″&gt;<br/>&lt;source src=”jamshed.ogg” type=”video/ogg”&gt;<br/>&lt;track kind=”subtitles” label=”English” src=”jamshed_en.vtt” srclang=”en” default&gt;&lt;/track&gt;<br/>&lt;track kind=”subtitles” label=”Arabic” src=”jamshed_ar.vtt” srclang=”ar”&gt;&lt;/track&gt;<br/>&lt;/video&gt;</p><p style="line-height: 25.2000007629395px;margin-top: 0px;color: rgb(73, 73, 73);font-family: 宋体;font-size: 14px;white-space: normal;background-color: rgb(255, 255, 255)">5、HTML5 Canvas 元素有什么用？</p><p style="line-height: 25.2000007629395px;margin-top: 0px;color: rgb(73, 73, 73);font-family: 宋体;font-size: 14px;white-space: normal;background-color: rgb(255, 255, 255)">Canvas 元素用于在网页上绘制图形，该元素标签强大之处在于可以直接在 HTML 上进行图形操作，</p><p style="line-height: 25.2000007629395px;margin-top: 0px;color: rgb(73, 73, 73);font-family: 宋体;font-size: 14px;white-space: normal;background-color: rgb(255, 255, 255)">&lt;canvas id=”canvas1″ width=”300″ height=”100″&gt;&lt;/canvas&gt;</p><p style="line-height: 25.2000007629395px;margin-top: 0px;color: rgb(73, 73, 73);font-family: 宋体;font-size: 14px;white-space: normal;background-color: rgb(255, 255, 255)">6、HTML5 存储类型有什么区别？</p><p style="line-height: 25.2000007629395px;margin-top: 0px;color: rgb(73, 73, 73);font-family: 宋体;font-size: 14px;white-space: normal;background-color: rgb(255, 255, 255)">HTML5 能够本地存储数据，在之前都是使用 cookies 使用的。HTML5 提供了下面两种本地存储方案：</p><p style="line-height: 25.2000007629395px;margin-top: 0px;color: rgb(73, 73, 73);font-family: 宋体;font-size: 14px;white-space: normal;background-color: rgb(255, 255, 255)">localStorage 用于持久化的本地存储，数据永远不会过期，关闭浏览器也不会丢失。sessionStorage 同一个会话中的页面才能访问并且当会话结束后数据也随之销毁。因此sessionStorage不是一种持久化的本地存储，仅仅是会话级别的存储。</p><p style="line-height: 25.2000007629395px;margin-top: 0px;color: rgb(73, 73, 73);font-family: 宋体;font-size: 14px;white-space: normal;background-color: rgb(255, 255, 255)">7、HTML5 有哪些新增的表单元素？</p><p style="line-height: 25.2000007629395px;margin-top: 0px;color: rgb(73, 73, 73);font-family: 宋体;font-size: 14px;white-space: normal;background-color: rgb(255, 255, 255)">HTML5 新增了很多表单元素让开发者构建更优秀的 Web 应用程序。</p><p style="line-height: 25.2000007629395px;margin-top: 0px;color: rgb(73, 73, 73);font-family: 宋体;font-size: 14px;white-space: normal;background-color: rgb(255, 255, 255)">datalist<br/>datetime<br/>output<br/>keygen<br/>date<br/>month<br/>week<br/>time<br/>color<br/>number<br/>range<br/>email<br/>url</p><p style="line-height: 25.2000007629395px;margin-top: 0px;color: rgb(73, 73, 73);font-family: 宋体;font-size: 14px;white-space: normal;background-color: rgb(255, 255, 255)">8、HTML5 废弃了哪些 HTML4 标签？</p><p style="line-height: 25.2000007629395px;margin-top: 0px;color: rgb(73, 73, 73);font-family: 宋体;font-size: 14px;white-space: normal;background-color: rgb(255, 255, 255)">HTML5 废弃了一些过时的，不合理的 HTML 标签：</p><p style="line-height: 25.2000007629395px;margin-top: 0px;color: rgb(73, 73, 73);font-family: 宋体;font-size: 14px;white-space: normal;background-color: rgb(255, 255, 255)">frame<br/>frameset<br/>noframe<br/>applet<br/>big<br/>center<br/>basefront</p><p style="line-height: 25.2000007629395px;margin-top: 0px;color: rgb(73, 73, 73);font-family: 宋体;font-size: 14px;white-space: normal;background-color: rgb(255, 255, 255)">9、HTML5 标准提供了哪些新的 API？</p><p style="line-height: 25.2000007629395px;margin-top: 0px;color: rgb(73, 73, 73);font-family: 宋体;font-size: 14px;white-space: normal;background-color: rgb(255, 255, 255)">HTML5 提供的应用程序 API 主要有：</p><p style="line-height: 25.2000007629395px;margin-top: 0px;color: rgb(73, 73, 73);font-family: 宋体;font-size: 14px;white-space: normal;background-color: rgb(255, 255, 255)">Media API<br/>Text Track API<br/>Application Cache API<br/>User Interaction<br/>Data Transfer API<br/>Command API<br/>Constraint Validation API<br/>History API</p><p style="line-height: 25.2000007629395px;margin-top: 0px;color: rgb(73, 73, 73);font-family: 宋体;font-size: 14px;white-space: normal;background-color: rgb(255, 255, 255)">10、HTML5 应用程序缓存和浏览器缓存有什么区别？</p><p style="line-height: 25.2000007629395px;margin-top: 0px;color: rgb(73, 73, 73);font-family: 宋体;font-size: 14px;white-space: normal;background-color: rgb(255, 255, 255)">应用程序缓存是 HTML5 的重要特性之一，提供了离线使用的功能，让应用程序可以获取本地的网站内容，例如 HTML、CSS、图片以及 JavaScript。这个特性可以提高网站性能，它的实现借助于 manifest 文件，如下：</p><p style="line-height: 25.2000007629395px;margin-top: 0px;color: rgb(73, 73, 73);font-family: 宋体;font-size: 14px;white-space: normal;background-color: rgb(255, 255, 255)">&lt;!doctype html&gt;<br/>&lt;html manifest=”example.appcache”&gt;<br/>......<br/>&lt;/html&gt;</p><p style="line-height: 25.2000007629395px;margin-top: 0px;color: rgb(73, 73, 73);font-family: 宋体;font-size: 14px;white-space: normal;background-color: rgb(255, 255, 255)">与传统浏览器缓存相比，它不强制用户访问的网站内容被缓存。</p><p><br/></p>', 64);
INSERT INTO `blog_article_data` (`keywords`, `description`, `content`, `article_aid`) VALUES
('css设置层的透明，兼容所有浏览器', 'css设置层的透明，兼容所有浏览器', '<p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">html中如果需要设置某一层的背景为透明该如何去设置呢？下面分享一下如何使用css设置透明层效果，经过证实是兼容目前所有浏览器的。</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">首先看一下效果图：</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><img title="css设置层的透明，兼容所有浏览器" alt="css设置层的透明，兼容所有浏览器" width="346" height="248" src="/Upload/ueditor/image/20150616/1434437462150396.jpg" original="/uploadfiles/editor/201308280902091712.jpg" class="imgMouseOut" style="border: 1px solid rgb(204, 204, 204); padding: 3px; background-color: rgb(238, 238, 238);"/></p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">下面是具体的代码（以上效果设置的是0.8）：</p><p><a href="http://www.phpernote.com/div-css/914.html#viewSource" title="查看代码" class="item viewSource" style="color: rgb(255, 0, 0); width: 16px; height: 16px; display: block !important; float: left !important; margin-left: 8px !important; overflow: hidden !important; text-indent: -5000px !important; background-image: url(http://www.phpernote.com/syntaxhighlighter/styles/page_white_code.png) !important; background-repeat: no-repeat !important;">查看代码</a><a href="http://www.phpernote.com/div-css/914.html#printSource" title="打印" class="item printSource" style="color: rgb(255, 0, 0); width: 16px; height: 16px; display: block !important; float: left !important; margin-left: 8px !important; overflow: hidden !important; text-indent: -5000px !important; background-image: url(http://www.phpernote.com/syntaxhighlighter/styles/printer.png) !important; background-repeat: no-repeat !important;">打印</a></p><table width="NaN" height="NaN"><tbody style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;"><tr style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;" class="firstRow"><td class="number" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; color: rgb(175, 175, 175) !important; background: none !important;" width="3" height="NaN"><code style="margin: 0px !important; padding: 0px 0.3em 0px 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; display: block !important; background: none !important;">1</code></td><td class="content" style="margin: 0px !important; padding: 0px 0px 0px 0.5em !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; border-left-width: 3px !important; border-left-color: rgb(108, 226, 108) !important; color: rgb(0, 0, 0) !important; background: none !important;" width="NaN" height="NaN"><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">.</code><code class="value" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(0, 153, 0) !important; background: none !important;">transparent</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">{</code></td></tr></tbody></table><table width="NaN" height="NaN"><tbody style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;"><tr style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;" class="firstRow"><td class="number" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; color: rgb(175, 175, 175) !important; background: none !important;" width="3" height="NaN"><code style="margin: 0px !important; padding: 0px 0.3em 0px 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; display: block !important; background: none !important;">2</code></td><td class="content" style="margin: 0px !important; padding: 0px 0px 0px 0.5em !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; border-left-width: 3px !important; border-left-color: rgb(108, 226, 108) !important; color: rgb(0, 0, 0) !important; background: none !important;" width="NaN" height="NaN"><code class="spaces" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">filter:alpha(opacity=</code><code class="value" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(0, 153, 0) !important; background: none !important;">50</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">);</code></td></tr></tbody></table><table width="NaN" height="NaN"><tbody style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;"><tr style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;" class="firstRow"><td class="number" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; color: rgb(175, 175, 175) !important; background: none !important;" width="3" height="NaN"><code style="margin: 0px !important; padding: 0px 0.3em 0px 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; display: block !important; background: none !important;">3</code></td><td class="content" style="margin: 0px !important; padding: 0px 0px 0px 0.5em !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; border-left-width: 3px !important; border-left-color: rgb(108, 226, 108) !important; color: rgb(0, 0, 0) !important; background: none !important;" width="NaN" height="NaN"><code class="spaces" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">-moz-opacity:</code><code class="value" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(0, 153, 0) !important; background: none !important;">0.5</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">;</code></td></tr></tbody></table><table width="NaN" height="NaN"><tbody style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;"><tr style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;" class="firstRow"><td class="number" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; color: rgb(175, 175, 175) !important; background: none !important;" width="3" height="NaN"><code style="margin: 0px !important; padding: 0px 0.3em 0px 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; display: block !important; background: none !important;">4</code></td><td class="content" style="margin: 0px !important; padding: 0px 0px 0px 0.5em !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; border-left-width: 3px !important; border-left-color: rgb(108, 226, 108) !important; color: rgb(0, 0, 0) !important; background: none !important;" width="NaN" height="NaN"><code class="spaces" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">-khtml-opacity:&nbsp;</code><code class="value" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(0, 153, 0) !important; background: none !important;">0.5</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">;</code></td></tr></tbody></table><table width="NaN" height="NaN"><tbody style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;"><tr style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;" class="firstRow"><td class="number" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; color: rgb(175, 175, 175) !important; background: none !important;" width="3" height="NaN"><code style="margin: 0px !important; padding: 0px 0.3em 0px 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; display: block !important; background: none !important;">5</code></td><td class="content" style="margin: 0px !important; padding: 0px 0px 0px 0.5em !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; border-left-width: 3px !important; border-left-color: rgb(108, 226, 108) !important; color: rgb(0, 0, 0) !important; background: none !important;" width="NaN" height="NaN"><code class="spaces" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">opacity:&nbsp;</code><code class="value" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(0, 153, 0) !important; background: none !important;">0.5</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">;</code></td></tr></tbody></table><table width="NaN" height="NaN"><tbody style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;"><tr style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;" class="firstRow"><td class="number" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; color: rgb(175, 175, 175) !important; background: none !important;" width="3" height="NaN"><code style="margin: 0px !important; padding: 0px 0.3em 0px 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; display: block !important; background: none !important;">6</code></td><td class="content" style="margin: 0px !important; padding: 0px 0px 0px 0.5em !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; border-left-width: 3px !important; border-left-color: rgb(108, 226, 108) !important; color: rgb(0, 0, 0) !important; background: none !important;" width="NaN" height="NaN"><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">}</code></td></tr></tbody></table><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="font-family:Courier New">下面是对以上CSS代码的一些补充说明：</span></p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="font-family:Courier New">opacity:0.5;这个属性是目前在CSS里面设置透明度的标准属性。适用于大多数版本的Firefox，Safari和Opera等浏览器。</span></p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="font-family:Courier New">filter:alpha(opacity=50);这个属性仅仅支持IE浏览器。</span></p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="font-family:Courier New">-moz-opacity:0.5;这个属性是为了向前兼容以前的一些老的Mozilla浏览器，比如：Netscape Navigator。</span></p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="font-family:Courier New">-khtml-opacity: 0.5;这个属性是为了兼容旧版本的Safari浏览器（1.x的），它使用的渲染引擎仍然称为为KTHML，相对于当前的WebKit。</span></p><p><br/></p>', 69),
('网站空间安全注意事项', '网站空间安全注意事项', '<p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">本人建设网站，维护网站已经有三年的时间了，小至企业站，大至电子商务网站，门户网站都做过。下面我就拿我的一些客户所遇到的一些问题包括网站安全问题做一些分享，希望能帮到所有还不是很了解网站操作以及网站安全防护相关方面的朋友。</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">（1）将你的网站程序上传至 wwwroot 目录下（如果您购买的是虚拟主机的话）。此目录是您网站的根目录，此目录不要删除，如果删除了，请重新建立一个。</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">（2）网站的默认首页文件名：index.htm、index.html、index.asp、index.php;一般虚拟主机都可以通过空间服务商提供的控制面板自行修改设定。</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">（3）请您不要随意更改主机的默认配置或删除 wwwroot 等默认配置文件及目录否则会直接影响到客户对网站的访问和管理。</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">（4）如果出现“文件上传了.可是文件大小为零”这一情况，说明您的空间已满，请您清理站点文件或者加购空间。</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">（5）各种密码一定要设计的复杂。尤其是使用开源程序开发的网站（比如织梦）。我已经处理过三个遭遇木马代码嵌入的网站了，都是使用织梦开发的。我也很奇怪织梦名气这么大，怎么这么容易被拿下。细细想下也许正因为是开源，所以攻击者也非常熟悉你网站里面的一些套路。在攻击你网站的时候，如果你的各种密码都比较弱的话，拿下应该不是一件难事。本人的建议是将各种字符类型都用上，比如这个密码：</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">Ar!#123.@`Chm</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">要破解起来还是相当有难度的。不过对于这种密码记得一定要用记事本存放的哦。</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">（6）不要随意将网站源文件进行打包然后放在网站的根目录下。分析我自己的网站访问路径，经常就看见有 http://www.phpernote.com/wwwroot.rar http://www.phpernote.com/aa.rar 等等此类诡异的 url。很明显，不坏好意的人是想试探我是否将网站源码打包了，如果我果真这么做了，并将压缩包名字名为 wwwroot.rar ，这个后果就严重了，他就直接通过这个链接将我打包的文件给下载了，所以这一点一定要小心。</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">（7）注意 robots 文件的运用，将一些不应该让搜索引擎抓取的文件以及目录写入到该文件中防止搜索引擎抓取不必要的内容从而影响必要内容的抓取。</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">（8）在网站的每个目录下面都存放一个空的 index.html 文件，这样可以防止一些安全工作做的很差的虚拟主机直接进行列表目录。虽然这种情况现在已经很少见了。但做好这种防护工作还是非常有必要的。</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">（9）另外使用开源程序开发的网站程序一定要做好各种安全工作，比如将后台目录改名等等。据统计分析，本站每天都被各种扫描软件扫描，都是在扫描本站后台地址，常见的构造地址就是 wordpress 织梦这种路径来进行猜测。可惜本站非开源软件开发。所以对于这一点本人还是非常放心的。</p><p><br/></p>', 70);
INSERT INTO `blog_article_data` (`keywords`, `description`, `content`, `article_aid`) VALUES
('网页背景音乐的设置方法，兼容所有浏览器', '网页背景音乐的设置方法，兼容所有浏览器', '<p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">给网页设置背景音乐本是个很平常的功能，可最近却为这个大伤脑筋，原本一段好好的背景音乐代码在各种浏览器下都是好好的，但在客户的苹果电脑上的苹果<a target="_blank" href="http://www.phpernote.com/tag/%E6%B5%8F%E8%A7%88%E5%99%A8" style="color: rgb(255, 0, 0);">浏览器</a>里面就是没有声音，不过最终还是另辟蹊跷的给解决了，说他兼容所有浏览器，我想他既然连苹果这个怪胎都兼容了，其他的应该不会再出什么状况了吧。</p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">先发一段正常的背景音乐设置代码：</p><p><a href="http://www.phpernote.com/seo/831.html#viewSource" title="查看代码" class="item viewSource" style="color: rgb(255, 0, 0); width: 16px; height: 16px; display: block !important; float: left !important; margin-left: 8px !important; overflow: hidden !important; text-indent: -5000px !important; background-image: url(http://www.phpernote.com/syntaxhighlighter/styles/page_white_code.png) !important; background-repeat: no-repeat !important;">查看代码</a><a href="http://www.phpernote.com/seo/831.html#printSource" title="打印" class="item printSource" style="color: rgb(255, 0, 0); width: 16px; height: 16px; display: block !important; float: left !important; margin-left: 8px !important; overflow: hidden !important; text-indent: -5000px !important; background-image: url(http://www.phpernote.com/syntaxhighlighter/styles/printer.png) !important; background-repeat: no-repeat !important;">打印</a></p><table width="NaN" height="NaN"><tbody style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;"><tr style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;" class="firstRow"><td class="number" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; color: rgb(175, 175, 175) !important; background: none !important;" width="3" height="NaN"><code style="margin: 0px !important; padding: 0px 0.3em 0px 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; display: block !important; background: none !important;">1</code></td><td class="content" style="margin: 0px !important; padding: 0px 0px 0px 0.5em !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; border-left-width: 3px !important; border-left-color: rgb(108, 226, 108) !important; color: rgb(0, 0, 0) !important; background: none !important;" width="NaN" height="NaN"><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&lt;</code><code class="keyword" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-weight: bold !important; font-size: 1em !important; min-height: inherit !important; color: rgb(0, 102, 153) !important; background: none !important;">object</code>&nbsp;<code class="color1" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(128, 128, 128) !important; background: none !important;">data</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">=</code><code class="string" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: blue !important; background: none !important;">&quot;{$bgsound}&quot;</code>&nbsp;<code class="color1" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(128, 128, 128) !important; background: none !important;">type</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">=</code><code class="string" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: blue !important; background: none !important;">&quot;application/x-mplayer2&quot;</code>&nbsp;<code class="color1" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(128, 128, 128) !important; background: none !important;">width</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">=</code><code class="string" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: blue !important; background: none !important;">&quot;0&quot;</code>&nbsp;<code class="color1" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(128, 128, 128) !important; background: none !important;">height</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">=</code><code class="string" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: blue !important; background: none !important;">&quot;0&quot;</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&gt;</code></td></tr></tbody></table><table width="NaN" height="NaN" style="width: 568px;"><tbody style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;"><tr style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;" class="firstRow"><td class="number" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; color: rgb(175, 175, 175) !important; background: none !important;" width="3" height="NaN"><code style="margin: 0px !important; padding: 0px 0.3em 0px 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; display: block !important; background: none !important;">2</code></td><td class="content" style="margin: 0px !important; padding: 0px 0px 0px 0.5em !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; border-left-width: 3px !important; border-left-color: rgb(108, 226, 108) !important; color: rgb(0, 0, 0) !important; background: none !important;" width="NaN" height="NaN"><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&lt;</code><code class="keyword" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-weight: bold !important; font-size: 1em !important; min-height: inherit !important; color: rgb(0, 102, 153) !important; background: none !important;">param</code>&nbsp;<code class="color1" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(128, 128, 128) !important; background: none !important;">name</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">=</code><code class="string" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: blue !important; background: none !important;">&quot;src&quot;</code>&nbsp;<code class="color1" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(128, 128, 128) !important; background: none !important;">value</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">=</code><code class="string" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: blue !important; background: none !important;">&quot;<a href="http://www.phpernote.com/bgsound.mid" style="color: rgb(255, 0, 0);">http://www.phpernote.com/bgsound.mid</a>&quot;</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&gt;</code></td></tr></tbody></table><table width="NaN" height="NaN"><tbody style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;"><tr style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;" class="firstRow"><td class="number" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; color: rgb(175, 175, 175) !important; background: none !important;" width="3" height="NaN"><code style="margin: 0px !important; padding: 0px 0.3em 0px 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; display: block !important; background: none !important;">3</code></td><td class="content" style="margin: 0px !important; padding: 0px 0px 0px 0.5em !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; border-left-width: 3px !important; border-left-color: rgb(108, 226, 108) !important; color: rgb(0, 0, 0) !important; background: none !important;" width="NaN" height="NaN"><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&lt;</code><code class="keyword" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-weight: bold !important; font-size: 1em !important; min-height: inherit !important; color: rgb(0, 102, 153) !important; background: none !important;">param</code>&nbsp;<code class="color1" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(128, 128, 128) !important; background: none !important;">name</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">=</code><code class="string" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: blue !important; background: none !important;">&quot;autostart&quot;</code>&nbsp;<code class="color1" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(128, 128, 128) !important; background: none !important;">value</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">=</code><code class="string" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: blue !important; background: none !important;">&quot;1&quot;</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&gt;</code></td></tr></tbody></table><table width="NaN" height="NaN"><tbody style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;"><tr style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;" class="firstRow"><td class="number" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; color: rgb(175, 175, 175) !important; background: none !important;" width="3" height="NaN"><code style="margin: 0px !important; padding: 0px 0.3em 0px 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; display: block !important; background: none !important;">4</code></td><td class="content" style="margin: 0px !important; padding: 0px 0px 0px 0.5em !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; border-left-width: 3px !important; border-left-color: rgb(108, 226, 108) !important; color: rgb(0, 0, 0) !important; background: none !important;" width="NaN" height="NaN"><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&lt;</code><code class="keyword" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-weight: bold !important; font-size: 1em !important; min-height: inherit !important; color: rgb(0, 102, 153) !important; background: none !important;">param</code>&nbsp;<code class="color1" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(128, 128, 128) !important; background: none !important;">name</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">=</code><code class="string" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: blue !important; background: none !important;">&quot;playcount&quot;</code>&nbsp;<code class="color1" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: rgb(128, 128, 128) !important; background: none !important;">value</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">=</code><code class="string" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; color: blue !important; background: none !important;">&quot;infinite&quot;</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&gt;</code></td></tr></tbody></table><table width="NaN" height="NaN"><tbody style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;"><tr style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; background: none !important;" class="firstRow"><td class="number" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; color: rgb(175, 175, 175) !important; background: none !important;" width="3" height="NaN"><code style="margin: 0px !important; padding: 0px 0.3em 0px 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; display: block !important; background: none !important;">5</code></td><td class="content" style="margin: 0px !important; padding: 0px 0px 0px 0.5em !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: inherit !important; border-left-width: 3px !important; border-left-color: rgb(108, 226, 108) !important; color: rgb(0, 0, 0) !important; background: none !important;" width="NaN" height="NaN"><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&lt;/</code><code class="keyword" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-weight: bold !important; font-size: 1em !important; min-height: inherit !important; color: rgb(0, 102, 153) !important; background: none !important;">object</code><code class="plain" style="margin: 0px !important; padding: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, Courier, monospace !important; font-size: 1em !important; min-height: inherit !important; background: none !important;">&gt;</code></td></tr></tbody></table><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="font-family:Courier New">这个在<a target="_blank" href="http://www.phpernote.com/tag/IE" style="color: rgb(255, 0, 0);">ie</a>&nbsp;firefox 谷歌浏览器下都是木有问题的，但是在苹果操作系统下的苹果浏览器里面却形同虚设。其实这个我猜想的原因是和苹果自吹的什么可阻拦网站广告背景音乐的新专利有关，扯淡的东西，不知道他这个起了多大的作用，倒是让我们这些想设置背景音乐的苦恼了半天。最后苦苦思索想到的办法是将以上代码中的 width 和 height 的值设置为 1 即可。</span></p><p style="line-height: 25.2000007629395px; margin-top: 0px; color: rgb(73, 73, 73); font-family: 宋体; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="font-family:Courier New">因为貌似将以上代码设置display:none或者宽高为0的时候，苹果浏览器就不播放网页里面的背景音乐了，宽高都设置为1之后，虽然他在网页上也占了一像素的空间，但如果你不拿着放大镜看的话，基本是看不到的，最重要的是苹果的专利对这个就失效了。</span></p><p><br/></p>', 71);

-- --------------------------------------------------------

--
-- 表的结构 `blog_attachment`
--

CREATE TABLE IF NOT EXISTS `blog_attachment` (
  `id` int(11) NOT NULL,
  `name` varchar(30) NOT NULL DEFAULT '',
  `filename` varchar(40) NOT NULL DEFAULT '',
  `path` varchar(20) NOT NULL DEFAULT '',
  `extension` varchar(20) NOT NULL DEFAULT '',
  `createtime` int(11) NOT NULL DEFAULT '0',
  `size` int(11) NOT NULL DEFAULT '0'
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='缩略图上传图片表';

-- --------------------------------------------------------

--
-- 表的结构 `blog_cate`
--

CREATE TABLE IF NOT EXISTS `blog_cate` (
  `cate_id` smallint(5) unsigned NOT NULL COMMENT '分类表主键id',
  `cate_name` char(20) NOT NULL DEFAULT '' COMMENT '分类名称',
  `cate_pid` smallint(5) unsigned NOT NULL DEFAULT '0' COMMENT '父级id',
  `cate_sort` smallint(5) unsigned NOT NULL DEFAULT '0' COMMENT '分类排序',
  `is_show` enum('0','1') NOT NULL DEFAULT '1' COMMENT '是否显示分类,0为不显示，1为显示',
  `cate_url` varchar(100) NOT NULL DEFAULT '' COMMENT '是否选择跳转链接URL 1为统一走栏目 2位单独走跳转链接'
) ENGINE=MyISAM AUTO_INCREMENT=66 DEFAULT CHARSET=utf8 COMMENT='分类表';

--
-- 转存表中的数据 `blog_cate`
--

INSERT INTO `blog_cate` (`cate_id`, `cate_name`, `cate_pid`, `cate_sort`, `is_show`, `cate_url`) VALUES
(58, '模板分享', 0, 5, '1', ''),
(46, 'Div+css', 43, 4, '1', ''),
(47, 'JavaScript', 43, 4, '1', ''),
(48, 'Jquery', 43, 4, '1', ''),
(57, '开发工具', 0, 6, '1', ''),
(50, 'laravel', 44, 5, '1', ''),
(53, '服务器', 0, 8, '1', ''),
(52, 'ThinkPhp', 44, 5, '1', ''),
(59, '关于Me', 0, 1, '1', '/about_me.html'),
(43, 'Web前端', 0, 10, '1', ''),
(44, 'PHP后端', 0, 9, '1', ''),
(60, 'Linux', 53, 99, '1', ''),
(61, 'Nginx', 53, 99, '1', ''),
(62, 'Apache', 53, 99, '1', ''),
(64, 'Ios', 53, 99, '1', ''),
(65, 'SQL', 44, 99, '1', '');

-- --------------------------------------------------------

--
-- 表的结构 `blog_comment`
--

CREATE TABLE IF NOT EXISTS `blog_comment` (
  `coid` smallint(5) unsigned NOT NULL COMMENT '评论主键id',
  `pid` smallint(5) unsigned NOT NULL DEFAULT '0' COMMENT '父级id',
  `comcon` varchar(255) NOT NULL DEFAULT '' COMMENT '评论内容',
  `addtime` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '发表时间',
  `user_uid` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '所属用户uid',
  `article_aid` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '所属文章aid'
) ENGINE=MyISAM AUTO_INCREMENT=17 DEFAULT CHARSET=utf8 COMMENT='文章评论表';

--
-- 转存表中的数据 `blog_comment`
--

INSERT INTO `blog_comment` (`coid`, `pid`, `comcon`, `addtime`, `user_uid`, `article_aid`) VALUES
(1, 0, '我是评论1', 0, 1, 1),
(3, 0, '我是评论4', 0, 2, 2),
(5, 0, '啦啦啦啦', 0, 3, 1),
(4, 0, '我是评论2', 0, 1, 3),
(6, 0, '好厉害', 0, 1, 3),
(7, 0, '123', 0, 2, 46),
(8, 0, '你好', 1434422217, 2, 46),
(9, 0, '123123', 1434422821, 2, 45),
(10, 0, 'hao \r\n!', 1434422947, 2, 45),
(11, 0, '非常好！', 1434423872, 2, 45),
(12, 0, '激发狂风巨浪', 1434425743, 2, 46),
(13, 0, 'sad', 1434432756, 2, 55),
(14, 0, '很不错~', 1434432791, 2, 55),
(15, 0, '非常不错~', 1436925891, 8, 64),
(16, 0, '非常好！！', 1436925950, 2, 70);

-- --------------------------------------------------------

--
-- 表的结构 `blog_link`
--

CREATE TABLE IF NOT EXISTS `blog_link` (
  `link_id` int(10) unsigned NOT NULL COMMENT '友情链接主键id',
  `link_name` varchar(30) NOT NULL DEFAULT '' COMMENT '友情链接名称',
  `link_sort` smallint(5) unsigned NOT NULL DEFAULT '100' COMMENT '排序',
  `link_url` varchar(75) NOT NULL DEFAULT '' COMMENT '友情链接地址'
) ENGINE=MyISAM AUTO_INCREMENT=132 DEFAULT CHARSET=utf8 COMMENT='友情链接';

--
-- 转存表中的数据 `blog_link`
--

INSERT INTO `blog_link` (`link_id`, `link_name`, `link_sort`, `link_url`) VALUES
(124, '百度', 1, 'http://www.baidu.com'),
(127, 'GitHub', 100, 'https://github.com'),
(128, 'Bootstrap', 100, 'http://www.bootcss.com/'),
(129, 'Laravel中国', 100, 'https://learnku.com/laravel/docs'),
(130, '寇寇博客', 100, 'http://www.koukousky.com/'),
(131, 'Laravel5.6文档社区', 100, 'https://learnku.com/docs/laravel/5.6');

-- --------------------------------------------------------

--
-- 表的结构 `blog_tag`
--

CREATE TABLE IF NOT EXISTS `blog_tag` (
  `tag_id` smallint(5) unsigned NOT NULL COMMENT '标签主键id',
  `tag_name` varchar(45) NOT NULL DEFAULT '' COMMENT '标签名称'
) ENGINE=MyISAM AUTO_INCREMENT=34 DEFAULT CHARSET=utf8 COMMENT='文章标签';

--
-- 转存表中的数据 `blog_tag`
--

INSERT INTO `blog_tag` (`tag_id`, `tag_name`) VALUES
(1, 'php'),
(2, 'nginx'),
(27, 'Linux'),
(28, 'jquery'),
(29, 'JavaScript'),
(30, 'CSS+Div'),
(31, 'Vue'),
(32, 'ajax'),
(33, 'SQL');

-- --------------------------------------------------------

--
-- 表的结构 `blog_test`
--

CREATE TABLE IF NOT EXISTS `blog_test` (
  `id` int(10) unsigned NOT NULL,
  `test` text
) ENGINE=MyISAM AUTO_INCREMENT=10 DEFAULT CHARSET=utf8;

--
-- 转存表中的数据 `blog_test`
--

INSERT INTO `blog_test` (`id`, `test`) VALUES
(1, '1'),
(2, '18:19'),
(3, '1'),
(4, '18:19'),
(5, '1'),
(6, '18:19'),
(7, '1'),
(8, '18:19'),
(9, '"<xml>\\n    <ToUserName><![CDATA[gh_27fd30575517]]><\\/ToUserName>\\n    <FromUserName><![CDATA[oTDNi1h3TOiF_SQGBXFUNgVZWx8Q]]><\\/FromUserName>\\n    <CreateTime>1553164047<\\/CreateTime>\\n    <MsgType><![CDATA[text]]><\\/MsgType>\\n    <Content><![CDATA[\\u6587\\u672c]]><\\/Content>\\n    <MsgId>22235962219950716<\\/MsgId>\\n    <Encrypt><![CDATA[HVQ3gtBPBy5G0qcRWZcRl\\/WKt74WJK38tNmLHg1tXuhJbZgRSqMhdAwFtYHUDAh+B5QAuGGQ2+ZgsRbzUV9YDv6eLt\\/TMNG9Jsdrhn6YzBt9X5i+zaUIK3GV9wqNftWeiAvWzxCT4obXq6X710mK8QLv7\\/hW88210Jm1lHkVACnDsJT2hiWt827ip8nBM5EpiPKSnB2+7h029\\/QmxKUbqjl\\/xVRP9\\/LpbUBPWMSKjQTHO\\/SAAyS21SkTGlOHiFzwiCSZjyQ4SQ2rStNaqoDxymPc3pYHeX9PtGF5qjFPvC8fTLrm3fAcC+dMvdOPclW\\/vQCJRiXMzNbyPqN4PNZy4cBIGFIo8pim8z6itcjeDElIL95QHobZFBKLn6QvxkVfaZ9dHeijCnmYw7Vm78ZPpk5Q5Xf2YTfCgM+357eCINM=]]><\\/Encrypt>\\n<\\/xml>\\n"');

-- --------------------------------------------------------

--
-- 表的结构 `blog_webset`
--

CREATE TABLE IF NOT EXISTS `blog_webset` (
  `webset_id` smallint(5) unsigned NOT NULL COMMENT '主键',
  `webset_name` varchar(15) NOT NULL DEFAULT '' COMMENT '配置项名称',
  `webset_value` varchar(70) NOT NULL DEFAULT '' COMMENT '配置值',
  `webset_des` varchar(255) NOT NULL DEFAULT '' COMMENT '配置项详细描述'
) ENGINE=MyISAM AUTO_INCREMENT=25 DEFAULT CHARSET=utf8 COMMENT='站点配置';

--
-- 转存表中的数据 `blog_webset`
--

INSERT INTO `blog_webset` (`webset_id`, `webset_name`, `webset_value`, `webset_des`) VALUES
(1, 'title', '陶太富的博客', '网站名称'),
(2, 'email', '729589198@qq.com', '站长邮箱'),
(3, 'copyright', 'Copyright© 2017 京ICP备18055675号-1 ', '网站版权信息');

--
-- Indexes for dumped tables
--

--
-- Indexes for table `blog_admin`
--
ALTER TABLE `blog_admin`
  ADD PRIMARY KEY (`admin_id`),
  ADD UNIQUE KEY `username_UNIQUE` (`admin_username`);

--
-- Indexes for table `blog_arc_tag`
--
ALTER TABLE `blog_arc_tag`
  ADD KEY `fk_article_tag_article1_idx` (`arc_id`),
  ADD KEY `fk_article_tag_tag1_idx` (`tag_id`);

--
-- Indexes for table `blog_article`
--
ALTER TABLE `blog_article`
  ADD PRIMARY KEY (`arc_id`),
  ADD KEY `fk_cmd_article_cms_category_idx` (`cate_id`);

--
-- Indexes for table `blog_article_data`
--
ALTER TABLE `blog_article_data`
  ADD KEY `fk_article_data_article1_idx` (`article_aid`);

--
-- Indexes for table `blog_attachment`
--
ALTER TABLE `blog_attachment`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `blog_cate`
--
ALTER TABLE `blog_cate`
  ADD PRIMARY KEY (`cate_id`);

--
-- Indexes for table `blog_comment`
--
ALTER TABLE `blog_comment`
  ADD PRIMARY KEY (`coid`),
  ADD KEY `fk_comment_user1_idx` (`user_uid`),
  ADD KEY `fk_comment_article1_idx` (`article_aid`);

--
-- Indexes for table `blog_link`
--
ALTER TABLE `blog_link`
  ADD PRIMARY KEY (`link_id`);

--
-- Indexes for table `blog_tag`
--
ALTER TABLE `blog_tag`
  ADD PRIMARY KEY (`tag_id`);

--
-- Indexes for table `blog_test`
--
ALTER TABLE `blog_test`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `blog_webset`
--
ALTER TABLE `blog_webset`
  ADD PRIMARY KEY (`webset_id`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `blog_admin`
--
ALTER TABLE `blog_admin`
  MODIFY `admin_id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '用户表主键id',AUTO_INCREMENT=28;
--
-- AUTO_INCREMENT for table `blog_article`
--
ALTER TABLE `blog_article`
  MODIFY `arc_id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '文章表主键id',AUTO_INCREMENT=165;
--
-- AUTO_INCREMENT for table `blog_attachment`
--
ALTER TABLE `blog_attachment`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;
--
-- AUTO_INCREMENT for table `blog_cate`
--
ALTER TABLE `blog_cate`
  MODIFY `cate_id` smallint(5) unsigned NOT NULL AUTO_INCREMENT COMMENT '分类表主键id',AUTO_INCREMENT=66;
--
-- AUTO_INCREMENT for table `blog_comment`
--
ALTER TABLE `blog_comment`
  MODIFY `coid` smallint(5) unsigned NOT NULL AUTO_INCREMENT COMMENT '评论主键id',AUTO_INCREMENT=17;
--
-- AUTO_INCREMENT for table `blog_link`
--
ALTER TABLE `blog_link`
  MODIFY `link_id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '友情链接主键id',AUTO_INCREMENT=132;
--
-- AUTO_INCREMENT for table `blog_tag`
--
ALTER TABLE `blog_tag`
  MODIFY `tag_id` smallint(5) unsigned NOT NULL AUTO_INCREMENT COMMENT '标签主键id',AUTO_INCREMENT=34;
--
-- AUTO_INCREMENT for table `blog_test`
--
ALTER TABLE `blog_test`
  MODIFY `id` int(10) unsigned NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=10;
--
-- AUTO_INCREMENT for table `blog_webset`
--
ALTER TABLE `blog_webset`
  MODIFY `webset_id` smallint(5) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键',AUTO_INCREMENT=25;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
